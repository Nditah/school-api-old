{"version":3,"sources":["../../src/config/credentials.js"],"names":["dotenv","config","mongooseOptions","useNewUrlParser","autoIndex","dbName","useFindAndModify","autoReconnect","useCreateIndex","reconnectTries","Number","MAX_VALUE","reconnectInterval","poolSize","bufferMaxEntries","connectTimeoutMS","socketTimeoutMS","family","keepAlive","keepAliveInitialDelay","getCredentials","development","uri","options","Object","assign","production","process","env","MONGODB_URI","NODE_ENV","credentials"],"mappings":";;;;;;AAAA;;;;;;AAEAA,iBAAOC,MAAP;;AAEA,IAAMC,kBAAkB;AACpBC,qBAAiB,IADG;AAEpBC,eAAW,IAFS,EAEH;AACjBC,YAAQ,OAHY;AAIpBC,sBAAkB,KAJE;AAKpBC,mBAAe,IALK;AAMpBC,oBAAgB,IANI;AAOpBC,oBAAgBC,OAAOC,SAPH,EAOc;AAClCC,uBAAmB,GARC,EAQI;AACxBC,cAAU,EATU,EASN;AACd;AACAC,sBAAkB,CAXE;AAYpBC,sBAAkB,KAZE,EAYK;AACzBC,qBAAiB,KAbG,EAaI;AACxBC,YAAQ,CAdY,EAcT;AACXC,eAAW,IAfS;AAgBpBC,2BAAuB;AAhBH,CAAxB;;AAmBA,IAAMC,iBAAiB,SAAjBA,cAAiB,GAAM;AACzB,QAAMC,cAAc;AAChBC,aAAK,kCADW;AAEhBC,iBAASC,OAAOC,MAAP,CAAcvB,eAAd,EAA+B;AACpCG,oBAAQ,QAD4B;AAEpCI,4BAAgB,EAFoB;AAGpCI,sBAAU;AAH0B,SAA/B;AAFO,KAApB;;AASA,QAAMa,aAAa;AACfJ,aAAKK,QAAQC,GAAR,CAAYC,WADF;AAEfN,iBAASC,OAAOC,MAAP,CAAcvB,eAAd,EAA+B;AACpCO,4BAAgB,GADoB;AAEpCG,+BAAmB,GAFiB;AAGpCC,sBAAU;AAH0B,SAA/B;AAFM,KAAnB;;AASA,YAAQc,QAAQC,GAAR,CAAYE,QAApB;AACA,aAAK,aAAL;AACI,mBAAOT,WAAP;;AAEJ,aAAK,YAAL;AACI,mBAAOK,UAAP;;AAEJ;AACI,mBAAOL,WAAP;AARJ;AAUH,CA7BD;;AA+BA,IAAMU,cAAcX,gBAApB;;kBAEeW,W","file":"credentials.js","sourcesContent":["import dotenv from \"dotenv\";\n\ndotenv.config();\n\nconst mongooseOptions = {\n    useNewUrlParser: true,\n    autoIndex: true, // Don't build indexes\n    dbName: \"peace\",\n    useFindAndModify: false,\n    autoReconnect: true,\n    useCreateIndex: true,\n    reconnectTries: Number.MAX_VALUE, // Never stop trying to reconnect\n    reconnectInterval: 500, // Reconnect every 500ms\n    poolSize: 10, // Maintain up to 10 socket connections\n    // If not connected, return errors immediately rather than waiting for reconnect\n    bufferMaxEntries: 0,\n    connectTimeoutMS: 10000, // Give up initial connection after 10 seconds\n    socketTimeoutMS: 45000, // Close sockets after 45 seconds of inactivity\n    family: 4, // Use IPv4, skip trying IPv6\n    keepAlive: true,\n    keepAliveInitialDelay: 300000,\n};\n\nconst getCredentials = () => {\n    const development = {\n        uri: \"mongodb://localhost:27017/school\",\n        options: Object.assign(mongooseOptions, {\n            dbName: \"school\",\n            reconnectTries: 10,\n            poolSize: 5,\n        }),\n    };\n\n    const production = {\n        uri: process.env.MONGODB_URI,\n        options: Object.assign(mongooseOptions, {\n            reconnectTries: 500,\n            reconnectInterval: 500,\n            poolSize: 10,\n        }),\n    };\n\n    switch (process.env.NODE_ENV) {\n    case \"development\":\n        return development;\n\n    case \"production\":\n        return production;\n\n    default:\n        return development;\n    }\n};\n\nconst credentials = getCredentials();\n\nexport default credentials;\n"]}