{"version":3,"sources":["../../../../src/api/general/bank/routes.js"],"names":["express","checkAuth","isValidStaff","fetchRecord","createRecord","updateRecord","deleteRecord","router","Router","get","post","put","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,mCAAxC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkDC,YAAlD,QAAsE,cAAtE;;AAEA,MAAMC,SAASP,QAAQQ,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAD,OAAOE,GAAP,CAAW,QAAX,EAAqB,CAACR,SAAD,EAAYC,YAAZ,CAArB,EAAgDC,WAAhD;;AAEA;;;;;;;;;;;;;;;;;AAiBAI,OAAOG,IAAP,CAAY,QAAZ,EAAsB,CAACT,SAAD,EAAYC,YAAZ,CAAtB,EAAiDE,YAAjD;;AAEA;;;;;;;;;;;;;;;;;AAiBAG,OAAOI,GAAP,CAAW,kBAAX,EAA+B,CAACV,SAAD,EAAYC,YAAZ,CAA/B,EAA0DG,YAA1D;;AAEA;;;;;;;;;;AAUAE,OAAOK,MAAP,CAAc,kBAAd,EAAkC,CAACX,SAAD,EAAYC,YAAZ,CAAlC,EAA6DI,YAA7D;;AAEA,eAAeC,MAAf","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/banks?id={recordId} Retrieve one or all records\n * @apiName RetrieveBank\n * @apiGroup Bank\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/banks?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of Corporate commercial banks operating Groups bank account(s)\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/banks\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/banks Create banks\n * @apiName CreateBank\n * @apiGroup Bank\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {String} name Bank full name (required)\n * @apiParam {String} sort_code Bank sort_code (required)\n * @apiParam {String} bank_code Bank bank_code (required)\n * @apiParam {String} country_iso2 Bank country_iso2 (optional)\n * @apiParam {String} contact_person Bank contact_person (optional)\n * @apiParam {String} website Bank website (optional)\n * @apiSuccess {Object} Bank Bank's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Bank not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/banks\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/banks/{recordId} Update banks\n * @apiName UpdateBank\n * @apiGroup Bank\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {String} name Bank full name (required)\n * @apiParam {String} sort_code Bank sort_code (required)\n * @apiParam {String} bank_code Bank bank_code (required)\n * @apiParam {String} country_iso2 Bank country_iso2 (optional)\n * @apiParam {String} contact_person Bank contact_person (optional)\n * @apiParam {String} website Bank website (optional)\n * @apiSuccess {Object} Bank Bank's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Bank not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/banks/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/banks/{recordId} Delete banks\n * @apiName DeleteBank\n * @apiGroup Bank\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Bank not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/banks/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}