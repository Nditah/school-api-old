{"version":3,"sources":["../../../../src/api/general/bank/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","name","Joi","string","trim","required","sort_code","bank_code","country_iso2","optional","contact_person","website","created_by","schemaUpdate","updated_by","schema","type","String","unique","default","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","Bank","model","insertMany","table"],"mappings":";;;;;;;AAYA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;AAdA;AACA;;;;;;;;;;;IAmBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADkB;AAExBC,eAAWJ,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAFa;AAGxBE,eAAWL,cAAIC,MAAJ,GAAaE,QAAb,EAHa;AAIxBG,kBAAcN,cAAIC,MAAJ,GAAaM,QAAb,EAJU;AAKxBC,oBAAgBR,cAAIC,MAAJ,GAAaM,QAAb,EALQ;AAMxBE,aAAST,cAAIC,MAAJ,GAAaM,QAAb,EANe;AAOxBG,gBAAYV,cAAIC,MAAJ,GAAaE,QAAb;AAPY,CAArB;;AAUA,IAAMQ,sCAAe;AACxBZ,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBK,QAApB,EADkB;AAExBH,eAAWJ,cAAIC,MAAJ,GAAaC,IAAb,GAAoBK,QAApB,EAFa;AAGxBF,eAAWL,cAAIC,MAAJ,GAAaM,QAAb,EAHa;AAIxBD,kBAAcN,cAAIC,MAAJ,GAAaM,QAAb,EAJU;AAKxBC,oBAAgBR,cAAIC,MAAJ,GAAaM,QAAb,EALQ;AAMxBE,aAAST,cAAIC,MAAJ,GAAaM,QAAb,EANe;AAOxBK,gBAAYZ,cAAIC,MAAJ,GAAaE,QAAb;AAPY,CAArB;;AAUA,IAAMU,0BAAS;AAClBd,UAAM,EAAEe,MAAMC,MAAR,EAAgBZ,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAAmDa,QAAQ,IAA3D,EADY;AAElBZ,eAAW,EAAEU,MAAMC,MAAR,EAAgBZ,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAFO;AAGlBE,eAAW,EAAES,MAAMC,MAAR,EAAgBZ,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAHO;AAIlBG,kBAAc,EAAEQ,MAAMC,MAAR,EAAgBZ,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAAmDc,SAAS,IAA5D,EAJI;AAKlBT,oBAAgB,EAAEM,MAAMC,MAAR,EALE;AAMlBN,aAAS,EAAEK,MAAMC,MAAR,EANS;AAOlBL,gBAAY,EAAEI,MAAMlB,QAAR,EAAkBO,UAAU,IAA5B,EAAkCe,KAAK,OAAvC,EAPM;AAQlBN,gBAAY,EAAEE,MAAMlB,QAAR,EAAkBsB,KAAK,OAAvB;AARM,CAAf;;AAWP,IAAMC,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAI/B,MAAJ,CAAWmB,MAAX,EAAmBU,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,MAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,OAAOlC,mBAASmC,KAAT,CAAe,MAAf,EAAuBL,SAAvB,CAAb;AACA,IAAIN,OAAJ,EAAa;AAAEU,SAAKE,UAAL,CAAgBC,eAAhB;AAAyB;;kBAEzBH,I","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\r\n/**\r\n * @author 4Dcoder\r\n * @property {Number} id bank primaryKey\r\n * @property {String} name Bank full name (required)\r\n * @property {String} sort_code Bank sort_code (required)\r\n * @property {String} bank_code Bank bank_code (required)\r\n * @property {String} country_iso2 Bank country_iso2 (optional)\r\n * @property {String} contact_person Bank contact_person (optional)\r\n * @property {String} website Bank website (optional)\r\n * @description Bank model holds record of all banks the company deals with\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport table from \"./table\";\r\nimport Staff from \"../staff/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    name: Joi.string().trim().required(),\r\n    sort_code: Joi.string().trim().required(),\r\n    bank_code: Joi.string().required(),\r\n    country_iso2: Joi.string().optional(),\r\n    contact_person: Joi.string().optional(),\r\n    website: Joi.string().optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    name: Joi.string().trim().optional(),\r\n    sort_code: Joi.string().trim().optional(),\r\n    bank_code: Joi.string().optional(),\r\n    country_iso2: Joi.string().optional(),\r\n    contact_person: Joi.string().optional(),\r\n    website: Joi.string().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    name: { type: String, required: [true, \"Why no input?\"], unique: true },\r\n    sort_code: { type: String, required: [true, \"Why no input?\"] },\r\n    bank_code: { type: String, required: [true, \"Why no input?\"] },\r\n    country_iso2: { type: String, required: [true, \"Why no input?\"], default: \"ng\" },\r\n    contact_person: { type: String },\r\n    website: { type: String },\r\n    created_by: { type: ObjectId, required: true, ref: \"Staff\" },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"bank\");\r\nnewSchema.plugin(mongoose_csv);\r\n\r\nconst Bank = mongoose.model(\"Bank\", newSchema);\r\nif (preload) { Bank.insertMany(table); }\r\n\r\nexport default Bank;\r\n"]}