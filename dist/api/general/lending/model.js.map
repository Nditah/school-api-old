{"version":3,"sources":["../../../../src/api/general/lending/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","user_type","Joi","string","valid","optional","staff_id","student_id","request_date","date","classe_id","book_id","issued_date","issued_by","issuer_remark","request_status","lending_status","is_returnable","boolean","expected_returned_date","actual_returned_date","collected_date","collected_by","collected_remark","created_by","required","schemaUpdate","updated_by","schema","type","String","enum","ref","Date","default","Boolean","options","DATABASE","OPTIONS","newSchema","set","Lending","model"],"mappings":"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","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Dcoder\n * @property {Number} id Lending ObjectId primaryKey\n * @property {ObjectId} book Book Name of book (required)\n * @property {ObjectId} user_type Lending Type of User{STAFF | STUDENT} (required)\n * @property {ObjectId} staff_id Lending partner_id (optional)\n * @property {ObjectId} student_id Lending asset_id (optional)\n * @property {ObjectId} classe_id Lending asset_id (optional)\n * @property {Date} request_date Lending request_date (optional)\n * @property {Date} issued_date Lending issued_date (optional)\n * @property {String} issued_by Lending issued_by (optional)\n * @property {String} issuer_remark Lending issuer_remark (optional)\n * @property {String} request_status Lending request_status\n *  \"PENDING|COLLECTED|REVOKED\"PENDING\" optional)\n * @property {Boolean} is_returnable Lending is_returnable (optional)\n * @property {Date} expected_returned_date Lending expected_returned_date (optional)\n * @property {Date} actual_returned_date Lending actual_returned_date (optional)\n * @property {Date} collected_date Lending collected_date (optional)\n * @property {String} collected_by Lending collected_by (optional)\n * @property {String} collected_remark Lending collected_remark (optional)\n * @description Lending model holds record of all books and school properties.\n *  The Staff or student may revoke and unfulfilled request.\n *  The lending Manager can reject a pending request. Once request are collected,\n *  then it can be re-issued. For multiple lending, multiple request should be made\n *  to track them individually.\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport Staff from \"../staff/model\";\nimport Asset from \"../asset/model\";\nimport Vehicle from \"../vehicle/model\";\nimport Task from \"../task/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    user_type: Joi.string().valid([\"STAFF\", \"PARTNER\"]).optional(),\n    staff_id: Joi.string().optional(),\n    student_id: Joi.string().optional(),\n    request_date: Joi.date().optional(),\n    classe_id: Joi.string().optional(),\n    book_id: Joi.string().optional(),\n    issued_date: Joi.date().optional(),\n    issued_by: Joi.string().optional(),\n    issuer_remark: Joi.string().optional(),\n    request_status: Joi.string().valid([\"PENDING\", \"COLLECTED\", \"REVOKED\"]).optional(),\n    lending_status: Joi.string().valid([\"PENDING\", \"APPROVED\", \"ISSUED\", \"COLLECTED\", \"REJECTED\"]).optional(),\n    is_returnable: Joi.boolean().optional(),\n    expected_returned_date: Joi.date().optional(),\n    actual_returned_date: Joi.date().optional(),\n    collected_date: Joi.date().optional(),\n    collected_by: Joi.string().optional(),\n    collected_remark: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    user_type: Joi.string().valid([\"STAFF\", \"PARTNER\"]).optional(),\n    staff_id: Joi.string().optional(),\n    student_id: Joi.string().optional(),\n    request_date: Joi.date().optional(),\n    classe_id: Joi.string().optional(),\n    book_id: Joi.string().optional(),\n    issued_date: Joi.date().optional(),\n    issued_by: Joi.string().optional(),\n    issuer_remark: Joi.string().optional(),\n    request_status: Joi.string().valid([\"PENDING\", \"COLLECTED\", \"REVOKED\"]).optional(),\n    lending_status: Joi.string().valid([\"PENDING\", \"APPROVED\", \"ISSUED\", \"COLLECTED\", \"REJECTED\"]).optional(),\n    is_returnable: Joi.boolean().optional(),\n    expected_returned_date: Joi.date().optional(),\n    actual_returned_date: Joi.date().optional(),\n    collected_date: Joi.date().optional(),\n    collected_by: Joi.string().optional(),\n    collected_remark: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    user_type: { type: String, enum: [\"STAFF\", \"STUDENT\"], required: true },\n    staff_id: { type: ObjectId, ref: \"Staff\" },\n    student_id: { type: ObjectId, ref: \"Student\" },\n    request_date: { type: Date }, // desired date to receive to have the request granted\n    classe_id: { type: ObjectId, ref: \"Task\" },\n    book_id: { type: ObjectId, ref: \"Book\" },\n    issued_date: { type: Date },\n    issued_by: { type: ObjectId, ref: \"Staff\" },\n    issuer_remark: { type: String },\n    request_status: {\n        type: String,\n        enum: [\"PENDING\", \"COLLECTED\", \"REVOKED\"],\n        required: [true, \"Why no input?\"],\n        default: \"PENDING\",\n    },\n    lending_status: {\n        type: String,\n        enum: [\"PENDING\", \"APPROVED\", \"ISSUED\", \"COLLECTED\", \"REJECTED\", \"RETURNED\"],\n        required: [true, \"Why no input?\"],\n        default: \"PENDING\",\n    },\n    is_returnable: { type: Boolean, required: [true, \"Why no input?\"], default: true },\n    expected_returned_date: { type: Date },\n    actual_returned_date: { type: Date },\n    collected_date: { type: Date },\n    collected_by: { type: ObjectId }, // Staff to received the returned asset\n    collected_remark: { type: String },\n    created_by: { type: ObjectId, required: true, ref: \"Staff\" },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"lending\");\n\nconst Lending = mongoose.model(\"Lending\", newSchema);\n\nexport default Lending;\n"]}