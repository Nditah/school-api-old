{"version":3,"sources":["../../../../src/api/general/lesson/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","title","Joi","string","optional","duration","date","objective","number","unit","teacher","description","course","created_by","required","schemaUpdate","updated_by","schema","type","String","unique","Date","Number","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","Lesson","model","insertMany","table"],"mappings":";;;;;;;AAaA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;IAEQA,M,GAAWC,kB,CAAXD,M;AAPR;AAfA;AACA;;;;;;;;;;;;;IAsBQE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EADiB;AAExBC,cAAUH,cAAII,IAAJ,GAAWF,QAAX,EAFc;AAGxBG,eAAWL,cAAIM,MAAJ,GAAaJ,QAAb,EAHa;AAIxBK,UAAMP,cAAIM,MAAJ,GAAaJ,QAAb,EAJkB;AAKxBM,aAASR,cAAIC,MAAJ,GAAaC,QAAb,EALe;AAMxBO,iBAAaT,cAAIC,MAAJ,GAAaC,QAAb,EANW;AAOxBQ,YAAQV,cAAIC,MAAJ,GAAaC,QAAb,EAPgB;AAQxBS,gBAAYX,cAAIC,MAAJ,GAAaW,QAAb;AARY,CAArB;;AAWA,IAAMC,sCAAe;AACxBd,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EADiB;AAExBC,cAAUH,cAAII,IAAJ,GAAWF,QAAX,EAFc;AAGxBG,eAAWL,cAAIM,MAAJ,GAAaJ,QAAb,EAHa;AAIxBK,UAAMP,cAAIM,MAAJ,GAAaJ,QAAb,EAJkB;AAKxBM,aAASR,cAAIC,MAAJ,GAAaC,QAAb,EALe;AAMxBO,iBAAaT,cAAIC,MAAJ,GAAaC,QAAb,EANW;AAOxBQ,YAAQV,cAAIC,MAAJ,GAAaC,QAAb,EAPgB;AAQxBY,gBAAYd,cAAIC,MAAJ,GAAaW,QAAb;AARY,CAArB;;AAWA,IAAMG,0BAAS;AAClBhB,WAAO,EAAEiB,MAAMC,MAAR,EAAgBL,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAAmDM,QAAQ,IAA3D,EADW;AAElBf,cAAU,EAAEa,MAAMG,IAAR,EAFQ;AAGlBd,eAAW,EAAEW,MAAMI,MAAR,EAHO;AAIlBb,UAAM,EAAES,MAAMI,MAAR,EAJY;AAKlBZ,aAAS,EAAEQ,MAAMpB,QAAR,EAAkByB,KAAK,OAAvB,EALS;AAMlBZ,iBAAa,EAAEO,MAAMC,MAAR,EANK;AAOlBP,YAAQ,EAAEM,MAAMC,MAAR,EAAgBI,KAAK,QAArB,EAPU;AAQlBV,gBAAY,EAAEK,MAAMpB,QAAR,EAAkBgB,UAAU,IAA5B,EAAkCS,KAAK,OAAvC,EARM;AASlBP,gBAAY,EAAEE,MAAMpB,QAAR,EAAkByB,KAAK,OAAvB;AATM,CAAf;;AAYP,IAAMC,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAIlC,MAAJ,CAAWqB,MAAX,EAAmBW,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,QAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,SAASrC,mBAASsC,KAAT,CAAe,QAAf,EAAyBL,SAAzB,CAAf;AACA,IAAIN,OAAJ,EAAa;AAAEU,WAAOE,UAAP,CAAkBC,eAAlB;AAA2B;;kBAE3BH,M","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\r\n/**\r\n * @author 4Dcoder\r\n * @property {Number} id lesson primaryKey\r\n * @property {String} title Lesson title (required)\r\n * @property {Date} duration Lesson time duration (required)\r\n * @property {String} objective Lesson objective (required)\r\n * @property {Number} unit Lesson unit (required)\r\n * @property {ObjectId} teacher Lesson teacher (optional)\r\n * @property {String} description Lesson description (optional)\r\n * @property {ObjectId} course Lesson Course (optional)\r\n * @description Lesson model holds record of all lessons the company deals with\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport table from \"./table\";\r\nimport Staff from \"../staff/model\";\r\nimport Course from \"../course/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    title: Joi.string().optional(),\r\n    duration: Joi.date().optional(),\r\n    objective: Joi.number().optional(),\r\n    unit: Joi.number().optional(),\r\n    teacher: Joi.string().optional(),\r\n    description: Joi.string().optional(),\r\n    course: Joi.string().optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    title: Joi.string().optional(),\r\n    duration: Joi.date().optional(),\r\n    objective: Joi.number().optional(),\r\n    unit: Joi.number().optional(),\r\n    teacher: Joi.string().optional(),\r\n    description: Joi.string().optional(),\r\n    course: Joi.string().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    title: { type: String, required: [true, \"Why no input?\"], unique: true },\r\n    duration: { type: Date },\r\n    objective: { type: Number },\r\n    unit: { type: Number },\r\n    teacher: { type: ObjectId, ref: \"Staff\" },\r\n    description: { type: String },\r\n    course: { type: String, ref: \"Course\" },\r\n    created_by: { type: ObjectId, required: true, ref: \"Staff\" },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"lesson\");\r\nnewSchema.plugin(mongoose_csv);\r\n\r\nconst Lesson = mongoose.model(\"Lesson\", newSchema);\r\nif (preload) { Lesson.insertMany(table); }\r\n\r\nexport default Lesson;\r\n"]}