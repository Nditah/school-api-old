{"version":3,"sources":["../../../../src/api/general/classroom/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","name","Joi","string","optional","block","level","classe","capacity","subsidiary","created_by","required","schemaUpdate","updated_by","schema","type","String","ref","Number","comment","enum","Object","values","SUBSIDIARY","options","DATABASE","OPTIONS","newSchema","set","plugin","mongoose_csv","Classroom","model"],"mappings":";;;;;;;AAWA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;AAbA;AACA;;;;;;;;;;IAkBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,UAAMC,cAAIC,MAAJ,GAAaC,QAAb,EADkB;AAExBC,WAAOH,cAAIC,MAAJ,GAAaC,QAAb,EAFiB;AAGxBE,WAAOJ,cAAIC,MAAJ,GAAaC,QAAb,EAHiB;AAIxBG,YAAQL,cAAIC,MAAJ,GAAaC,QAAb,EAJgB;AAKxBI,cAAUN,cAAIC,MAAJ,GAAaC,QAAb,EALc;AAMxBK,gBAAYP,cAAIC,MAAJ,GAAaC,QAAb,EANY;AAOxBM,gBAAYR,cAAIC,MAAJ,GAAaQ,QAAb;AAPY,CAArB;;AAUA,IAAMC,sCAAe;AACxBX,UAAMC,cAAIC,MAAJ,GAAaC,QAAb,EADkB;AAExBC,WAAOH,cAAIC,MAAJ,GAAaC,QAAb,EAFiB;AAGxBE,WAAOJ,cAAIC,MAAJ,GAAaC,QAAb,EAHiB;AAIxBG,YAAQL,cAAIC,MAAJ,GAAaC,QAAb,EAJgB;AAKxBI,cAAUN,cAAIC,MAAJ,GAAaC,QAAb,EALc;AAMxBK,gBAAYP,cAAIC,MAAJ,GAAaC,QAAb,EANY;AAOxBS,gBAAYX,cAAIC,MAAJ,GAAaQ,QAAb;AAPY,CAArB;;AAUA,IAAMG,0BAAS;AAClBb,UAAM,EAAEc,MAAMC,MAAR,EADY;AAElBX,WAAO,EAAEU,MAAMC,MAAR,EAFW;AAGlBV,WAAO,EAAES,MAAMC,MAAR,EAHW;AAIlBT,YAAQ,EAAEQ,MAAMC,MAAR,EAAgBC,KAAK,QAArB,EAJU;AAKlBT,cAAU,EAAEO,MAAMG,MAAR,EAAgBC,SAAS,oBAAzB,EALQ;AAMlBV,gBAAY;AACRM,cAAMC,MADE;AAERI,cAAMC,OAAOC,MAAP,CAAcC,qBAAd,CAFE;AAGRZ,kBAAU,CAAC,KAAD,EAAQ,eAAR;AAHF,KANM;AAWlBD,gBAAY,EAAEK,MAAMjB,QAAR,EAAkBa,UAAU,IAA5B,EAAkCM,KAAK,OAAvC,EAXM;AAYlBJ,gBAAY,EAAEE,MAAMjB,QAAR,EAAkBmB,KAAK,OAAvB;AAZM,CAAf;;AAeP,IAAMO,UAAUC,oBAASC,OAAzB;;AAEA,IAAMC,YAAY,IAAI/B,MAAJ,CAAWkB,MAAX,EAAmBU,OAAnB,CAAlB;AACAG,UAAUC,GAAV,CAAc,YAAd,EAA4B,YAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,YAAYlC,mBAASmC,KAAT,CAAe,WAAf,EAA4BL,SAA5B,CAAlB;;kBAEeI,S","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\r\n/**\r\n * @author 4Dcoder\r\n * @property {Number} id class_room primaryKey\r\n * @property {String} name Classroom full name (required)\r\n * @property {String} block Classroom block code (required)\r\n * @property {String} level Classroom levels (required)\r\n * @property {String} subsidiary Classroom subsidiary (required)\r\n * @property {String} classe Classroom classe (required)\r\n * @description Classroom model holds record of all class_rooms the school deals with\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE, SUBSIDIARY } from \"../../../constants\";\r\nimport Staff from \"../staff/model\";\r\nimport Classe from \"../classe/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    name: Joi.string().optional(),\r\n    block: Joi.string().optional(),\r\n    level: Joi.string().optional(),\r\n    classe: Joi.string().optional(),\r\n    capacity: Joi.string().optional(),\r\n    subsidiary: Joi.string().optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    name: Joi.string().optional(),\r\n    block: Joi.string().optional(),\r\n    level: Joi.string().optional(),\r\n    classe: Joi.string().optional(),\r\n    capacity: Joi.string().optional(),\r\n    subsidiary: Joi.string().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    name: { type: String },\r\n    block: { type: String },\r\n    level: { type: String },\r\n    classe: { type: String, ref: \"Classe\" },\r\n    capacity: { type: Number, comment: \"capacity in number\"},\r\n    subsidiary: {\r\n        type: String,\r\n        enum: Object.values(SUBSIDIARY),\r\n        required: [false, \"Why no input?\"],\r\n    },\r\n    created_by: { type: ObjectId, required: true, ref: \"Staff\" },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"class_room\");\r\nnewSchema.plugin(mongoose_csv);\r\n\r\nconst Classroom = mongoose.model(\"Classroom\", newSchema);\r\n\r\nexport default Classroom;\r\n"]}