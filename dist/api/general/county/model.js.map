{"version":3,"sources":["../../../../src/api/general/county/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","name","Joi","string","trim","required","state","created_by","schemaUpdate","optional","updated_by","schema","type","String","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","County","model","insertMany","table"],"mappings":";;;;;;;AAUA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;IAEQA,M,GAAWC,kB,CAAXD,M;AAPR;AAZA;AACA;;;;;;;;;;IAmBQE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADkB;AAExBC,WAAOJ,cAAIC,MAAJ,GAAaE,QAAb,EAFiB;AAGxBE,gBAAYL,cAAIC,MAAJ,GAAaE,QAAb;AAHY,CAArB;;AAMA,IAAMG,sCAAe;AACxBP,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBK,QAApB,EADkB;AAExBH,WAAOJ,cAAIC,MAAJ,GAAaM,QAAb,EAFiB;AAGxBC,gBAAYR,cAAIC,MAAJ,GAAaE,QAAb;AAHY,CAArB;;AAMA,IAAMM,0BAAS;AAClBV,UAAM,EAAEW,MAAMC,MAAR,EADY;AAElBP,WAAO,EAAEM,MAAMd,QAAR,EAAkBgB,KAAK,OAAvB,EAFW;AAGlBP,gBAAY,EAAEK,MAAMd,QAAR,EAAkBgB,KAAK,OAAvB,EAAgCT,UAAU,IAA1C,EAHM;AAIlBK,gBAAY,EAAEE,MAAMd,QAAR,EAAkBgB,KAAK,OAAvB;AAJM,CAAf;;AAOP,IAAMC,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAIzB,MAAJ,CAAWe,MAAX,EAAmBQ,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,QAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,SAAS5B,mBAAS6B,KAAT,CAAe,QAAf,EAAyBL,SAAzB,CAAf;AACA,IAAIN,OAAJ,EAAa;AAAEU,WAAOE,UAAP,CAAkBC,eAAlB;AAA2B;;kBAE3BH,M","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Decoder\n * @property {Number} id County primaryKey\n * @property {String} name County short name\n * @property {String} state County State Id\n * @property {Number} created_by County record created by\n * @property {Number} updated_by County record modified by\n * @description County holds record of all cities with terminal_list\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport table from \"./table\";\nimport State from \"../state/model\";\nimport Staff from \"../staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    name: Joi.string().trim().required(),\n    state: Joi.string().required(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    name: Joi.string().trim().optional(),\n    state: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    name: { type: String },\n    state: { type: ObjectId, ref: \"State\" },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"county\");\nnewSchema.plugin(mongoose_csv);\n\nconst County = mongoose.model(\"County\", newSchema);\nif (preload) { County.insertMany(table); }\n\nexport default County;\n"]}