{"version":3,"sources":["../../../../src/api/general/county/routes.js"],"names":["express","checkAuth","isValidStaff","fetchRecord","createRecord","updateRecord","deleteRecord","router","Router","get","post","put","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,mCAAxC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkDC,YAAlD,QAAsE,cAAtE;;AAEA,MAAMC,SAASP,QAAQQ,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAD,OAAOE,GAAP,CAAW,WAAX,EAAwBN,WAAxB;;AAEA;;;;;;;;;;;;;AAaAI,OAAOG,IAAP,CAAY,WAAZ,EAAyB,CAACT,SAAD,EAAYC,YAAZ,CAAzB,EAAoDE,YAApD;;AAEA;;;;;;;;;;;;;;;AAeAG,OAAOI,GAAP,CAAW,qBAAX,EAAkC,CAACV,SAAD,EAAYC,YAAZ,CAAlC,EAA6DG,YAA7D;;AAEA;;;;;;;;;;AAUAE,OAAOK,MAAP,CAAc,qBAAd,EAAqC,CAACX,SAAD,EAAYC,YAAZ,CAArC,EAAgEI,YAAhE;;AAEA,eAAeC,MAAf","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/counties?id={recordId} Retrieve one or all records\n * @apiName RetrieveCounty\n * @apiGroup County\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/counties?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records counties (or local government areas) of operation\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/counties\", fetchRecord);\n\n/**\n * @api {post} /api/counties Create counties\n * @apiName CreateCounty\n * @apiGroup County\n * @apiParam {String} access_token master access token.\n * @apiParam {String} name County short name\n * @apiParam {String} state_id County State Id\n * @apiParam {Number} created_by County record created by\n * @apiSuccess {Object} County County's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 County not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/counties\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/counties/{recordId} Update counties\n * @apiName UpdateCounty\n * @apiGroup County\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiParam {Number} recordId County record id (primaryKey)\n * @apiParam {String} name County short name\n * @apiParam {String} state_id County State Id\n * @apiParam {Number} updated_by County record modified by\n * @apiSuccess {Object} County County's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 County not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/counties/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/counties/{recordId} Delete counties\n * @apiName DeleteCounty\n * @apiGroup County\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 County not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/counties/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}