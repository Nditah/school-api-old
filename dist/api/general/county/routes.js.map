{"version":3,"sources":["../../../../src/api/general/county/routes.js"],"names":["router","express","Router","get","fetchRecord","post","checkAuth","isValidStaff","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAF,OAAOG,GAAP,CAAW,WAAX,EAAwBC,uBAAxB;;AAEA;;;;;;;;;;;;;AAaAJ,OAAOK,IAAP,CAAY,WAAZ,EAAyB,CAACC,wBAAD,EAAYC,2BAAZ,CAAzB,EAAoDC,wBAApD;;AAEA;;;;;;;;;;;;;;;AAeAR,OAAOS,GAAP,CAAW,qBAAX,EAAkC,CAACH,wBAAD,EAAYC,2BAAZ,CAAlC,EAA6DG,wBAA7D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,qBAAd,EAAqC,CAACL,wBAAD,EAAYC,2BAAZ,CAArC,EAAgEK,wBAAhE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/counties?id={recordId} Retrieve one or all records\r\n * @apiName RetrieveCounty\r\n * @apiGroup County\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i api/counties?\r\n * @apiParam {Object} filter query condition (optional)\r\n * @apiParam {Number} skip Number of records to offset by (optional)\r\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\r\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\r\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\r\n * @apiDescription Records counties (or local government areas) of operation\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/counties\", fetchRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/counties Create counties\r\n * @apiName CreateCounty\r\n * @apiGroup County\r\n * @apiParam {String} access_token master access token.\r\n * @apiParam {String} name County short name\r\n * @apiParam {String} state_id County State Id\r\n * @apiParam {Number} created_by County record created by\r\n * @apiSuccess {Object} County County's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 County not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/counties\", [checkAuth, isValidStaff], createRecord);\r\n\r\n/**\r\n * @api {put} /api/v1/counties/{recordId} Update counties\r\n * @apiName UpdateCounty\r\n * @apiGroup County\r\n * @apiPermission master\r\n * @apiParam {String} access_token master access token.\r\n * @apiParam {Number} recordId County record id (primaryKey)\r\n * @apiParam {String} name County short name\r\n * @apiParam {String} state_id County State Id\r\n * @apiParam {Number} updated_by County record modified by\r\n * @apiSuccess {Object} County County's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 County not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.put(\"/counties/:recordId\", [checkAuth, isValidStaff], updateRecord);\r\n\r\n/**\r\n * @api {delete} /api/v1/counties/{recordId} Delete counties\r\n * @apiName DeleteCounty\r\n * @apiGroup County\r\n * @apiPermission master\r\n * @apiParam {String} access_token master access token.\r\n * @apiSuccess (Success 204) 204 No Content.\r\n * @apiError 404 County not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.delete(\"/counties/:recordId\", [checkAuth, isValidStaff], deleteRecord);\r\n\r\nexport default router;\r\n"]}