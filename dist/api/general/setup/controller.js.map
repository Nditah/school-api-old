{"version":3,"sources":["../../../../src/api/general/setup/controller.js"],"names":["log4js","path","rp","csv","mongoose","AccountHeading","AccountClass","Table","Staff","Office","Report","Vehicle","Budget","County","State","Setting","Bank","DocumentType","OffenceType","BankAccount","Material","Category","success","fail","notFound","STATUS_MSG","getToken","logger","getLogger","configure","appenders","file","type","filename","categories","default","level","host","process","env","NODE_ENV","SERVER_DEV","SERVER_PROD","setupUrls","setupSystem","req","res","accessToken","results","console","log","options","uri","method","auth","bearer","headers","json","Promise","all","map","setupUrl","err","message","setCollection","subsidiary","folder","collection","params","Model","tablePath","join","__dirname","table","require","Country","Hub","Stage","result","insertMany","info","SUCCESS","DEFAULT","error","downloadCsv","writeHead","find","sort","_id","limit","uploadCsv","Object","keys","files","length","status","send","csvFile","csvString","data","toString","records","fromString","ignoreEmpty","on","Types","ObjectId","push","create","then","newRecord","catch"],"mappings":"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","file":"controller.js","sourcesContent":["/* eslint-disable global-require */\n/* eslint-disable complexity */\nimport log4js from \"log4js\";\nimport path from \"path\";\nimport rp from \"request-promise\";\nimport csv from \"fast-csv\";\nimport mongoose from \"mongoose\";\n\nimport AccountHeading from \"../account-heading/model\";\nimport AccountClass from \"../account-class/model\";\nimport Table from \"../table/model\";\nimport Staff from \"../staff/model\";\nimport Office from \"../office/model\";\nimport Report from \"../report/model\";\nimport Vehicle from \"../vehicle/model\";\nimport Budget from \"../budget/model\";\nimport County from \"../county/model\";\nimport State from \"../state/model\";\nimport Setting from \"../setting/model\";\nimport Bank from \"../bank/model\";\nimport DocumentType from \"../document-type/model\";\nimport OffenceType from \"../offence-type/model\";\nimport BankAccount from \"../bank-account/model\";\nimport Material from \"../material/model\";\nimport Category from \"../category/model\";\nimport { success, fail, notFound } from \"../../../lib\";\nimport { STATUS_MSG } from \"../../../constants\";\nimport { getToken } from \"../../../middleware/authorization\";\n\n// Logging\nconst logger = log4js.getLogger(\"[setup]\");\nlog4js.configure({\n    appenders: { file: { type: \"file\", filename: \"logs/setup.log\" } },\n    categories: { default: { appenders: [\"file\"], level: \"debug\" } },\n});\n\nlet host;\nif (process.env.NODE_ENV === \"development\") {\n    host = process.env.SERVER_DEV;\n} else {\n    host = process.env.SERVER_PROD;\n}\n\nconst setupUrls = [\n    // `${host}/api/setups/preload/{subsidiary}/{folder}/{collection}`,\n    `${host}/api/setups/preload/general/account-class/account_class`,\n    `${host}/api/setups/preload/general/account-heading/account_heading`,\n    `${host}/api/setups/preload/general/staff/staff`,\n    `${host}/api/setups/preload/general/office/office`,\n    `${host}/api/setups/preload/general/vehicle/vehicle`,\n    `${host}/api/setups/preload/general/county/county`,\n    `${host}/api/setups/preload/general/state/state`,\n    `${host}/api/setups/preload/general/table/table`,\n    `${host}/api/setups/preload/general/setting/setting`,\n    `${host}/api/setups/preload/general/bank/bank`,\n    `${host}/api/setups/preload/general/bank-account/bank_account`,\n    `${host}/api/setups/preload/general/document-type/document_type`,\n    `${host}/api/setups/preload/general/offence-type/offence_type`,\n    `${host}/api/setups/preload/general/stage/stage`,\n];\n\nexport async function setupSystem(req, res) {\n    const accessToken = getToken(req);\n    let results;\n    console.log(\"\\nThis is token \\n\\n\\n\", accessToken);\n\n    const options = {\n        uri: setupUrls[ 0 ],\n        method: \"GET\",\n        auth: { bearer: accessToken },\n        headers: { \"User-Agent\": \"Request-Promise\" },\n        json: true,\n    };\n    try {\n        // results = await rp(options);\n        results = await Promise.all(setupUrls.map((setupUrl) => {\n            options.uri = setupUrl;\n            return rp(options);\n        }));\n    } catch (err) {\n        console.log(err.message);\n        return fail(res, 401, `Error settingup system ${err.message}`);\n    }\n    return success(res, 201, results, \"System Setup complete!\");\n}\n\nexport async function setCollection(req, res) {\n    const { subsidiary, folder, collection } = req.params;\n    let Model;\n\n    const tablePath = path.join(__dirname, `../../${subsidiary}/${folder}/table`);\n\n    // eslint-disable-next-line import/no-dynamic-require\n    const table = require(`${tablePath}`).default;\n    console.log(table);\n    try {\n        // eslint-disable-next-line default-case\n        switch (collection) {\n        case \"account_class\": Model = AccountClass; break;\n        case \"account_heading\": Model = AccountHeading; break;\n        case \"bank\": Model = Bank; break;\n        case \"bank_account\": Model = BankAccount; break;\n        case \"budget\": Model = Budget; break;\n        case \"category\": Model = Category; break;\n        case \"country\": Model = Country; break;\n        case \"table\": Model = Table; break;\n        case \"vehicle\": Model = Vehicle; break;\n        case \"state\": Model = State; break;\n        case \"setting\": Model = Setting; break;\n        case \"hub\": Model = Hub; break;\n        case \"staff\": Model = Staff; break;\n        case \"office\": Model = Office; break;\n        case \"report\": Model = Report; break;\n        case \"document_type\": Model = DocumentType; break;\n        case \"offence_type\": Model = OffenceType; break;\n        case \"material\": Model = Material; break;\n        case \"stage\": Model = Stage; break;\n        default: return fail(res, 401, `Error invalid collection: ${collection}`);\n        }\n        const result = await Model.insertMany(table);\n        if (!result) {\n            logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n        return success(res, 201, result, \"Record created successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error creating record. ${err.message}`);\n    }\n}\n\nexport async function downloadCsv(req, res) {\n    const { collection } = req.params;\n    let Model;\n    try {\n        // eslint-disable-next-line default-case\n        switch (collection) {\n            case \"account_class\": Model = AccountClass; break;\n            case \"account_heading\": Model = AccountHeading; break;\n            case \"bank\": Model = Bank; break;\n            case \"bank_account\": Model = BankAccount; break;\n            case \"budget\": Model = Budget; break;\n            case \"category\": Model = Category; break;\n            case \"country\": Model = Country; break;\n            case \"table\": Model = Table; break;\n            case \"vehicle\": Model = Vehicle; break;\n            case \"state\": Model = State; break;\n            case \"setting\": Model = Setting; break;\n            case \"hub\": Model = Hub; break;\n            case \"staff\": Model = Staff; break;\n            case \"office\": Model = Office; break;\n            case \"report\": Model = Report; break;\n            case \"document_type\": Model = DocumentType; break;\n            case \"offence_type\": Model = OffenceType; break;\n            case \"material\": Model = Material; break;\n            case \"stage\": Model = Stage; break;\n        default: return fail(res, 401, `Error invalid collection: ${collection}`);\n        }\n        res.writeHead(200, {\n            \"Content-Type\": \"text/csv\",\n            \"Content-Disposition\": `attachment; filename=${collection}.csv`,\n        });\n        // pipe file using mongoose-csv\n        return await Model.find().sort({ _id: 1 }).limit(100).csv(res);\n        // return res.status(200).send(result);\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error creating record. ${err.message}`);\n    }\n}\n\nexport async function uploadCsv(req, res) {\n    console.log(\"uploadCsv\");\n    const { collection } = req.params;\n    let Model;\n    try {\n        // eslint-disable-next-line default-case\n        switch (collection) {\n            case \"account_class\": Model = AccountClass; break;\n            case \"account_heading\": Model = AccountHeading; break;\n            case \"bank\": Model = Bank; break;\n            case \"bank_account\": Model = BankAccount; break;\n            case \"budget\": Model = Budget; break;\n            case \"category\": Model = Category; break;\n            case \"country\": Model = Country; break;\n            case \"table\": Model = Table; break;\n            case \"vehicle\": Model = Vehicle; break;\n            case \"state\": Model = State; break;\n            case \"setting\": Model = Setting; break;\n            case \"hub\": Model = Hub; break;\n            case \"staff\": Model = Staff; break;\n            case \"office\": Model = Office; break;\n            case \"report\": Model = Report; break;\n            case \"document_type\": Model = DocumentType; break;\n            case \"offence_type\": Model = OffenceType; break;\n            case \"material\": Model = Material; break;\n            case \"stage\": Model = Stage; break;\n        default: return fail(res, 401, `Error invalid collection: ${collection}`);\n        }\n        if (Object.keys(req.files).length === 0) {\n            return res.status(400).send(\"No files were uploaded.\");\n        }\n        const csvFile = req.files.file;\n        const csvString = csvFile.data.toString();\n        const records = [];\n        return csv.fromString(csvString, { headers: true, ignoreEmpty: true })\n            .on(\"data\", (data) => {\n                data._id = new mongoose.Types.ObjectId();\n                records.push(data);\n            })\n            .on(\"end\", () => Model.create(records)\n                .then(newRecord => success(res, 201, records, `${newRecord.length} ${collection} record(s) created successfully!`))\n                .catch(err => fail(res, 422, `${err.message}`)));\n    } catch (error) {\n        logger.error(error);\n        return fail(res, 500, `Error creating record. ${error.message}`);\n    }\n}\n"]}