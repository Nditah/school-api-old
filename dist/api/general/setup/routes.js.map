{"version":3,"sources":["../../../../src/api/general/setup/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","setupSystem","setCollection","downloadCsv","post","uploadCsv"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;AAWAF,OAAOG,GAAP,CAAW,wBAAX,EAAqC,CAACC,wBAAD,EAAYC,2BAAZ,CAArC,EAAgEC,uBAAhE;;AAEA;;;;;;;;;;;;;AAaAN,OAAOG,GAAP,CAAW,iDAAX,EAA8D,CAACC,wBAAD,EAAYC,2BAAZ,CAA9D,EAAyFE,yBAAzF;;AAEA;;;;;;;;;;;;;;AAcAP,OAAOG,GAAP,CAAW,yBAAX,EAAsC,CAACC,wBAAD,EAAYC,2BAAZ,CAAtC,EAAiEG,uBAAjE;;AAEA;;;;;;;;;;;;;;AAcAR,OAAOS,IAAP,CAAY,yBAAZ,EAAuC,CAACL,wBAAD,EAAYC,2BAAZ,CAAvC,EAAkEK,qBAAlE;;kBAEeV,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { setupSystem, setCollection, uploadCsv, downloadCsv } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {post} /api/v1/setups/system Complete System Setup\r\n * @apiName SystemSetup\r\n * @apiGroup Setup\r\n * @apiParam {String} username Master username\r\n * @apiParam {String} password Master password\r\n * @apiSuccess {Object} Setup Setup's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Setup not found.\r\n * @apiError 401 admin access only.\r\n */\r\nrouter.get(\"/setups/preload/system\", [checkAuth, isValidStaff], setupSystem);\r\n\r\n/**\r\n * @api {get} /api/v1/setups/preload/{subsidiary}/{folder}/{collection} Preload Setups data\r\n * @apiName ModuleSetup\r\n * @apiGroup Setup\r\n * @apiParam {String} access_token admin access token.\r\n * @apiParam {String} subsidiary Setup collection package\r\n * @apiParam {String} folder Setup folder directory\r\n * @apiParam {String} collection Setup collection name\r\n * @apiSuccess {Object} Setup Setup's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Setup not found.\r\n * @apiError 401 admin access only.\r\n */\r\nrouter.get(\"/setups/preload/:subsidiary/:folder/:collection\", [checkAuth, isValidStaff], setCollection);\r\n\r\n/**\r\n * @api {get} /api/v1/setups/csv/{collection} Download Table in CSV\r\n * @apiName DownloadCsv\r\n * @apiGroup Setup\r\n * @apiExample {curl} Example usage for seeding vehicle records:\r\n *      curl -i api/setups/csv/vehicle\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} module Setup folder directory\r\n * @apiParam {String} collection Setup collection name\r\n * @apiSuccess {Object} Setup Setup's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Setup not found.\r\n * @apiError 401 admin access only.\r\n */\r\nrouter.get(\"/setups/csv/:collection\", [checkAuth, isValidStaff], downloadCsv);\r\n\r\n/**\r\n * @api {post} /api/v1/setups/csv/{collection} Upload Table in CSV\r\n * @apiName UploadCsv\r\n * @apiGroup Setup\r\n * @apiExample {curl} Example usage for seeding driver records:\r\n *      curl -i api/setups/csv/driver\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} module Setup folder directory\r\n * @apiParam {String} collection Setup collection name\r\n * @apiSuccess {Object} Setup Setup's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Setup not found.\r\n * @apiError 401 admin access only.\r\n */\r\nrouter.post(\"/setups/csv/:collection\", [checkAuth, isValidStaff], uploadCsv);\r\n\r\nexport default router;\r\n"]}