{"version":3,"sources":["../../../../src/api/general/setup/routes.js"],"names":["express","checkAuth","isValidStaff","setupSystem","setCollection","uploadCsv","downloadCsv","router","Router","get","post"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,mCAAxC;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,cAAnE;;AAEA,MAAMC,SAASP,QAAQQ,MAAR,EAAf;;AAEA;;;;;;;;;;;AAWAD,OAAOE,GAAP,CAAW,wBAAX,EAAqC,CAACR,SAAD,EAAYC,YAAZ,CAArC,EAAgEC,WAAhE;;AAEA;;;;;;;;;;;;;AAaAI,OAAOE,GAAP,CAAW,iDAAX,EAA8D,CAACR,SAAD,EAAYC,YAAZ,CAA9D,EAAyFE,aAAzF;;AAEA;;;;;;;;;;;;;;AAcAG,OAAOE,GAAP,CAAW,yBAAX,EAAsC,CAACR,SAAD,EAAYC,YAAZ,CAAtC,EAAiEI,WAAjE;;AAEA;;;;;;;;;;;;;;AAcAC,OAAOG,IAAP,CAAY,yBAAZ,EAAuC,CAACT,SAAD,EAAYC,YAAZ,CAAvC,EAAkEG,SAAlE;;AAEA,eAAeE,MAAf","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { setupSystem, setCollection, uploadCsv, downloadCsv } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {post} /api/setups/system Complete System Setup\n * @apiName SystemSetup\n * @apiGroup Setup\n * @apiParam {String} username Master username\n * @apiParam {String} password Master password\n * @apiSuccess {Object} Setup Setup's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Setup not found.\n * @apiError 401 admin access only.\n */\nrouter.get(\"/setups/preload/system\", [checkAuth, isValidStaff], setupSystem);\n\n/**\n * @api {get} /api/setups/preload/{subsidiary}/{folder}/{collection} Preload Setups data\n * @apiName ModuleSetup\n * @apiGroup Setup\n * @apiParam {String} access_token admin access token.\n * @apiParam {String} subsidiary Setup collection package\n * @apiParam {String} folder Setup folder directory\n * @apiParam {String} collection Setup collection name\n * @apiSuccess {Object} Setup Setup's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Setup not found.\n * @apiError 401 admin access only.\n */\nrouter.get(\"/setups/preload/:subsidiary/:folder/:collection\", [checkAuth, isValidStaff], setCollection);\n\n/**\n * @api {get} /api/setups/csv/{collection} Download Table in CSV\n * @apiName DownloadCsv\n * @apiGroup Setup\n * @apiExample {curl} Example usage for seeding vehicle records:\n *      curl -i api/setups/csv/vehicle\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} module Setup folder directory\n * @apiParam {String} collection Setup collection name\n * @apiSuccess {Object} Setup Setup's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Setup not found.\n * @apiError 401 admin access only.\n */\nrouter.get(\"/setups/csv/:collection\", [checkAuth, isValidStaff], downloadCsv);\n\n/**\n * @api {post} /api/setups/csv/{collection} Upload Table in CSV\n * @apiName UploadCsv\n * @apiGroup Setup\n * @apiExample {curl} Example usage for seeding driver records:\n *      curl -i api/setups/csv/driver\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} module Setup folder directory\n * @apiParam {String} collection Setup collection name\n * @apiSuccess {Object} Setup Setup's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Setup not found.\n * @apiError 401 admin access only.\n */\nrouter.post(\"/setups/csv/:collection\", [checkAuth, isValidStaff], uploadCsv);\n\nexport default router;\n"]}