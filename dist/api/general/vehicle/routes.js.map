{"version":3,"sources":["../../../../src/api/general/vehicle/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;;;;AAmBAF,OAAOG,GAAP,CAAW,WAAX,EAAwB,CAACC,wBAAD,EAAYC,2BAAZ,CAAxB,EAAmDC,uBAAnD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GAN,OAAOO,IAAP,CAAY,WAAZ,EAAyB,CAACH,wBAAD,EAAYC,2BAAZ,CAAzB,EAAoDG,wBAApD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDAR,OAAOS,GAAP,CAAW,qBAAX,EAAkC,CAACL,wBAAD,EAAYC,2BAAZ,CAAlC,EAA6DK,wBAA7D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,qBAAd,EAAqC,CAACP,wBAAD,EAAYC,2BAAZ,CAArC,EAAgEO,wBAAhE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/vehicles?id={recordId} Retrieve one or all records\r\n * @apiName RetrieveVehicle\r\n * @apiGroup Vehicle\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i https://mis-api.herokuapp.com/api/v1/vehicles?id=2&fields=id,created_at,updated_at\r\n * @apiExample {curl} Example usage for retieving multiple records:\r\n *      curl -i https://mis-api.herokuapp.com/api/v1/vehicles?offset=10&limit=50\r\n * @apiParam {Number} id Unique id of the record to retrieve (optional)\r\n * @apiParam {Number} offset Number of records to skip (optional)\r\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\r\n * @apiParam {String} fields Comma-separated list of record's attributes to retrieve (optional)\r\n * @apiDescription Records of all vehicles whether PMT Buses, Logistic Vans,\r\n * Toll Trucks or private cars. PMT Buses are also marked for Drivers' to Owners' Scheme.\r\n * Assets Management also has particular fields reserved for their updates\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/vehicles\", [checkAuth, isValidStaff], fetchRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/vehicles Create vehicles\r\n * @apiName CreateVehicle\r\n * @apiGroup Vehicle\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} name Vehicle name e.g 1450 (required)\r\n * @apiParam {String} description Vehicle description (required)\r\n * @apiParam {String} engine_number Vehicle engine number (optional)\r\n * @apiParam {String} chasis_number Vehicle chasis number  (optional)\r\n * @apiParam {String} plate_number Vehicle plate number  (optional)\r\n * @apiParam {String} registration_number Vehicle registration number  (optional)\r\n * @apiParam {String} vehicle_make Vehicle vehicle_make or manufacturer (optional)\r\n * @apiParam {Number} seating_capacity Vehicle seating capacity  (optional)\r\n * @apiParam {String} vehicle_class Vehicle vehicle class. (required)\r\n * @apiParam {String} vehicle_category Vehicle vehicle_category (required)\r\n * @apiParam {String} vehicle_custodian Vehicle employee type (required)\r\n * @apiParam {String} current_staff_id Vehicle staffId currenly assigned to (optional)\r\n * @apiParam {String} current_partner_id Vehicle driverId currenly assigned to (optional)\r\n * @apiParam {String} subsidiary Vehicle subsidiary (required)\r\n * @apiParam {String} color Vehicle color  (optional)\r\n * @apiParam {String} photo Vehicle photo url (optional)\r\n * @apiParam {String} vehicle_location Vehicle current state or vehicle_location (optional)\r\n * @apiParam {String} vehicle_assignment Vehicle vehicle_assignment status (optional)\r\n * @apiParam {String} asset_worthiness Vehicle asset worthiness (optional)\r\n * @apiParam {Date} purchase_date Vehicle purchase date (optional)\r\n * @apiParam {Date} launch_date Vehicle launch date (optional)\r\n * @apiParam {Date} expiry_date Vehicle expire date (optional)\r\n * @apiParam {Number} lifespan Vehicle lifespan in years (optional)\r\n * @apiParam {Number} purchase_value Vehicle purchase value (optional)\r\n * @apiParam {Number} opening_value Vehicle opening value (optional)\r\n * @apiParam {Number} closing_value Vehicle closing value (optional)\r\n * @apiParam {Number} salvage_value Vehicle salvage value (optional)\r\n * @apiParam {Number} current_value Vehicle current value (optional)\r\n * @apiParam {Number} total_depreciable_cost Vehicle total depreciable cost  (optional)\r\n * @apiParam {Number} depreciation_rate Vehicle depreciation rate  (optional)\r\n * @apiParam {Number} depreciation_expense Vehicle depreciation expense  (optional)\r\n * @apiParam {Number} accumulated_depreciation Vehicle accumulated depreciation  (optional)\r\n * @apiParam {String} record_status Vehicle record approval status (optional)\r\n * @apiParam {Number} approved_by Vehicle approved by staff who veted the record entry (optional)\r\n * @apiParam {Date} approved_date Vehicle approved date after record entry (optional)\r\n * @apiParam {String} remark Vehicle approval remark or any comment about record (optional)\r\n * @apiParam {Boolean} is_dto Vehicle is it for Partner-to-Owner scheme (optional)\r\n * @apiParam {Number} dto_initial_deposit Vehicle DTO_INITIAL_DEPOSIT (optional)\r\n * @apiParam {Number} dto_maintenance_balance Vehicle DTO current balance (prohibited)\r\n * @apiParam {Number} dto_repayment_total Vehicle DTO cummulative repayment (prohibited)\r\n * @apiParam {Boolean} is_healthy Vehicle is it healthy  or brokendown (optional)\r\n * @apiParam {Boolean} is_active Vehicle is it active or retired  (optional)\r\n * @apiSuccess {Object} Vehicle Vehicle's data.\r\n * @apiDescription const VEHICLE = {\r\n    VEHICLE_MAKE: {\r\n        TOYOTA: \"TOYOTA\",\r\n        UGAMA: \"UGAMA\",\r\n        MEIYER: \"MEIYER\",\r\n        SIENNA: \"SIENNA\",\r\n        UNKNOWN: \"UNKNOWN\",\r\n    },\r\n    VEHICLE_CATEGORY: {\r\n        PMT: \"PMT\",\r\n        PATROL: \"PATROL\",\r\n        PML: \"PML\", // DELIVERY VAN\r\n        PET: \"PET\", // DELIVERY VAN\r\n        PRESS: \"PRESS\", // DELIVERY VAN\r\n        SHOP: \"SHOP\", // FOR SALE\r\n        OFFICIAL_PRIVATE: \"OFFICIAL_PRIVATE\", // PRIVATE USE\r\n        OFFICIAL_GENERAL: \"OFFICIAL_GENERAL\", // GENERAL USE\r\n        UNKNOWN: \"UNKNOWN\",\r\n    },\r\n    VEHICLE_CLASS: {\r\n        FIRST: \"FIRST\", // New Vehicle with Aircondition\r\n        SECOND: \"SECOND\", // New Vehicle without Aircondition\r\n        THIRD: \"THIRD\", // Old Vehicle\r\n        UNKNOWN: \"UNKNOWN\",\r\n    },\r\n    VEHICLE_TYPE: {\r\n        BUS: \"BUS\",\r\n        CAR: \"CAR\",\r\n        TAXI: \"TAXI\",\r\n        KEKE: \"KEKE\",\r\n        BIKE: \"BIKE\",\r\n        JEEP: \"JEEP\",\r\n        PREMIUM: \"PREMIUM\",\r\n        UNKNOWN: \"UNKNOWN\",\r\n    },\r\n    VEHICLE_LOCATION: {\r\n        OPERATION: \"OPERATION\",\r\n        IMPOUNDED: \"IMPOUNDED\",\r\n        WORKSHOP: \"WORKSHOP\",\r\n        WAREHOUSE: \"WAREHOUSE\",\r\n        SHOP: \"SHOP\",\r\n        SCRAP: \"SCRAP\",\r\n        UNKNOWN: \"UNKNOWN\",\r\n    },\r\n    VEHICLE_ASSIGNMENT: {\r\n        ASSIGNED: \"ASSIGNED\",\r\n        REASSIGNED: \"REASSIGNED\",\r\n        UNASSIGNED: \"UNASSIGNED\",\r\n        UNKNOWN: \"UNKNOWN\",\r\n    },\r\n    VEHICLE_CUSTODIAN: {\r\n        PARTNER: \"PARTNER\",\r\n        STAFF: \"STAFF\",\r\n        OWNER: \"OWNER\",\r\n        UNKNOWN: \"UNKNOWN\",\r\n    },\r\n};\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Vehicle not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/vehicles\", [checkAuth, isValidStaff], createRecord);\r\n\r\n/**\r\n * @api {put} /api/v1/vehicles/{recordId} Update vehicles\r\n * @apiName UpdateVehicle\r\n * @apiGroup Vehicle\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiParam {String} name Vehicle name e.g 1450 (required)\r\n * @apiParam {String} description Vehicle description (required)\r\n * @apiParam {String} engine_number Vehicle engine number (optional)\r\n * @apiParam {String} chasis_number Vehicle chasis number  (optional)\r\n * @apiParam {String} plate_number Vehicle plate number  (optional)\r\n * @apiParam {String} registration_number Vehicle registration number  (optional)\r\n * @apiParam {String} vehicle_make Vehicle vehicle_make or manufacturer (optional)\r\n * @apiParam {Number} seating_capacity Vehicle seating capacity  (optional)\r\n * @apiParam {String} vehicle_class Vehicle vehicle class. (required)\r\n * @apiParam {String} vehicle_category Vehicle vehicle_category (required)\r\n * @apiParam {String} vehicle_custodian Vehicle employee type (required)\r\n * @apiParam {String} current_staff_id Vehicle staffId having asset in custody (optional)\r\n * @apiParam {String} current_partner_id Vehicle driverId having asset in custody (optional)\r\n * @apiParam {String} subsidiary Vehicle subsidiary (required)\r\n * @apiParam {String} color Vehicle color  (optional)\r\n * @apiParam {String} photo Vehicle photo url (optional)\r\n * @apiParam {String} vehicle_location Vehicle current state or vehicle_location (optional)\r\n * @apiParam {String} vehicle_assignment Vehicle vehicle_assignment status (optional)\r\n * @apiParam {String} asset_worthiness Vehicle asset worthiness (optional)\r\n * @apiParam {Date} purchase_date Vehicle purchase date (optional)\r\n * @apiParam {Date} launch_date Vehicle launch date (optional)\r\n * @apiParam {Date} expiry_date Vehicle expire date (optional)\r\n * @apiParam {Number} lifespan Vehicle lifespan in years (optional)\r\n * @apiParam {Number} purchase_value Vehicle purchase value (optional)\r\n * @apiParam {Number} opening_value Vehicle opening value (optional)\r\n * @apiParam {Number} closing_value Vehicle closing value (optional)\r\n * @apiParam {Number} salvage_value Vehicle salvage value (optional)\r\n * @apiParam {Number} current_value Vehicle current value (optional)\r\n * @apiParam {Number} total_depreciable_cost Vehicle total depreciable cost  (optional)\r\n * @apiParam {Number} depreciation_rate Vehicle depreciation rate  (optional)\r\n * @apiParam {Number} depreciation_expense Vehicle depreciation expense  (optional)\r\n * @apiParam {Number} accumulated_depreciation Vehicle accumulated depreciation  (optional)\r\n * @apiParam {String} record_status Vehicle record approval status (optional)\r\n * @apiParam {Number} approved_by Vehicle approved by staff who veted the record entry (optional)\r\n * @apiParam {Date} approved_date Vehicle approved date after record entry (optional)\r\n * @apiParam {String} remark Vehicle approval remark or any comment about record (optional)\r\n * @apiParam {String} ownership Vehicle ownership current owner \"PMT|PARTNER\" (optional)\r\n * @apiParam {Boolean} is_dto Vehicle is it for Partner-to-Owner scheme (optional)\r\n * @apiParam {Number} dto_initial_deposit Vehicle DTO_INITIAL_DEPOSIT (optional)\r\n * @apiParam {Number} dto_maintenance_balance Vehicle DTO current balance (prohibited)\r\n * @apiParam {Number} dto_repayment_total Vehicle DTO cummulative repayment (prohibited)\r\n * @apiParam {Boolean} is_healthy Vehicle is it healthy  or brokendown (optional)\r\n * @apiParam {Boolean} is_active Vehicle is it active or retired  (optional)\r\n * @apiSuccess {Object} Vehicle Vehicle's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Vehicle not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.put(\"/vehicles/:recordId\", [checkAuth, isValidStaff], updateRecord);\r\n\r\n/**\r\n * @api {delete} /api/v1/vehicles/{recordId} Delete vehicles\r\n * @apiName DeleteVehicle\r\n * @apiGroup Vehicle\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiSuccess (Success 204) 204 No Content.\r\n * @apiError 404 Vehicle not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.delete(\"/vehicles/:recordId\", [checkAuth, isValidStaff], deleteRecord);\r\n\r\nexport default router;\r\n"]}