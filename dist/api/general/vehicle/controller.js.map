{"version":3,"sources":["../../../../src/api/general/vehicle/controller.js"],"names":["Joi","log4js","aqp","Vehicle","schemaCreate","schemaUpdate","success","fail","notFound","isObjecId","STATUS_MSG","logger","getLogger","configure","appenders","file","type","filename","categories","default","level","fetchRecord","req","res","query","result","findVehicle","info","SUCCESS","DEFAULT","err","error","message","filter","skip","limit","sort","projection","searchString","q","$text","$search","find","populate","path","select","exec","createRecord","data","body","validate","newRecord","save","ERROR","updateRecord","recordId","id","params","findOneAndUpdate","_id","new","deleteRecord","findOneAndRemove"],"mappings":"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","file":"controller.js","sourcesContent":["import Joi from \"joi\";\nimport log4js from \"log4js\";\nimport aqp from \"api-query-params\";\nimport Vehicle, { schemaCreate, schemaUpdate } from \"./model\";\nimport { success, fail, notFound, isObjecId } from \"../../../lib\";\nimport { STATUS_MSG } from \"../../../constants\";\n\n// Logging\nconst logger = log4js.getLogger(\"[vehicle]\");\nlog4js.configure({\n    appenders: { file: { type: \"file\", filename: \"logs/vehicle.log\" } },\n    categories: { default: { appenders: [\"file\"], level: \"debug\" } },\n});\n\nexport async function fetchRecord(req, res) {\n    const { query } = req;\n    try {\n        const result = await findVehicle(query);\n        if (!result) {\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n        logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n        return success(res, 201, result, null);\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error retrieving record. ${err.message}`);\n    }\n}\n\nexport async function findVehicle(query) {\n    const { filter, skip, limit, sort, projection } = aqp(query);\n    const searchString = filter.q || \"\";\n    if (searchString) {\n        filter.$text = { $search: searchString };\n        delete filter.q;\n    }\n    const result = await Vehicle.find(filter)\n        .populate(\"partner_id\")\n        .populate(\"current_staff_id\")\n        .populate(\"current_partner_id\")\n        .populate(\"rating_ids\")\n        .populate({ path: \"created_by\", select: \"surname other_name email phone\" })\n        .populate({ path: \"updated_by\", select: \"surname other_name email phone\" })\n        .skip(skip)\n        .limit(limit)\n        .sort(sort)\n        .select(projection)\n        .exec();\n    return result;\n}\n\nexport async function createRecord(req, res) {\n    const data = req.body;\n    const { error } = Joi.validate(data, schemaCreate);\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\n    const newRecord = new Vehicle(data);\n    try {\n        const result = await newRecord.save();\n        if (!result) {\n            logger.error(STATUS_MSG.ERROR.DEFAULT, []);\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n        return success(res, 201, result, \"Record created successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error creating record. ${err.message}`);\n    }\n}\n\nexport async function updateRecord(req, res) {\n    const data = req.body;\n    const { recordId: id } = req.params;\n    const { error } = Joi.validate(data, schemaUpdate);\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\n    try {\n        const result = await Vehicle.findOneAndUpdate({ _id: id }, data, { new: true });\n        if (!result) {\n            return notFound(res, `Bad Request: Model not found with id ${id}`);\n        }\n        return success(res, 200, result, \"Record updated successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error updating record. ${err.message}`);\n    }\n}\n\nexport async function deleteRecord(req, res) {\n    const { recordId: id } = req.params;\n    try {\n        const result = await Vehicle.findOneAndRemove({ _id: id });\n        if (!result) {\n            return notFound(res, `Bad Request: Model not found with id ${id}`);\n        }\n        return success(res, 200, result, \"Record deleted successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error deleting record. ${err.message}`);\n    }\n}\n"]}