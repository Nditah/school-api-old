{"version":3,"sources":["../../../../src/api/general/document-type/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","name","Joi","string","required","issuer","optional","type","trim","valid","description","is_renewable","boolean","validity","number","initial_charge","renewable_charge","created_by","schemaUpdate","updated_by","schema","String","enum","Boolean","Number","comment","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","DocumentType","model","insertMany","table"],"mappings":";;;;;;;AAaA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;AAfA;;;;;;;;;;;;;IAqBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,UAAMC,cAAIC,MAAJ,GAAaC,QAAb,EADkB;AAExBC,YAAQH,cAAIC,MAAJ,GAAaG,QAAb,EAFgB;AAGxBC,UAAML,cAAIC,MAAJ,GAAaK,IAAb,GAAoBC,KAApB,CAA0B,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,aAA7B,CAA1B,EAAuEH,QAAvE,EAHkB;AAIxBI,iBAAaR,cAAIC,MAAJ,GAAaG,QAAb,EAJW;AAKxBK,kBAAcT,cAAIU,OAAJ,GAAcR,QAAd,EALU;AAMxBS,cAAUX,cAAIY,MAAJ,GAAaR,QAAb,EANc;AAOxBS,oBAAgBb,cAAIY,MAAJ,GAAaR,QAAb,EAPQ;AAQxBU,sBAAkBd,cAAIY,MAAJ,GAAaR,QAAb,EARM;AASxBW,gBAAYf,cAAIC,MAAJ,GAAaC,QAAb;AATY,CAArB;;AAYA,IAAMc,sCAAe;AACxBjB,UAAMC,cAAIC,MAAJ,GAAaG,QAAb,EADkB;AAExBD,YAAQH,cAAIC,MAAJ,GAAaG,QAAb,EAFgB;AAGxBC,UAAML,cAAIC,MAAJ,GAAaK,IAAb,GAAoBC,KAApB,CAA0B,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,aAA7B,CAA1B,EAAuEH,QAAvE,EAHkB;AAIxBI,iBAAaR,cAAIC,MAAJ,GAAaG,QAAb,EAJW;AAKxBK,kBAAcT,cAAIU,OAAJ,GAAcN,QAAd,EALU;AAMxBO,cAAUX,cAAIY,MAAJ,GAAaR,QAAb,EANc;AAOxBS,oBAAgBb,cAAIY,MAAJ,GAAaR,QAAb,EAPQ;AAQxBU,sBAAkBd,cAAIY,MAAJ,GAAaR,QAAb,EARM;AASxBa,gBAAYjB,cAAIC,MAAJ,GAAaC,QAAb;AATY,CAArB;;AAYA,IAAMgB,0BAAS;AAClBnB,UAAM,EAAEM,MAAMc,MAAR,EAAgBjB,UAAU,IAA1B,EADY;AAElBC,YAAQ,EAAEE,MAAMc,MAAR,EAFU;AAGlBd,UAAM;AACFA,cAAMc,MADJ;AAEFjB,kBAAU,IAFR;AAGFkB,cAAM,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,aAA7B;AAHJ,KAHY;AAQlBZ,iBAAa,EAAEH,MAAMc,MAAR,EARK;AASlBV,kBAAc,EAAEJ,MAAMgB,OAAR,EAAiBnB,UAAU,IAA3B,EATI;AAUlBS,cAAU,EAAEN,MAAMiB,MAAR,EAAgBC,SAAS,QAAzB,EAVQ;AAWlBV,oBAAgB,EAAER,MAAMiB,MAAR,EAXE;AAYlBR,sBAAkB,EAAET,MAAMiB,MAAR,EAZA;AAalBP,gBAAY,EAAEV,MAAMT,QAAR,EAAkB4B,KAAK,OAAvB,EAAgCtB,UAAU,IAA1C,EAbM;AAclBe,gBAAY,EAAEZ,MAAMT,QAAR,EAAkB4B,KAAK,OAAvB;AAdM,CAAf;;AAiBP,IAAMC,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAIrC,MAAJ,CAAWwB,MAAX,EAAmBW,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,eAA5B;;AAEA,IAAMC,eAAetC,mBAASuC,KAAT,CAAe,cAAf,EAA+BH,SAA/B,CAArB;;AAEA,IAAIN,OAAJ,EAAa;AAAEQ,iBAAaE,UAAb,CAAwBC,eAAxB;AAAiC;;kBAEjCH,Y","file":"model.js","sourcesContent":["/**\r\n * @author 4Dcoder\r\n * @property {ObjectId} id DocumentType primaryKey\r\n * @property {String} name DocumentType name, title or label\r\n * @property {String} issuer DocumentType issuer State|Church|School|Business Entity\r\n * @property {String} type DocumentType type \"USER|VEHICLE|ASSET|TRANSACTION\" (required)\r\n * @property {String} description DocumentType description (required)\r\n * @property {Boolean} is_renewable DocumentType is_renewable (required)\r\n * @property {Number} validity DocumentType validity (required)\r\n * @property {Number} initial_charge DocumentType initial_charge (required)\r\n * @property {Number} renewable_charge DocumentType renewable_charge (required)\r\n * @description DocumentType model holds record of all vehicle document types\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport table from \"./table\";\r\nimport Staff from \"../staff/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    name: Joi.string().required(),\r\n    issuer: Joi.string().optional(),\r\n    type: Joi.string().trim().valid([\"USER\", \"VEHICLE\", \"ASSET\", \"TRANSACTION\"]).optional(),\r\n    description: Joi.string().optional(),\r\n    is_renewable: Joi.boolean().required(),\r\n    validity: Joi.number().optional(),\r\n    initial_charge: Joi.number().optional(),\r\n    renewable_charge: Joi.number().optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    name: Joi.string().optional(),\r\n    issuer: Joi.string().optional(),\r\n    type: Joi.string().trim().valid([\"USER\", \"VEHICLE\", \"ASSET\", \"TRANSACTION\"]).optional(),\r\n    description: Joi.string().optional(),\r\n    is_renewable: Joi.boolean().optional(),\r\n    validity: Joi.number().optional(),\r\n    initial_charge: Joi.number().optional(),\r\n    renewable_charge: Joi.number().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    name: { type: String, required: true },\r\n    issuer: { type: String },\r\n    type: {\r\n        type: String,\r\n        required: true,\r\n        enum: [\"USER\", \"VEHICLE\", \"ASSET\", \"TRANSACTION\"],\r\n    },\r\n    description: { type: String },\r\n    is_renewable: { type: Boolean, required: true },\r\n    validity: { type: Number, comment: \"months\" },\r\n    initial_charge: { type: Number },\r\n    renewable_charge: { type: Number },\r\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"document_type\");\r\n\r\nconst DocumentType = mongoose.model(\"DocumentType\", newSchema);\r\n\r\nif (preload) { DocumentType.insertMany(table); }\r\n\r\nexport default DocumentType;\r\n"]}