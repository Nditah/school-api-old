{"version":3,"sources":["../../../../src/api/general/document-type/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAIA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAVA;;;;AAyBAF,OAAOG,GAAP,CAAW,gBAAX,EAA6B,CAACC,wBAAD,EAAYC,2BAAZ,CAA7B,EAAwDC,uBAAxD;;AAEA;;;;;;;;;;;;;;;;;;AAkBAN,OAAOO,IAAP,CAAY,gBAAZ,EAA8B,CAACH,wBAAD,EAAYC,2BAAZ,CAA9B,EAAyDG,wBAAzD;;AAEA;;;;;;;;;;;;;;;;;;;AAmBAR,OAAOS,GAAP,CAAW,0BAAX,EAAuC,CAACL,wBAAD,EAAYC,2BAAZ,CAAvC,EAAkEK,wBAAlE;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,0BAAd,EAA0C,CAACP,wBAAD,EAAYC,2BAAZ,CAA1C,EAAqEO,wBAArE;;kBAEeZ,M","file":"routes.js","sourcesContent":["/**\n * @author 4Decoder\n * @description DocumentType holds record of all document-type involving company vehicles\n */\nimport express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/document-type?id={recordId} Retrieve one or all records\n * @apiName RetrieveDocumentType\n * @apiGroup DocumentType\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/document-type?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/document-type\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/v1/document-type Create document-type\n * @apiName CreateDocumentType\n * @apiGroup DocumentType\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} name DocumentType name, title or label\n * @apiParam {String} issuer DocumentType issuer State|Church|School|Business Entity\n * @apiParam {String} type DocumentType type \"USER|VEHICLE|ASSET|TRANSACTION\" (required)\n * @apiParam {String} description DocumentType description (required)\n * @apiParam {Boolean} is_renewable DocumentType is_renewable (required)\n * @apiParam {Number} validity DocumentType validity (required)\n * @apiParam {Number} initial_charge DocumentType initial_charge (required)\n * @apiParam {Number} renewable_charge DocumentType renewable_charge (required)\n * @apiSuccess {Object} DocumentType DocumentType's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 DocumentType not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/document-type\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/document-type/{recordId} Update document-type\n * @apiName UpdateDocumentType\n * @apiGroup DocumentType\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {String} name DocumentType name, title or label\n * @apiParam {String} issuer DocumentType issuer State|Church|School|Business Entity\n * @apiParam {String} type DocumentType type \"USER|VEHICLE|ASSET|TRANSACTION\" (required)\n * @apiParam {String} description DocumentType description (required)\n * @apiParam {Boolean} is_renewable DocumentType is_renewable (required)\n * @apiParam {Number} validity DocumentType validity (required)\n * @apiParam {Number} initial_charge DocumentType initial_charge (required)\n * @apiParam {Number} renewable_charge DocumentType renewable_charge (required)\n * @apiSuccess {Object} DocumentType DocumentType's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 DocumentType not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/document-type/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/document-type/{recordId} Delete document-type\n * @apiName DeleteDocumentType\n * @apiGroup DocumentType\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 DocumentType not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/document-type/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}