{"version":3,"sources":["../../../../src/api/general/account-heading/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,mBAAX,EAAgC,CAACC,wBAAD,EAAYC,2BAAZ,CAAhC,EAA2DC,uBAA3D;;AAEA;;;;;;;;;;;;;;;;;AAiBAN,OAAOO,IAAP,CAAY,mBAAZ,EAAiC,CAACH,wBAAD,EAAYC,2BAAZ,CAAjC,EAA4DG,wBAA5D;;AAEA;;;;;;;;;;;;;;;;;;AAkBAR,OAAOS,GAAP,CAAW,6BAAX,EAA0C,CAACL,wBAAD,EAAYC,2BAAZ,CAA1C,EAAqEK,wBAArE;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,6BAAd,EAA6C,CAACP,wBAAD,EAAYC,2BAAZ,CAA7C,EAAwEO,wBAAxE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/account-headings?id={recordId} Retrieve one or all records\n * @apiName RetrieveAccountHeading\n * @apiGroup AccountHeading\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/account-headings?\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/account-headings\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/v1/account-headings Create account-headings\n * @apiName CreateAccountingHeading\n * @apiGroup AccountHeading\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} code Bank-Heading code\n * @apiParam {String} heading Bank-Heading heading\n * @apiParam {Number} account_class_id Bank-Heading account_class_id\n * @apiParam {String} description Bank-Heading description\n * @apiParam {Number} amount Bank-Heading amount\n * @apiParam {Number} opening_balance Bank-Heading opening_balance\n * @apiParam {Number} bank_account_id Bank-Heading bank_account_id\n * @apiSuccess {Object} AccountingHeading AccountingHeading's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 AccountingHeading not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/account-headings\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/account-headings/{recordId} Update account-headings\n * @apiName UpdateAccountingHeading\n * @apiGroup AccountHeading\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId\n * @apiParam {String} code Bank-Heading code\n * @apiParam {String} heading Bank-Heading heading\n * @apiParam {Number} account_class_id Bank-Heading account_class_id\n * @apiParam {String} description Bank-Heading description\n * @apiParam {Number} amount Bank-Heading amount\n * @apiParam {Number} opening_balance Bank-Heading opening_balance\n * @apiParam {Number} bank_account_id Bank-Heading bank_account_id\n * @apiSuccess {Object} AccountingHeading AccountingHeading's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 AccountingHeading not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/account-headings/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/account-headings/{recordId} Delete account-headings\n * @apiName DeleteAccountingHeading\n * @apiGroup AccountHeading\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 AccountingHeading not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/account-headings/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}