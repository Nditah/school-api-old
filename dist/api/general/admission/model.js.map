{"version":3,"sources":["../../../../src/api/general/admission/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","passport","Joi","string","optional","surname","given_name","home_town","address","state_id","county_id","phone","trim","birth_date","date","religion","denomination","last_class","intending_class","last_school","father_name","mgiven_name","home_address","created_by","required","schemaUpdate","updated_by","schema","type","String","ref","Date","minlength","unique","alias","status","options","DATABASE","OPTIONS","newSchema","set","plugin","mongoose_csv","Admission","model"],"mappings":"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","file":"model.js","sourcesContent":["/**\r\n * @author 4Dcoder\r\n * @property {ObjectId} id admission primaryKey\r\n * @property {String} passport Admission passport (required)\r\n * @property {String} surname Admission surname (required)\r\n * @property {String} given_name Admission First Name\r\n * @property {String} home_town Admission Home Town\r\n * @property {String} address Admission village\r\n * @property {String} county_id Admission county\r\n * @property {String} state_id Admission state\r\n * @property {Date}   birth_date Admission date\r\n * @property {String} religion Admission Religion\r\n * @property {String} denomination Admission Denomination\r\n * @property {String} last_class Admission last class attended\r\n * @property {String} intending_class Admission intending class\r\n * @property {String} last_school Admission last school attended\r\n * @property {String} father_name Admission father's name\r\n * @property {String} mgiven_name Admission mother's name\r\n * @property {String} home_address Admission guadians home address\r\n * @property {String} phone Admission guadians phone number\r\n * @description Admission model holds record of all admissions in Peace Group\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\n// eslint-disable-next-line import/no-cycle\r\nimport Staff from \"../staff/model\";\r\nimport State from \"../state/model\";\r\nimport County from \"../county/model\";\r\nimport Classe from \"../office/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    passport: Joi.string().optional(),\r\n    surname: Joi.string().optional(),\r\n    given_name: Joi.string().optional(),\r\n    home_town: Joi.string().optional(),\r\n    address: Joi.string().optional(),\r\n    state_id: Joi.string().optional(),\r\n    county_id: Joi.string().optional(),\r\n    phone: Joi.string().trim().optional(),\r\n    birth_date: Joi.date().optional(),\r\n    religion: Joi.string().optional(),\r\n    denomination: Joi.string().optional(),\r\n    last_class: Joi.string().optional(),\r\n    intending_class: Joi.string().optional(),\r\n    last_school: Joi.string().optional(),\r\n    father_name: Joi.string().optional(),\r\n    mgiven_name: Joi.string().optional(),\r\n    home_address: Joi.string().optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    passport: Joi.string().optional(),\r\n    surname: Joi.string().optional(),\r\n    given_name: Joi.string().optional(),\r\n    home_town: Joi.string().optional(),\r\n    address: Joi.string().optional(),\r\n    state_id: Joi.string().optional(),\r\n    county_id: Joi.string().optional(),\r\n    phone: Joi.string().trim().optional(),\r\n    birth_date: Joi.date().optional(),\r\n    religion: Joi.string().optional(),\r\n    denomination: Joi.string().optional(),\r\n    last_class: Joi.string().optional(),\r\n    intending_class: Joi.string().optional(),\r\n    last_school: Joi.string().optional(),\r\n    father_name: Joi.string().optional(),\r\n    mgiven_name: Joi.string().optional(),\r\n    home_address: Joi.string().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    passport: { type: String },\r\n    surname: { type: String, required: [false, \"Why no surname?\"] },\r\n    given_name: { type: String, required: [false, \"Why no given_names?\"] },\r\n    home_town: { type: String },\r\n    state_id: { type: ObjectId, ref: \"State\" },\r\n    county_id: { type: ObjectId, ref: \"County\" },\r\n    birth_date: { type: Date },\r\n    religion: { type: String },\r\n    denomination: { type: String },\r\n    last_class: { type: ObjectId, ref: \"Classe\" },\r\n    intending_class: { type: ObjectId, ref: \"Classe\" },\r\n    last_school: { type: String },\r\n    father_name: { type: String },\r\n    mgiven_name: { type: String },\r\n    home_address: { type: String },\r\n    phone: {\r\n        type: String,\r\n        minlength: 11,\r\n        trim: true,\r\n        required: [true, \"Why no phone?\"],\r\n        unique: true,\r\n        alias: \"phone_office\",\r\n    },\r\n    status: { type: String },\r\n    created_by: { type: ObjectId, required: true, ref: \"Staff\" },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"admission\");\r\nnewSchema.plugin(mongoose_csv);\r\n\r\nconst Admission = mongoose.model(\"Admission\", newSchema);\r\n\r\nexport default Admission;\r\n"]}