{"version":3,"sources":["../../../../src/api/general/admission/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAF,OAAOG,GAAP,CAAW,aAAX,EAA0B,CAACC,wBAAD,EAAYC,2BAAZ,CAA1B,EAAqDC,uBAArD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BAN,OAAOO,IAAP,CAAY,aAAZ,EAA2B,CAACH,wBAAD,EAAYC,2BAAZ,CAA3B,EAAsDG,wBAAtD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BAR,OAAOS,GAAP,CAAW,uBAAX,EAAoC,CAACL,wBAAD,EAAYC,2BAAZ,CAApC,EAA+DK,wBAA/D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,uBAAd,EAAuC,CAACP,wBAAD,EAAYC,2BAAZ,CAAvC,EAAkEO,wBAAlE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/admissions?id={recordId} Retrieve one or all records\n * @apiName RetrieveAdmission\n * @apiGroup Admission\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/admissions?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records of Staff Admission in a hierarchy that give staff certain privileges.\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/admissions\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/v1/admissions Create admissions\n * @apiName CreateAdmission\n * @apiGroup Admission\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} passport Admission passport (required)\n * @apiParam {String} surname Admission surname (required)\n * @apiParam {String} given_name Admission First Name\n * @apiParam {String} home_town Admission Home Town\n * @apiParam {String} address Admission village\n * @apiParam {String} county_id Admission county\n * @apiParam {String} state_id Admission state\n * @apiParam {Date}   birth_date Admission date\n * @apiParam {String} religion Admission Religion\n * @apiParam {String} denomination Admission Denomination\n * @apiParam {String} last_class Admission last class attended\n * @apiParam {String} intending_class Admission intending class\n * @apiParam {String} last_school Admission last school attended\n * @apiParam {String} father_name Admission father's name\n * @apiParam {String} mother_name Admission mother's name\n * @apiParam {String} home_address Admission guadians home address\n * @apiParam {String} phone Admission guadians phone number\n * @apiError {Object} 422 Some parameters may contain invalid values.\n * @apiError 404 Admission not found.\n * @apiError 500 server error.\n */\nrouter.post(\"/admissions\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/admissions/{recordId} Update admissions\n * @apiName UpdateAdmission\n * @apiGroup Admission\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} passport Admission passport (required)\n * @apiParam {String} surname Admission surname (required)\n * @apiParam {String} given_name Admission First Name\n * @apiParam {String} home_town Admission Home Town\n * @apiParam {String} address Admission village\n * @apiParam {String} county_id Admission county\n * @apiParam {String} state_id Admission state\n * @apiParam {Date}   birth_date Admission date\n * @apiParam {String} religion Admission Religion\n * @apiParam {String} denomination Admission Denomination\n * @apiParam {String} last_class Admission last class attended\n * @apiParam {String} intending_class Admission intending class\n * @apiParam {String} last_school Admission last school attended\n * @apiParam {String} father_name Admission father's name\n * @apiParam {String} mother_name Admission mother's name\n * @apiParam {String} home_address Admission guadians home address\n * @apiParam {String} phone Admission guadians phone number\n * @apiError {Object} 422 Some parameters may contain invalid values.\n * @apiError 404 Admission not found.\n * @apiError 500 server error.\n */\nrouter.put(\"/admissions/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/admissions/{recordId} Delete admissions\n * @apiName DeleteAdmission\n * @apiGroup Admission\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Admission not found.\n * @apiError 401 master Admission only.\n */\nrouter.delete(\"/admissions/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}