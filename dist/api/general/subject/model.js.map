{"version":3,"sources":["../../../../src/api/general/subject/model.js"],"names":["Schema","mongoose","ObjectId","Types","subjectCreate","code","Joi","string","trim","required","name","hod","optional","description","level","valid","Object","values","LEVEL","subsidiary","SUBSIDIARY","category","created_by","subjectUpdate","updated_by","subjectSchema","type","String","unique","ref","Number","enum","courses","deleted","Boolean","default","deleted_at","Date","options","DATABASE","OPTIONS","newSubjectSchema","set","Subject","model","courseCreate","title","number","coefficient","classes","array","subject","teachers","courseUpdate","courseSchema","newCourseSchema","Course"],"mappings":";;;;;;;AAiBA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;;;IAEQA,M,GAAWC,kB,CAAXD,M;AALR;AAnBA;AACA;;;;;;;;;;;;;;;;IAwBQE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,wCAAgB;AACzBC,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADmB;AAEzBC,UAAMJ,cAAIC,MAAJ,GAAaE,QAAb,EAFmB;AAGzBE,SAAKL,cAAIC,MAAJ,GAAaK,QAAb,EAHoB;AAIzBC,iBAAaP,cAAIC,MAAJ,GAAaE,QAAb,EAJY;AAKzBK,WAAOR,cAAIC,MAAJ,GAAaQ,KAAb,CAAmBC,OAAOC,MAAP,CAAcC,gBAAd,CAAnB,EAAyCT,QAAzC,EALkB;AAMzBU,gBAAYb,cAAIC,MAAJ,GAAaC,IAAb,GAAoBO,KAApB,CAA0BC,OAAOC,MAAP,CAAcG,qBAAd,CAA1B,EAAqDX,QAArD,EANa;AAOzBY,cAAUf,cAAIC,MAAJ,GAAaK,QAAb,EAPe;AAQzBU,gBAAYhB,cAAIC,MAAJ,GAAaE,QAAb;AARa,CAAtB;;AAWA,IAAMc,wCAAgB;AACzBlB,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBI,QAApB,EADmB;AAEzBF,UAAMJ,cAAIC,MAAJ,GAAaK,QAAb,EAFmB;AAGzBD,SAAKL,cAAIC,MAAJ,GAAaK,QAAb,EAHoB;AAIzBC,iBAAaP,cAAIC,MAAJ,GAAaK,QAAb,EAJY;AAKzBE,WAAOR,cAAIC,MAAJ,GAAaQ,KAAb,CAAmBC,OAAOC,MAAP,CAAcC,gBAAd,CAAnB,EAAyCN,QAAzC,EALkB;AAMzBO,gBAAYb,cAAIC,MAAJ,GAAaC,IAAb,GAAoBO,KAApB,CAA0BC,OAAOC,MAAP,CAAcG,qBAAd,CAA1B,EAAqDR,QAArD,EANa;AAOzBS,cAAUf,cAAIC,MAAJ,GAAaK,QAAb,EAPe;AAQzBY,gBAAYlB,cAAIC,MAAJ,GAAaE,QAAb;AARa,CAAtB;;AAWA,IAAMgB,wCAAgB;AACzBpB,UAAM,EAAEqB,MAAMC,MAAR,EAAgBlB,UAAU,IAA1B,EAAgCmB,QAAQ,IAAxC,EADmB;AAEzBlB,UAAM,EAAEgB,MAAMC,MAAR,EAAgBlB,UAAU,IAA1B,EAFmB;AAGzBE,SAAK,EAAEe,MAAMxB,QAAR,EAAkB2B,KAAK,OAAvB,EAHoB;AAIzBhB,iBAAa,EAAEa,MAAMC,MAAR,EAAgBlB,UAAU,IAA1B,EAJY;AAKzBK,WAAO;AACHY,cAAMI,MADH;AAEHC,cAAMf,OAAOC,MAAP,CAAcC,gBAAd,CAFH;AAGHT,kBAAU;AAHP,KALkB;AAUzBU,gBAAY;AACRO,cAAMC,MADE;AAERI,cAAMf,OAAOC,MAAP,CAAcG,qBAAd,CAFE;AAGRX,kBAAU;AAHF,KAVa;AAezBuB,aAAS,CAAC,EAAEN,MAAMxB,QAAR,EAAkB2B,KAAK,QAAvB,EAAD,CAfgB;AAgBzBR,cAAU,EAAEK,MAAMxB,QAAR,EAAkB2B,KAAK,UAAvB,EAhBe;AAiBzBI,aAAS,EAAEP,MAAMQ,OAAR,EAAiBC,SAAS,KAA1B,EAAiC1B,UAAU,IAA3C,EAjBgB;AAkBzB2B,gBAAY,EAAEV,MAAMW,IAAR,EAlBa;AAmBzBf,gBAAY,EAAEI,MAAMxB,QAAR,EAAkB2B,KAAK,OAAvB,EAAgCpB,UAAU,IAA1C,EAnBa;AAoBzBe,gBAAY,EAAEE,MAAMxB,QAAR,EAAkB2B,KAAK,OAAvB;AApBa,CAAtB;;AAuBP,IAAMS,UAAUC,oBAASC,OAAzB;;AAEA,IAAMC,mBAAmB,IAAIzC,MAAJ,CAAWyB,aAAX,EAA0Ba,OAA1B,CAAzB;AACAG,iBAAiBC,GAAjB,CAAqB,YAArB,EAAmC,SAAnC;AACA,IAAMC,UAAU1C,mBAAS2C,KAAT,CAAe,SAAf,EAA0BH,gBAA1B,CAAhB;;AAEA;;AAEA;;;;;;;;;;;;;;;;;AAiBO,IAAMI,sCAAe;AACxBC,WAAOxC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADiB;AAExBK,WAAOR,cAAIyC,MAAJ,GAAatC,QAAb,EAFiB;AAGxBJ,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAHkB;AAIxBiB,UAAMpB,cAAIC,MAAJ,GAAaC,IAAb,GAAoBO,KAApB,CAA0B,CAAC,UAAD,EAAa,YAAb,CAA1B,EAAsDN,QAAtD,EAJkB;AAKxBuC,iBAAa1C,cAAIyC,MAAJ,GAAatC,QAAb,EALW;AAMxBI,iBAAaP,cAAIC,MAAJ,GAAaE,QAAb,EANW;AAOxBwC,aAAS3C,cAAI4C,KAAJ,GAAYtC,QAAZ,EAPe;AAQxBuC,aAAS7C,cAAIC,MAAJ,GAAaE,QAAb,EARe;AASxB2C,cAAU9C,cAAI4C,KAAJ,GAAYtC,QAAZ,EATc;AAUxBU,gBAAYhB,cAAIC,MAAJ,GAAaE,QAAb;AAVY,CAArB;;AAaA,IAAM4C,sCAAe;AACxBP,WAAOxC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBI,QAApB,EADiB;AAExBE,WAAOR,cAAIyC,MAAJ,GAAanC,QAAb,EAFiB;AAGxBP,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBI,QAApB,EAHkB;AAIxBc,UAAMpB,cAAIC,MAAJ,GAAaC,IAAb,GAAoBO,KAApB,CAA0B,CAAC,UAAD,EAAa,YAAb,CAA1B,EAAsDH,QAAtD,EAJkB;AAKxBoC,iBAAa1C,cAAIyC,MAAJ,GAAanC,QAAb,EALW;AAMxBC,iBAAaP,cAAIC,MAAJ,GAAaK,QAAb,EANW;AAOxBqC,aAAS3C,cAAI4C,KAAJ,GAAYtC,QAAZ,EAPe;AAQxBuC,aAAS7C,cAAIC,MAAJ,GAAaK,QAAb,EARe;AASxBwC,cAAU9C,cAAI4C,KAAJ,GAAYtC,QAAZ,EATc;AAUxBY,gBAAYlB,cAAIC,MAAJ,GAAaE,QAAb;AAVY,CAArB;;AAaA,IAAM6C,sCAAe;AACxBR,WAAO,EAAEpB,MAAMC,MAAR,EAAgBlB,UAAU,IAA1B,EADiB;AAExBK,WAAO,EAAEY,MAAMC,MAAR,EAAgBlB,UAAU,IAA1B,EAFiB;AAGxBJ,UAAM,EAAEqB,MAAMC,MAAR,EAAgBlB,UAAU,IAA1B,EAHkB;AAIxBiB,UAAM;AACFA,cAAMC,MADJ;AAEFI,cAAM,CAAC,UAAD,EAAa,YAAb,CAFJ;AAGFtB,kBAAU;AAHR,KAJkB;AASxBuC,iBAAa,EAAEtB,MAAMI,MAAR,EAAgBrB,UAAU,IAA1B,EAAgC0B,SAAS,CAAzC,EATW;AAUxBtB,iBAAa,EAAEa,MAAMC,MAAR,EAAgBlB,UAAU,IAA1B,EAVW;AAWxBwC,aAAS,CAAC,EAAEvB,MAAMxB,QAAR,EAAkB2B,KAAK,QAAvB,EAAD,CAXe;AAYxBsB,aAAS,EAAEzB,MAAMxB,QAAR,EAAkB2B,KAAK,SAAvB,EAAkCpB,UAAU,IAA5C,EAZe;AAaxB2C,cAAU,CAAC,EAAE1B,MAAMxB,QAAR,EAAkB2B,KAAK,OAAvB,EAAD,CAbc;AAcxBI,aAAS,EAAEP,MAAMQ,OAAR,EAAiBC,SAAS,KAA1B,EAAiC1B,UAAU,IAA3C,EAde;AAexB2B,gBAAY,EAAEV,MAAMW,IAAR,EAfY;AAgBxBf,gBAAY,EAAEI,MAAMxB,QAAR,EAAkB2B,KAAK,OAAvB,EAAgCpB,UAAU,IAA1C,EAhBY;AAiBxBe,gBAAY,EAAEE,MAAMxB,QAAR,EAAkB2B,KAAK,OAAvB;AAjBY,CAArB;;AAoBP,IAAM0B,kBAAkB,IAAIvD,MAAJ,CAAWsD,YAAX,EAAyBhB,OAAzB,CAAxB;AACAiB,gBAAgBb,GAAhB,CAAoB,YAApB,EAAkC,QAAlC;AACA,IAAMc,SAASvD,mBAAS2C,KAAT,CAAe,QAAf,EAAyBW,eAAzB,CAAf;;QAESC,M,GAAAA,M;QAAQb,O,GAAAA,O","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Decoder\n * @property {ObjectId} id Subject ObjectId primaryKey\n * @property {String} name Subject name (required)\n * @property {String} code Subject code (required)\n * @property {ObjectId} hod Subject hod\n * @property {String} description Subject description (optional)\n * @property {Number} level Subject level [1-7]\n * @property {String} subsidiary Subject subsidiary\n * @property {Array} courses Subject courses (prohibited)\n * @property {ObjectId} category Subject category\n * @property {ObjectId} created_by Subject Staff ObjectId who created the record\n * @property {ObjectId} updated_by Subject Staff ObjectId who update the record\n * @description Subject holds record of all subjects in the school.\n */\n\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport { DATABASE, SUBSIDIARY, LEVEL } from \"../../../constants\";\nimport Staff from \"../staff/model\";\nimport Category from \"../category/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const subjectCreate = {\n    code: Joi.string().trim().required(),\n    name: Joi.string().required(),\n    hod: Joi.string().optional(),\n    description: Joi.string().required(),\n    level: Joi.string().valid(Object.values(LEVEL)).required(),\n    subsidiary: Joi.string().trim().valid(Object.values(SUBSIDIARY)).required(),\n    category: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const subjectUpdate = {\n    code: Joi.string().trim().optional(),\n    name: Joi.string().optional(),\n    hod: Joi.string().optional(),\n    description: Joi.string().optional(),\n    level: Joi.string().valid(Object.values(LEVEL)).optional(),\n    subsidiary: Joi.string().trim().valid(Object.values(SUBSIDIARY)).optional(),\n    category: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const subjectSchema = {\n    code: { type: String, required: true, unique: true },\n    name: { type: String, required: true },\n    hod: { type: ObjectId, ref: \"Staff\" },\n    description: { type: String, required: true },\n    level: {\n        type: Number,\n        enum: Object.values(LEVEL),\n        required: true,\n    },\n    subsidiary: {\n        type: String,\n        enum: Object.values(SUBSIDIARY),\n        required: true,\n    },\n    courses: [{ type: ObjectId, ref: \"Course\" }],\n    category: { type: ObjectId, ref: \"Category\" },\n    deleted: { type: Boolean, default: false, required: true },\n    deleted_at: { type: Date },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSubjectSchema = new Schema(subjectSchema, options);\nnewSubjectSchema.set(\"collection\", \"subject\");\nconst Subject = mongoose.model(\"Subject\", newSubjectSchema);\n\n//* ======= COURSE =========\n\n/**\n * @author 4Decoder\n * @property {String} id Course ObjectId primaryKey\n * @property {String} title Course title (required)\n * @property {String} level Course level (required)\n * @property {String} code Course code (required)\n * @property {String} type Course type \"ELECTIVE|COMPULSORY\"\n * @property {String} coefficient Course coefficient (required)\n * @property {String} description Course description (required)\n * @property {Array} classes Course classes  Array<ObjectId>\n * @property {String} subject Course subject (required)\n * @property {Array} teachers Course teachers Array<ObjectId>\n * @property {ObjectId} created_by Course record created by\n * @property {ObjectId} updated_by Course record modified by\n * @description Course holds record of all courses in the school.\n */\n\nexport const courseCreate = {\n    title: Joi.string().trim().required(),\n    level: Joi.number().required(),\n    code: Joi.string().trim().required(),\n    type: Joi.string().trim().valid([\"ELECTIVE\", \"COMPULSORY\"]).required(),\n    coefficient: Joi.number().required(),\n    description: Joi.string().required(),\n    classes: Joi.array().optional(),\n    subject: Joi.string().required(),\n    teachers: Joi.array().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const courseUpdate = {\n    title: Joi.string().trim().optional(),\n    level: Joi.number().optional(),\n    code: Joi.string().trim().optional(),\n    type: Joi.string().trim().valid([\"ELECTIVE\", \"COMPULSORY\"]).optional(),\n    coefficient: Joi.number().optional(),\n    description: Joi.string().optional(),\n    classes: Joi.array().optional(),\n    subject: Joi.string().optional(),\n    teachers: Joi.array().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const courseSchema = {\n    title: { type: String, required: true },\n    level: { type: String, required: true },\n    code: { type: String, required: true },\n    type: {\n        type: String,\n        enum: [\"ELECTIVE\", \"COMPULSORY\"],\n        required: true,\n    },\n    coefficient: { type: Number, required: true, default: 1 },\n    description: { type: String, required: true },\n    classes: [{ type: ObjectId, ref: \"Classe\" }],\n    subject: { type: ObjectId, ref: \"Subject\", required: true },\n    teachers: [{ type: ObjectId, ref: \"Staff\" }],\n    deleted: { type: Boolean, default: false, required: true },\n    deleted_at: { type: Date },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst newCourseSchema = new Schema(courseSchema, options);\nnewCourseSchema.set(\"collection\", \"course\");\nconst Course = mongoose.model(\"Course\", newCourseSchema);\n\nexport { Course, Subject };\n"]}