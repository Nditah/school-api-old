{"version":3,"sources":["../../../../src/api/general/subject/model.js"],"names":["Schema","mongoose","ObjectId","Types","subjectCreate","code","Joi","string","trim","required","name","hod","optional","description","subsidiary","valid","Object","values","SUBSIDIARY","category","created_by","subjectUpdate","updated_by","subjectSchema","type","String","unique","ref","enum","courses","deleted","Boolean","default","deleted_at","Date","options","DATABASE","OPTIONS","newSubjectSchema","set","Subject","model","courseCreate","title","level","LEVEL","coefficient","number","classes","array","subject","teachers","courseUpdate","courseSchema","Number","newCourseSchema","Course"],"mappings":"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","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Decoder\n * @property {ObjectId} id Subject ObjectId primaryKey\n * @property {String} name Subject name (required)\n * @property {String} code Subject code (required)\n * @property {ObjectId} hod Subject hod\n * @property {String} description Subject description (optional)\n * @property {String} subsidiary Subject subsidiary\n * @property {Array} courses Subject courses (prohibited)\n * @property {ObjectId} category Subject category\n * @property {ObjectId} created_by Subject Staff ObjectId who created the record\n * @property {ObjectId} updated_by Subject Staff ObjectId who update the record\n * @description Subject holds record of all subjects in the school.\n */\n\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport { DATABASE, SUBSIDIARY, LEVEL } from \"../../../constants\";\nimport Staff from \"../staff/model\";\nimport Category from \"../category/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const subjectCreate = {\n    code: Joi.string().trim().required(),\n    name: Joi.string().required(),\n    hod: Joi.string().optional(),\n    description: Joi.string().required(),\n    subsidiary: Joi.string().trim().valid(Object.values(SUBSIDIARY)).required(),\n    category: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const subjectUpdate = {\n    code: Joi.string().trim().optional(),\n    name: Joi.string().optional(),\n    hod: Joi.string().optional(),\n    description: Joi.string().optional(),\n    subsidiary: Joi.string().trim().valid(Object.values(SUBSIDIARY)).optional(),\n    category: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const subjectSchema = {\n    code: { type: String, required: true, unique: true },\n    name: { type: String, required: true },\n    hod: { type: ObjectId, ref: \"Staff\" },\n    description: { type: String, required: true },\n    subsidiary: {\n        type: String,\n        enum: Object.values(SUBSIDIARY),\n        required: true,\n    },\n    courses: [{ type: ObjectId, ref: \"Course\" }],\n    category: { type: ObjectId, ref: \"Category\" },\n    deleted: { type: Boolean, default: false, required: true },\n    deleted_at: { type: Date },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSubjectSchema = new Schema(subjectSchema, options);\nnewSubjectSchema.set(\"collection\", \"subject\");\nconst Subject = mongoose.model(\"Subject\", newSubjectSchema);\n\n//* ======= COURSE =========\n\n/**\n * @author 4Decoder\n * @property {String} id Course ObjectId primaryKey\n * @property {String} title Course title (required)\n * @property {String} level Course level [1-7] (required)\n * @property {String} code Course code (required)\n * @property {String} type Course type \"ELECTIVE|COMPULSORY\"\n * @property {String} coefficient Course coefficient (required)\n * @property {String} description Course description (required)\n * @property {Array} classes Course classes  Array<ObjectId>\n * @property {String} subject Course subject (required)\n * @property {Array} teachers Course teachers Array<ObjectId>\n * @property {ObjectId} category Subject category\n * @property {ObjectId} created_by Course record created by\n * @property {ObjectId} updated_by Course record modified by\n * @description Course holds record of all courses in the school.\n */\n\nexport const courseCreate = {\n    title: Joi.string().trim().required(),\n    level: Joi.string().valid(Object.values(LEVEL)).required(),\n    code: Joi.string().trim().required(),\n    type: Joi.string().trim().valid([\"ELECTIVE\", \"COMPULSORY\"]).required(),\n    coefficient: Joi.number().required(),\n    description: Joi.string().required(),\n    classes: Joi.array().optional(),\n    subject: Joi.string().required(),\n    teachers: Joi.array().optional(),\n    category: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const courseUpdate = {\n    title: Joi.string().trim().optional(),\n    level: Joi.string().valid(Object.values(LEVEL)).optional(),\n    code: Joi.string().trim().optional(),\n    type: Joi.string().trim().valid([\"ELECTIVE\", \"COMPULSORY\"]).optional(),\n    coefficient: Joi.number().optional(),\n    description: Joi.string().optional(),\n    classes: Joi.array().optional(),\n    subject: Joi.string().optional(),\n    teachers: Joi.array().optional(),\n    category: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const courseSchema = {\n    title: { type: String, required: true },\n    level: {\n        type: Number,\n        enum: Object.values(LEVEL),\n        required: true,\n    },\n    code: { type: String, required: true },\n    type: {\n        type: String,\n        enum: [\"ELECTIVE\", \"COMPULSORY\"],\n        required: true,\n    },\n    coefficient: { type: Number, required: true, default: 1 },\n    description: { type: String, required: true },\n    classes: [{ type: ObjectId, ref: \"Classe\" }],\n    subject: { type: ObjectId, ref: \"Subject\", required: true },\n    teachers: [{ type: ObjectId, ref: \"Staff\" }],\n    category: { type: ObjectId, ref: \"Category\" },\n    deleted: { type: Boolean, default: false, required: true },\n    deleted_at: { type: Date },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst newCourseSchema = new Schema(courseSchema, options);\nnewCourseSchema.set(\"collection\", \"course\");\nconst Course = mongoose.model(\"Course\", newCourseSchema);\n\nexport { Course, Subject };\n"]}