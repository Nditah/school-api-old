{"version":3,"sources":["../../../../src/api/general/message/routes.js"],"names":["router","express","Router","get","checkAuth","fetchRecord","post","isValidStaff","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,WAAX,EAAwB,CAACC,wBAAD,CAAxB,EAAqCC,uBAArC;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBAL,OAAOM,IAAP,CAAY,WAAZ,EAAyB,CAACF,wBAAD,EAAYG,2BAAZ,CAAzB,EAAoDC,wBAApD;;AAEA;;;;;;;;;;;;;AAaAR,OAAOS,GAAP,CAAW,qBAAX,EAAkCL,wBAAlC,EAA6CM,wBAA7C;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,qBAAd,EAAqC,CAACP,wBAAD,EAAYG,2BAAZ,CAArC,EAAgEK,wBAAhE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/messages?id={recordId} Retrieve one or all records\r\n * @apiName RetrieveMessage\r\n * @apiGroup Message\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i api/messages?\r\n * @apiParam {Object} filter query condition (optional)\r\n * @apiParam {Number} skip Number of records to offset by (optional)\r\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\r\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\r\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\r\n * @apiDescription Records  of account headings belonging to one classification\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/messages\", [checkAuth], fetchRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/messages Create messages\r\n * @apiName CreateMessage\r\n * @apiGroup Message\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} sender Message sender-type \"STAFF|CUSTOMER|PARTNER|PARTNER\"\r\n * @apiParam {String} recipient Message recipient type \"STAFF|CUSTOMER|PARTNER|PARTNER\"\r\n * @apiParam {ObjectId} staff_id Message recipient staff-user id\r\n * @apiParam {ObjectId} partner_id Message recipient driver-user id\r\n * @apiParam {ObjectId} customer_id Message recipient customer-user id\r\n * @apiParam {ObjectId} partner_id Message recipient partner-user id\r\n * @apiParam {String} subject Message subject\r\n * @apiParam {String} body Message body\r\n * @apiParam {String} receive_status Message receive_status\r\n * @apiParam {String} sent_status Message sent_status\r\n * @apiSuccess {Object} Message Message's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Message not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/messages\", [checkAuth, isValidStaff], createRecord);\r\n\r\n/**\r\n * @api {put} /api/v1/messages/{recordId} Update messages\r\n * @apiName UpdateMessage\r\n * @apiGroup Message\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiParam {String} receive_status Message receive_status\r\n * @apiParam {String} sent_status Message sent_status\r\n * @apiSuccess {Object} Message Message's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Message not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.put(\"/messages/:recordId\", checkAuth, updateRecord);\r\n\r\n/**\r\n * @api {delete} /api/v1/messages/{recordId} Delete messages\r\n * @apiName DeleteMessage\r\n * @apiGroup Message\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiSuccess (Success 204) 204 No Content.\r\n * @apiError 404 Message not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.delete(\"/messages/:recordId\", [checkAuth, isValidStaff], deleteRecord);\r\n\r\nexport default router;\r\n"]}