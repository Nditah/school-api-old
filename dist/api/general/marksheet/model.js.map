{"version":3,"sources":["../../../../src/api/general/marksheet/model.js"],"names":["Schema","mongoose","ObjectId","Types","marksheetCreate","type","Joi","string","valid","required","course","student","score","number","total","assessment_sitting","optional","create_by","marksheetUpdate","updated_by","marksheetSchema","String","enum","ref","Number","deleted","Boolean","default","deleted_at","Date","created_by","options","DATABASE","OPTIONS","newMarksheetSchema","set","Marksheet","model","resultCreate","trim","term","cumulated","array","marksheets","evaluation","rank","resultUpdate","resultSchema","newResultSchema","Result"],"mappings":"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","file":"model.js","sourcesContent":["//* ===== MARKSHEET =====\n\n/**\n * @author 4Dcoder\n * @property {ObjectId} id Marksheet primaryKey\n * @property {String} type Marksheet type \"PAPER|CBT\"\n * @property {ObjectId} course Marksheet course\n * @property {ObjectId} student Marksheet student\n * @property {Number} score Marksheet score\n * @property {ObjectId} assessment_sitting Marksheet AssessmentSitting\n * @description Markheet records score per student per course\n */\n\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport Staff from \"../staff/model\";\nimport Student from \"../student/model\";\nimport Classe from \"../classe/model\";\nimport { AssessmentSitting } from \"../assessment/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const marksheetCreate = {\n    type: Joi.string().valid([\"PAPER\", \"CBT\"]).required(),\n    course: Joi.string().required(),\n    student: Joi.string().required(),\n    score: Joi.number().required(),\n    total: Joi.number().required(),\n    assessment_sitting: Joi.string().optional(),\n    create_by: Joi.string().required(),\n};\n\nexport const marksheetUpdate = {\n    type: Joi.string().valid([\"PAPER\", \"CBT\"]).optional(),\n    course: Joi.string().optional(),\n    student: Joi.string().optional(),\n    score: Joi.number().optional(),\n    total: Joi.number().optional(),\n    assessment_sitting: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const marksheetSchema = {\n    type: { type: String, enum: [\"PAPER\", \"CBT\"], required: true },\n    course: { type: ObjectId, ref: \"Course\", required: true },\n    student: { type: ObjectId, ref: \"Student\", required: true },\n    score: { type: Number, required: true },\n    assessment_sitting: { type: ObjectId, ref: \"AssessmentSitting\" },\n    deleted: { type: Boolean, default: false, required: true },\n    deleted_at: { type: Date },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newMarksheetSchema = new Schema(marksheetSchema, options);\nnewMarksheetSchema.set(\"collection\", \"marksheet\");\nconst Marksheet = mongoose.model(\"Marksheet\", newMarksheetSchema);\n\n//* ===== RESULT =========\n/**\n * @author 4Dcoder\n * @property {ObjectId} id Report primaryKey\n * @property {String} type Report type \"EVALUATION|TERMLY|ANNUAL\" required\n * @property {String} term Report type \"FIRST|SECOND|THRID|ANNUAL\" required\n * @property {Array} cumulated Report cumulated Result Array\n * @property {ObjectId} student Report student ObjectId\n * @property {Array} marksheets Report marksheets Array<Marksheet>\n * @property {Number} evaluation Report evaluation [1, 2, 3, 4]\n * @property {Number} total Report total\n * @property {Number} rank Report rank for that report\n * @description Result ( a type of report) holds generated academic report being computed\n */\n\nexport const resultCreate = {\n    type: Joi.string().trim().valid([\"EVALUATION\", \"TERMLY\", \"ANNUAL\"]).required(),\n    term: Joi.string().trim().valid([\"FIRST\", \"SECOND\", \"THRID\", \"ANNUAL\"]).required(),\n    cumulated: Joi.array().optional(),\n    student: Joi.string().optional(),\n    marksheets: Joi.array().optional(),\n    evaluation: Joi.number().valid([1, 2, 3, 4]).required(),\n    total: Joi.number().optional(),\n    rank: Joi.number().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const resultUpdate = {\n    type: Joi.string().trim().valid([\"EVALUATION\", \"TERMLY\", \"ANNUAL\"]).required(),\n    term: Joi.string().trim().valid([\"FIRST\", \"SECOND\", \"THRID\", \"ANNUAL\"]).required(),\n    cumulated: Joi.array().optional(),\n    student: Joi.string().optional(),\n    marksheets: Joi.array().optional(),\n    evaluation: Joi.number().valid([1, 2, 3, 4]).required(),\n    total: Joi.number().optional(),\n    rank: Joi.number().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const resultSchema = {\n    type: { type: String, enum: [\"EVALUATION\", \"TERMLY\", \"ANNUAL\"], required: true },\n    term: { type: String, enum: [\"FIRST\", \"SECOND\", \"THRID\", \"ANNUAL\"], required: true },\n    cumulated: [{ type: ObjectId, ref: \"Result\" }], // for annual\n    student: { type: ObjectId, ref: \"Student\", required: true },\n    marksheets: [{ type: ObjectId, ref: \"Marksheet\" }],\n    evaluation: { type: Number, enum: [1, 2, 3, 4], required: true },\n    total: { type: Number },\n    rank: { type: Number },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst newResultSchema = new Schema(resultSchema, options);\nnewResultSchema.set(\"collection\", \"result\");\nconst Result = mongoose.model(\"Result\", newResultSchema);\n\nexport { Marksheet, Result };\n"]}