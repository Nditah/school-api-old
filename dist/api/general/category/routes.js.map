{"version":3,"sources":["../../../../src/api/general/category/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAF,OAAOG,GAAP,CAAW,aAAX,EAA0B,CAACC,wBAAD,EAAYC,2BAAZ,CAA1B,EAAqDC,uBAArD;;AAEA;;;;;;;;;;;;;;;AAeAN,OAAOO,IAAP,CAAY,aAAZ,EAA2B,CAACH,wBAAD,EAAYC,2BAAZ,CAA3B,EAAsDG,wBAAtD;;AAEA;;;;;;;;;;;;;;;;AAgBAR,OAAOS,GAAP,CAAW,uBAAX,EAAoC,CAACL,wBAAD,EAAYC,2BAAZ,CAApC,EAA+DK,wBAA/D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,uBAAd,EAAuC,CAACP,wBAAD,EAAYC,2BAAZ,CAAvC,EAAkEO,wBAAlE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/categories?id={recordId} Retrieve one or all records\r\n * @apiName RetrieveCategory\r\n * @apiGroup Category\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i api/categories?\r\n * @apiParam {Object} filter query condition (optional)\r\n * @apiParam {Number} skip Number of records to offset by (optional)\r\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\r\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\r\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\r\n * @apiDescription Records  of account headings belonging to one classification\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/categories\", [checkAuth, isValidStaff], fetchRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/categories Create categories\r\n * @apiName CreateCategory\r\n * @apiGroup Category\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} type Category type of category (required)\r\n *  \"MATERIAL\", \"PRODUCT\", \"VEHICLE\", \"STAFF\", \"PARTNER\", \"ASSET\"\r\n * @apiParam {String} name Category name (required)\r\n * @apiParam {String} description Category description (required)\r\n * @apiParam {String} subsidiary Category PET|CHEM|PLANT|ENGR (required)\r\n * @apiSuccess {Object} Category Category's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Category not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/categories\", [checkAuth, isValidStaff], createRecord);\r\n\r\n/**\r\n * @api {put} /api/v1/categories/{recordId} Update categories\r\n * @apiName UpdateCategory\r\n * @apiGroup Category\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiParam {String} type Category type of category\r\n *  \"MATERIAL\", \"PRODUCT\", \"VEHICLE\", \"STAFF\", \"PARTNER\", \"ASSET\"\r\n * @apiParam {String} name Category name\r\n * @apiParam {String} description Category description\r\n * @apiParam {String} subsidiary Category PET|CHEM|PLANT|ENGR\r\n * @apiSuccess {Object} Category Category's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Category not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.put(\"/categories/:recordId\", [checkAuth, isValidStaff], updateRecord);\r\n\r\n/**\r\n * @api {delete} /api/v1/categories/{recordId} Delete categories\r\n * @apiName DeleteCategory\r\n * @apiGroup Category\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiSuccess (Success 204) 204 No Content.\r\n * @apiError 404 Category not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.delete(\"/categories/:recordId\", [checkAuth, isValidStaff], deleteRecord);\r\n\r\nexport default router;\r\n"]}