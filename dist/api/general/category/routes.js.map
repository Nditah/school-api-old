{"version":3,"sources":["../../../../src/api/general/category/routes.js"],"names":["express","checkAuth","isValidStaff","fetchRecord","createRecord","updateRecord","deleteRecord","router","Router","get","post","put","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,mCAAxC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkDC,YAAlD,QAAsE,cAAtE;;AAEA,MAAMC,SAASP,QAAQQ,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAD,OAAOE,GAAP,CAAW,aAAX,EAA0B,CAACR,SAAD,EAAYC,YAAZ,CAA1B,EAAqDC,WAArD;;AAEA;;;;;;;;;;;;;;;AAeAI,OAAOG,IAAP,CAAY,aAAZ,EAA2B,CAACT,SAAD,EAAYC,YAAZ,CAA3B,EAAsDE,YAAtD;;AAEA;;;;;;;;;;;;;;;;AAgBAG,OAAOI,GAAP,CAAW,uBAAX,EAAoC,CAACV,SAAD,EAAYC,YAAZ,CAApC,EAA+DG,YAA/D;;AAEA;;;;;;;;;;AAUAE,OAAOK,MAAP,CAAc,uBAAd,EAAuC,CAACX,SAAD,EAAYC,YAAZ,CAAvC,EAAkEI,YAAlE;;AAEA,eAAeC,MAAf","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/categories?id={recordId} Retrieve one or all records\n * @apiName RetrieveCategory\n * @apiGroup Category\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/categories?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/categories\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/categories Create categories\n * @apiName CreateCategory\n * @apiGroup Category\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} type Category type of category (required)\n *  \"MATERIAL\", \"PRODUCT\", \"VEHICLE\", \"STAFF\", \"PARTNER\", \"ASSET\"\n * @apiParam {String} name Category name (required)\n * @apiParam {String} description Category description (required)\n * @apiParam {String} subsidiary Category PET|CHEM|PLANT|ENGR (required)\n * @apiSuccess {Object} Category Category's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Category not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/categories\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/categories/{recordId} Update categories\n * @apiName UpdateCategory\n * @apiGroup Category\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {String} type Category type of category\n *  \"MATERIAL\", \"PRODUCT\", \"VEHICLE\", \"STAFF\", \"PARTNER\", \"ASSET\"\n * @apiParam {String} name Category name\n * @apiParam {String} description Category description\n * @apiParam {String} subsidiary Category PET|CHEM|PLANT|ENGR\n * @apiSuccess {Object} Category Category's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Category not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/categories/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/categories/{recordId} Delete categories\n * @apiName DeleteCategory\n * @apiGroup Category\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Category not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/categories/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}