{"version":3,"sources":["../../../../src/api/general/homework/routes.js"],"names":["router","express","Router","get","checkAuth","fetchHomework","post","isValidCustomer","createHomework","put","isValidStaff","updateHomework","delete","deleteHomework"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,YAAX,EAAyB,CAACC,wBAAD,CAAzB,EAAsCC,yBAAtC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBAL,OAAOM,IAAP,CAAY,YAAZ,EAA0B,CAACF,wBAAD,EAAYG,8BAAZ,CAA1B,EAAwDC,0BAAxD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBAR,OAAOS,GAAP,CAAW,sBAAX,EAAmC,CAACL,wBAAD,EAAYM,2BAAZ,CAAnC,EAA8DC,0BAA9D;;AAEA;;;;;;;;;;AAUAX,OAAOY,MAAP,CAAc,sBAAd,EAAsC,CAACR,wBAAD,EAAYM,2BAAZ,CAAtC,EAAiEG,0BAAjE;;kBAEeb,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff, isValidCustomer } from \"../../../middleware/authorization\";\nimport { fetchHomework, createHomework, updateHomework, deleteHomework } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/homeworks?id={recordId} Retrieve one or all records\n * @apiName RetrieveHomeworks\n * @apiGroup Homework\n * @apiHeader {String} Authorization Bearer token\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/homeworks?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Homeworks  of permissible api routes staff can access\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/homeworks\", [checkAuth], fetchHomework);\n\n/**\n * @api {post} /api/v1/homeworks Create homeworks\n * @apiName CreateHomework\n * @apiGroup Homework\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} code Homework code\n * @apiParam {String} code Homework code \"TEST|CA|EXAM\"\n * @apiParam {String} mode Homework mode \"ORAL|PAPER|CBT|DEMO\"\n * @apiParam {Date} written_date Homework written_date\n * @apiParam {Date} started_at Homework started dateime\n * @apiParam {Date} ended_at Homework ended dateime\n * @apiParam {Number} duration Homework duration\n * @apiParam {ObjectId} course Homework course\n * @apiParam {ObjectId} examiner Homework examiner ObjectId\n * @apiParam {Array} questionnaires Homework questionnaires array of ObjectId\n * @apiParam {ObjectId} classroom Homeworkclassroom or venue ObjectId\n * @apiParam {String} students Homework students or candidates array ObjectId\n * @apiParam {String} status Homework status \"PENDING|DONE|CLOSED\"\n * @apiSuccess {Object} Homework Homework's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Homework not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/homeworks\", [checkAuth, isValidCustomer], createHomework);\n\n/**\n * @api {put} /api/v1/homeworks/{recordId} Update homeworks\n * @apiName UpdateHomework\n * @apiGroup Homework\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId.\n * @apiParam {String} code Homework code\n * @apiParam {String} code Homework code \"TEST|CA|EXAM\"\n * @apiParam {String} mode Homework mode \"ORAL|PAPER|CBT|DEMO\"\n * @apiParam {Date} written_date Homework written_date\n * @apiParam {Date} started_at Homework started dateime\n * @apiParam {Date} ended_at Homework ended dateime\n * @apiParam {Number} duration Homework duration\n * @apiParam {ObjectId} course Homework course\n * @apiParam {ObjectId} examiner Homework examiner ObjectId\n * @apiParam {Array} questionnaires Homework questionnaires array of ObjectId\n * @apiParam {ObjectId} classroom Homeworkclassroom or venue ObjectId\n * @apiParam {String} students Homework students or candidates array ObjectId\n * @apiParam {String} status Homework status \"PENDING|DONE|CLOSED\"\n * @apiSuccess {Object} Homework Homework's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Homework not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/homeworks/:recordId\", [checkAuth, isValidStaff], updateHomework);\n\n/**\n * @api {delete} /api/v1/homeworks/{recordId} Delete homeworks\n * @apiName DeleteHomework\n * @apiGroup Homework\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Homework not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/homeworks/:recordId\", [checkAuth, isValidStaff], deleteHomework);\n\nexport default router;\n"]}