{"version":3,"sources":["../../../../src/api/general/homework/model.js"],"names":["Schema","mongoose","ObjectId","Types","homeworkCreate","code","Joi","string","required","type","valid","mode","written_date","date","optional","started_at","ended_at","duration","number","course","examiner","questionnaires","classroom","created_by","homeworkUpdate","students","array","status","updated_by","homeworkSchema","String","enum","Date","Number","comment","ref","default","deleted","Boolean","deleted_at","options","DATABASE","OPTIONS","newHomeworkSchema","set","Homework","model"],"mappings":"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","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {ObjectId} id Homework primaryKey\n * @property {String} code Homework code\n * @property {String} type Homework type \"TEST|CA|EXAM\"\n * @property {String} mode Homework mode \"ORAL|PAPER|CBT|DEMO\"\n * @property {Date} written_date Homework written_date\n * @property {Date} started_at Homework started dateime\n * @property {Date} ended_at Homework ended dateime\n * @property {Number} duration Homework duration\n * @property {ObjectId} course Homework course\n * @property {ObjectId} examiner Homework examiner ObjectId\n * @property {Array} questionnaires Homework questionnaires array of ObjectId\n * @property {ObjectId} classroom Homeworkclassroom or venue ObjectId\n * @property {String} students Homework students or candidates array ObjectId\n * @property {String} status Homework status \"PENDING|OPEN|CLOSED\"\n * @property {Boolean} deleted Homework delete status\n * @property {ObjectId} created_by Homework created Staff\n * @property {ObjectId} updated_by Homework updated Staff\n * @description Homework records evaluation of students for courses\n */\n\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport Staff from \"../staff/model\";\nimport Student from \"../student/model\";\nimport { Course } from \"../subject/model\";\nimport Questionnaire from \"../questionnaire/model\";\nimport Classroom from \"../classroom/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const homeworkCreate = {\n    code: Joi.string().required(),\n    type: Joi.string().valid([\"TEST\", \"CA\", \"EXAM\"]).required(),\n    mode: Joi.string().valid([\"ORAL\", \"PAPER\", \"CBT\", \"DEMO\"]).required(),\n    written_date: Joi.date().optional(),\n    started_at: Joi.date().optional(),\n    ended_at: Joi.date().optional(),\n    duration: Joi.number().optional(),\n    course: Joi.string().required(),\n    examiner: Joi.string().required(),\n    questionnaires: Joi.string().optional(),\n    classroom: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const homeworkUpdate = {\n    code: Joi.string().optional(),\n    type: Joi.string().valid([\"TEST\", \"CA\", \"EXAM\"]).optional(),\n    mode: Joi.string().valid([\"ORAL\", \"PAPER\", \"CBT\", \"DEMO\"]).optional(),\n    written_date: Joi.date().optional(),\n    started_at: Joi.date().optional(),\n    ended_at: Joi.date().optional(),\n    duration: Joi.number().optional(),\n    course: Joi.string().optional(),\n    examiner: Joi.string().optional(),\n    questionnaires: Joi.string().optional(),\n    classroom: Joi.string().optional(),\n    students: Joi.array().optional(),\n    status: Joi.string().valid([\"PENDING\", \"OPEN\", \"CLOSED\"]).optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const homeworkSchema = {\n    code: { type: String, required: true },\n    type: { type: String, enum: [\"TEST\", \"CA\", \"EXAM\"], required: true },\n    mode: { type: String, enum: [\"ORAL\", \"PAPER\", \"CBT\", \"DEMO\"], required: true },\n    written_date: { type: Date },\n    started_at: { type: Date },\n    ended_at: { type: Date },\n    duration: { type: Number, comment: \"Minutes\" },\n    course: { type: ObjectId, ref: \"Course\", required: true },\n    examiner: { type: ObjectId, ref: \"Staff\" },\n    questionnaires: [{ type: ObjectId, ref: \"Questionnaire\" }],\n    classroom: { type: ObjectId, ref: \"Classroom\", comment: \"Venue\" },\n    students: [{ type: ObjectId, ref: \"Student\" }],\n    status: { type: String, enum: [\"PENDING\", \"OPEN\", \"CLOSED\"], default: \"PENDING\" },\n    deleted: { type: Boolean, default: false, required: true },\n    deleted_at: { type: Date },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newHomeworkSchema = new Schema(homeworkSchema, options);\nnewHomeworkSchema.set(\"collection\", \"homework\");\nconst Homework = mongoose.model(\"Homework\", newHomeworkSchema);\n\nexport default Homework;\n"]}