{"version":3,"sources":["../../../../src/api/general/asset-assignment/controller.js"],"names":["Joi","log4js","aqp","AssetAssignment","schemaCreate","schemaUpdate","success","fail","notFound","isObjecId","timestamp","STATUS_MSG","Partner","Staff","Vehicle","Asset","logger","getLogger","configure","appenders","file","type","filename","categories","default","level","fetchRecord","req","res","query","filter","skip","limit","sort","projection","result","find","populate","path","select","exec","info","SUCCESS","DEFAULT","err","error","message","createRecord","data","body","validate","assignment_status","issued_date","issued_by","created_by","UserModel","userId","user_type","AssetModel","assetId","asset_type","newRecord","save","updateVehicle","vehicle_custodian","vehicle_assignment","updateUser","$push","asset_assigment_ids","_id","update","vehicle_id","updateRecord","recordId","id","params","updated_by","findOneAndUpdate","new","deleteRecord","findOneAndRemove","$pull","result2"],"mappings":"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","file":"controller.js","sourcesContent":["import Joi from \"joi\";\nimport log4js from \"log4js\";\nimport aqp from \"api-query-params\";\nimport AssetAssignment, { schemaCreate, schemaUpdate } from \"./model\";\nimport { success, fail, notFound, isObjecId, timestamp } from \"../../../lib\";\nimport { STATUS_MSG } from \"../../../constants\";\nimport Partner from \"../partner/model\";\nimport Staff from \"../staff/model\";\nimport Vehicle from \"../vehicle/model\";\nimport Asset from \"../asset/model\";\n\n// Logging\nconst logger = log4js.getLogger(\"[asset-assignments]\");\nlog4js.configure({\n    appenders: { file: { type: \"file\", filename: \"logs/asset-assignments.log\" } },\n    categories: { default: { appenders: [\"file\"], level: \"debug\" } },\n});\n\nexport async function fetchRecord(req, res) {\n    const { query } = req;\n    const { filter, skip, limit, sort, projection } = aqp(query);\n    try {\n        const result = await AssetAssignment.find(filter)\n            .populate(\"asset_id\")\n            .populate(\"vehicle_id\")\n            .populate(\"task_id\")\n            .populate({ path: \"staff_id\", select: \"-password -otp\" })\n            .populate({ path: \"partner_id\", select: \"-password -otp\" })\n            .populate({ path: \"created_by\", select: \"surname other_name email phone\" })\n            .populate({ path: \"updated_by\", select: \"surname other_name email phone\" })\n            .skip(skip)\n            .limit(limit)\n            .sort(sort)\n            .select(projection)\n            .exec();\n        if (!result) {\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n        logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n        return success(res, 201, result, null);\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error retrieving record. ${err.message}`);\n    }\n}\n\n// eslint-disable-next-line complexity\nexport async function createRecord(req, res) {\n    const data = req.body;\n    const { error } = Joi.validate(data, schemaCreate);\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\n\n    if (data.assignment_status === \"ISSUED\") {\n        data.issued_date = data.issued_date ? data.issued_date : timestamp();\n        data.issued_by = data.created_by;\n    }\n    let UserModel;\n    let userId;\n    switch (data.user_type) {\n    case \"PARTNER\": UserModel = Partner; userId = \"partner_id\"; break;\n    case \"STAFF\": UserModel = Staff; userId = \"staff_id\"; break;\n    default: return fail(res, 422, `Error invalid user_type ${data.user_type}`);\n    }\n    let AssetModel;\n    let assetId;\n    switch (data.asset_type) {\n    case \"VEHICLE\": AssetModel = Vehicle; assetId = \"vehicle_id\"; break;\n    case \"INVENTORY\": AssetModel = Asset; assetId = \"asset_id\"; break;\n    default: return fail(res, 422, `Error invalid asset_type ${data.asset_type}`);\n    }\n    try {\n        const newRecord = new AssetAssignment(data);\n        const result = await newRecord.save();\n        if (!result) {\n            logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n\n        const updateVehicle = { vehicle_custodian: data.user_type };\n        updateVehicle[ `current_${userId}` ] = result[ userId ];\n        updateVehicle.vehicle_assignment = \"ASSIGNED\";\n        const updateUser = { $push: { asset_assigment_ids: result._id } };\n        if (result.asset_type === \"VEHICLE\") {\n            await Vehicle.update({ _id: result[ assetId ] }, updateVehicle).exec();\n            updateUser.vehicle_id = result[ assetId ];\n        }\n\n        await UserModel.update({ _id: result[ userId ] }, updateUser).exec();\n        return success(res, 201, result, \"Record created successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error creating record. ${err.message}`);\n    }\n}\n\n/*\n    vehicle_custodian: {\n        type: String,\n        enum: Object.values(VEHICLE_CUSTODIAN),\n        default: VEHICLE_CUSTODIAN.UNKNOWN,\n        required: [true, \"Why no vehicle_custodian?\"],\n    },\n    current_staff_id: { type: ObjectId, ref: \"Staff\" },\n    current_partner_id: { type: ObjectId, ref: \"Partner\" },\n*/\n// eslint-disable-next-line complexity\nexport async function updateRecord(req, res) {\n    const data = req.body;\n    const { recordId: id } = req.params;\n    const { error } = Joi.validate(data, schemaUpdate);\n    if (data.assignment_status === \"ISSUED\") {\n        data.issued_date = data.issued_date ? data.issued_date : timestamp();\n        data.issued_by = data.updated_by;\n    }\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\n    try {\n        const result = await AssetAssignment\n            .findOneAndUpdate({ _id: id }, data, { new: true });\n        if (!result) {\n            return notFound(res, `Bad Request: Model not found with id ${id}`);\n        }\n        return success(res, 200, result, \"Record updated successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error updating record. ${err.message}`);\n    }\n}\n\n// eslint-disable-next-line complexity\nexport async function deleteRecord(req, res) {\n    const { recordId: id } = req.params;\n    try {\n        const result = await AssetAssignment.findOneAndRemove({ _id: id });\n        if (!result) {\n            return notFound(res, `Bad Request: Model not found with id ${id}`);\n        }\n        let UserModel;\n        let userId;\n        switch (result.user_type) {\n        case \"PARTNER\": UserModel = Partner; userId = \"partner_id\"; break;\n        case \"STAFF\": UserModel = Staff; userId = \"staff_id\"; break;\n        default: return fail(res, 422, `Error invalid user_type ${result.user_type}`);\n        }\n        let AssetModel;\n        let assetId;\n        switch (result.asset_type) {\n        case \"VEHICLE\": AssetModel = Vehicle; assetId = \"vehicle_id\"; break;\n        case \"INVENTORY\": AssetModel = Asset; assetId = \"asset_id\"; break;\n        default: return fail(res, 422, `Error invalid asset_type ${result.asset_type}`);\n        }\n        const updateUser = { $pull: { asset_assigment_ids: result._id } };\n        if (result.asset_type === \"VEHICLE\") {\n            updateUser.vehicle_id = null;\n        }\n        const result2 = await UserModel.update({ _id: result[ userId ] }, updateUser).exec();\n\n        const updateVehicle = {};\n        updateVehicle[ `current_${userId}` ] = null;\n        updateVehicle.vehicle_assignment = \"UNASSIGNED\";\n        await Vehicle.update({ _id: result[ assetId ] }, updateVehicle).exec();\n\n        return success(res, 200, result2, \"Record deleted successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error deleting record. ${err.message}`);\n    }\n}\n"]}