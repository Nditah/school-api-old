{"version":3,"sources":["../../../../src/api/general/asset-assignment/routes.js"],"names":["router","express","Router","get","checkAuth","fetchRecord","post","isValidStaff","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAF,OAAOG,GAAP,CAAW,oBAAX,EAAiC,CAACC,wBAAD,CAAjC,EAA8CC,uBAA9C;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BAL,OAAOM,IAAP,CAAY,oBAAZ,EAAkC,CAACF,wBAAD,EAAYG,2BAAZ,CAAlC,EAA6DC,wBAA7D;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCAR,OAAOS,GAAP,CAAW,8BAAX,EAA2C,CAACL,wBAAD,EAAYG,2BAAZ,CAA3C,EAAsEG,wBAAtE;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,8BAAd,EAA8C,CAACP,wBAAD,EAAYG,2BAAZ,CAA9C,EAAyEK,wBAAzE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/asset-assignments?id={recordId} Retrieve one or all records\n * @apiName RetrieveAssetAssignment\n * @apiGroup AssetAssignment\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/asset-assignments?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/asset-assignments\", [checkAuth], fetchRecord);\n\n/**\n * @api {post} /api/v1/asset-assignments Create asset-assignments\n * @apiName CreateAssetAssignment\n * @apiGroup AssetAssignment\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} user_type AssetAssignment user_type \"STAFF|PARTNER\" (required)\n * @apiParam {String} staff_id AssetAssignment staff_id (optional)\n * @apiParam {String} partner_id AssetAssignment partner_id (optional)\n * @apiParam {Date} request_date AssetAssignment request_date (optional)\n * @apiParam {String} task_id AssetAssignment task_id (optional)\n * @apiParam {String} asset_type AssetAssignment asset_type \"VEHICLE|INVENTORY\" (required)\n * @apiParam {String} vehicle_id AssetAssignment vehicle_id (optional)\n * @apiParam {String} asset_id AssetAssignment asset_id (optional)\n * @apiParam {Date} issued_date AssetAssignment issued_date (optional)\n * @apiParam {String} issued_by AssetAssignment issued_by (optional)\n * @apiParam {String} issuer_remark AssetAssignment issuer_remark (optional)\n * @apiParam {String} request_status AssetAssignment request_status\n * \"PENDING|COLLECTED|REVOKED\" (optional)\n * @apiParam {String} assignment_status AssetAssignment assignment_status\n *  \"PENDING|APPROVED|ISSUED|COLLECTED|REJECTED\" (optional)\n * @apiParam {Boolean} is_returnable AssetAssignment is_returnable (optional)\n * @apiParam {Date} expected_returned_date AssetAssignment expected_returned_date (optional)\n * @apiParam {Date} actual_returned_date AssetAssignment actual_returned_date (optional)\n * @apiParam {Date} collected_date AssetAssignment collected_date (optional)\n * @apiParam {String} collected_by AssetAssignment collected_by (optional)\n * @apiParam {String} collected_remark AssetAssignment collected_remark (optional)\n * @apiSuccess {Object} AssetAssignment AssetAssignment's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 AssetAssignment not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/asset-assignments\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/asset-assignments/{recordId} Update asset-assignments\n * @apiName UpdateAssetAssignment\n * @apiGroup AssetAssignment\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {String} user_type AssetAssignment user_type \"STAFF|PARTNER\" (required)\n * @apiParam {String} staff_id AssetAssignment staff_id (optional)\n * @apiParam {String} partner_id AssetAssignment partner_id (optional)\n * @apiParam {Date} request_date AssetAssignment request_date (optional)\n * @apiParam {String} task_id AssetAssignment task_id (optional)\n * @apiParam {String} asset_type AssetAssignment asset_type \"VEHICLE|INVENTORY\" (required)\n * @apiParam {String} vehicle_id AssetAssignment vehicle_id (optional)\n * @apiParam {String} asset_id AssetAssignment asset_id (optional)\n * @apiParam {Date} issued_date AssetAssignment issued_date (optional)\n * @apiParam {String} issued_by AssetAssignment issued_by (optional)\n * @apiParam {String} issuer_remark AssetAssignment issuer_remark (optional)\n * @apiParam {String} request_status AssetAssignment request_status\n *  \"PENDING|COLLECTED|REVOKED\" (optional)\n * @apiParam {String} assignment_status AssetAssignment assignment_status\n *  \"PENDING|APPROVED|ISSUED|COLLECTED|REJECTED\" (optional)\n * @apiParam {Boolean} is_returnable AssetAssignment is_returnable (optional)\n * @apiParam {Date} expected_returned_date AssetAssignment expected_returned_date (optional)\n * @apiParam {Date} actual_returned_date AssetAssignment actual_returned_date (optional)\n * @apiParam {Date} collected_date AssetAssignment collected_date (optional)\n * @apiParam {String} collected_by AssetAssignment collected_by (optional)\n * @apiParam {String} collected_remark AssetAssignment collected_remark (optional)\n * @apiSuccess {Object} AssetAssignment AssetAssignment's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 AssetAssignment not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/asset-assignments/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/asset-assignments/{recordId} Delete asset-assignments\n * @apiName DeleteAssetAssignment\n * @apiGroup AssetAssignment\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 AssetAssignment not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/asset-assignments/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}