{"version":3,"sources":["../../../../src/api/general/blog-comment/controller.js"],"names":["Joi","log4js","aqp","BlogComment","schemaCreate","schemaUpdate","success","fail","notFound","isObjecId","STATUS_MSG","Blog","logger","getLogger","configure","appenders","file","type","filename","categories","default","level","fetchRecord","req","res","query","filter","skip","limit","sort","projection","result","find","populate","select","exec","info","SUCCESS","DEFAULT","err","error","message","createRecord","data","body","validate","newRecord","save","ERROR","result2","update","_id","blob_id","$push","comment_ids","updateRecord","recordId","id","params","findOneAndUpdate","new","deleteRecord","findOneAndRemove","$pull"],"mappings":"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","file":"controller.js","sourcesContent":["import Joi from \"joi\";\nimport log4js from \"log4js\";\nimport aqp from \"api-query-params\";\nimport BlogComment, { schemaCreate, schemaUpdate } from \"./model\";\nimport { success, fail, notFound, isObjecId } from \"../../../lib\";\nimport { STATUS_MSG } from \"../../../constants\";\nimport Blog from \"../blog/model\";\n\n// Logging\nconst logger = log4js.getLogger(\"[blog_comment]\");\nlog4js.configure({\n    appenders: { file: { type: \"file\", filename: \"logs/blog_comment.log\" } },\n    categories: { default: { appenders: [\"file\"], level: \"debug\" } },\n});\n\nexport async function fetchRecord(req, res) {\n    const { query } = req;\n    const { filter, skip, limit, sort, projection } = aqp(query);\n    try {\n        const result = await BlogComment.find(filter)\n            .populate(\"blog_id\")\n            .populate(\"related_comment_id\")\n            .populate(\"created_by\", \"id surname other_name email phone\")\n            .skip(skip)\n            .limit(limit)\n            .sort(sort)\n            .select(projection)\n            .exec();\n        if (!result) {\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n        logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n        return success(res, 201, result, null);\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error retrieving record. ${err.message}`);\n    }\n}\n\nexport async function createRecord(req, res) {\n    const data = req.body;\n    const { error } = Joi.validate(data, schemaCreate);\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\n    try {\n        const newRecord = new BlogComment(data);\n        const result = await newRecord.save();\n        if (!result) {\n            logger.error(STATUS_MSG.ERROR.DEFAULT, []);\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n        const result2 = await Blog.update({ _id: result.blob_id },\n            { $push: { comment_ids: result._id } }).exec();\n        logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n        return success(res, 201, result2, \"Record created successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error creating record. ${err.message}`);\n    }\n}\n\nexport async function updateRecord(req, res) {\n    const data = req.body;\n    const { recordId: id } = req.params;\n    const { error } = Joi.validate(data, schemaUpdate);\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\n    try {\n        const result = await BlogComment.findOneAndUpdate({ _id: id }, data, { new: true });\n        if (!result) {\n            return notFound(res, `Bad Request: Model not found with id ${id}`);\n        }\n        return success(res, 200, result, \"Record updated successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error updating record. ${err.message}`);\n    }\n}\n\nexport async function deleteRecord(req, res) {\n    const { recordId: id } = req.params;\n    try {\n        const result = await BlogComment.findOneAndRemove({ _id: id });\n        if (!result) {\n            return notFound(res, `Bad Request: Model not found with id ${id}`);\n        }\n        const result2 = await Blog.update({ _id: result.blob_id },\n            { $pull: { comment_ids: result._id } }).exec();\n        logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n        return success(res, 200, result2, \"Record deleted successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error deleting record. ${err.message}`);\n    }\n}\n"]}