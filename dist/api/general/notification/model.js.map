{"version":3,"sources":["../../../../src/api/general/notification/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","user_type","Joi","string","valid","required","staff_id","optional","customer_id","parent_id","message","notification_status","created_by","schemaUpdate","updated_by","schema","type","String","enum","ref","student_id","default","options","DATABASE","OPTIONS","newSchema","set","Notification","model"],"mappings":";;;;;;;AAWA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;AAbA;;;;;;;;;;;IAmBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,eAAWC,cAAIC,MAAJ,GAAaC,KAAb,CAAmB,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,CAAnB,EAAmDC,QAAnD,EADa;AAExBC,cAAUJ,cAAIC,MAAJ,GAAaI,QAAb,EAFc;AAGxBC,iBAAaN,cAAIC,MAAJ,GAAaI,QAAb,EAHW;AAIxBE,eAAWP,cAAIC,MAAJ,GAAaI,QAAb,EAJa;AAKxBG,aAASR,cAAIC,MAAJ,GAAaI,QAAb,EALe;AAMxBI,yBAAqBT,cAAIC,MAAJ,GAAaC,KAAb,CAAmB,SAAnB,EAA8B,QAA9B,EAAwCG,QAAxC,EANG;AAOxBK,gBAAYV,cAAIC,MAAJ,GAAaE,QAAb;AAPY,CAArB;;AAUA,IAAMQ,sCAAe;AACxBZ,eAAWC,cAAIC,MAAJ,GAAaC,KAAb,CAAmB,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,CAAnB,EAAoDG,QAApD,EADa;AAExBD,cAAUJ,cAAIC,MAAJ,GAAaI,QAAb,EAFc;AAGxBC,iBAAaN,cAAIC,MAAJ,GAAaI,QAAb,EAHW;AAIxBE,eAAWP,cAAIC,MAAJ,GAAaI,QAAb,EAJa;AAKxBG,aAASR,cAAIC,MAAJ,GAAaI,QAAb,EALe;AAMxBI,yBAAqBT,cAAIC,MAAJ,GAAaC,KAAb,CAAmB,SAAnB,EAA8B,QAA9B,EAAwCG,QAAxC,EANG;AAOxBO,gBAAYZ,cAAIC,MAAJ,GAAaE,QAAb;AAPY,CAArB;;AAUA,IAAMU,0BAAS;AAClBd,eAAW,EAAEe,MAAMC,MAAR,EAAgBC,MAAM,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,CAAtB,EAAsDb,UAAU,IAAhE,EADO;AAElBC,cAAU,EAAEU,MAAMlB,QAAR,EAAkBqB,KAAK,OAAvB,EAFQ;AAGlBC,gBAAY,EAAEJ,MAAMlB,QAAR,EAAkBqB,KAAK,SAAvB,EAHM;AAIlBV,eAAW,EAAEO,MAAMlB,QAAR,EAAkBqB,KAAK,QAAvB,EAJO;AAKlBT,aAAS,EAAEM,MAAMC,MAAR,EALS;AAMlBN,yBAAqB,EAAEK,MAAMC,MAAR,EAAgBC,MAAM,CAAC,SAAD,EAAY,QAAZ,CAAtB,EAA6CG,SAAS,SAAtD,EANH;AAOlBT,gBAAY,EAAEI,MAAMlB,QAAR,EAAkBqB,KAAK,OAAvB,EAAgCd,UAAU,IAA1C,EAPM;AAQlBS,gBAAY,EAAEE,MAAMlB,QAAR,EAAkBqB,KAAK,OAAvB;AARM,CAAf;;AAWP,IAAMG,UAAUC,oBAASC,OAAzB;;AAEA,IAAMC,YAAY,IAAI7B,MAAJ,CAAWmB,MAAX,EAAmBO,OAAnB,CAAlB;AACAG,UAAUC,GAAV,CAAc,YAAd,EAA4B,cAA5B;;AAEA,IAAMC,eAAe9B,mBAAS+B,KAAT,CAAe,cAAf,EAA+BH,SAA/B,CAArB;;kBAEeE,Y","file":"model.js","sourcesContent":["/**\r\n * @author 4Dcoder\r\n * @property {ObjectId} id Notification primaryKey\r\n * @property {String} user_type Notification user type \"STAFF|PARENT|STUDENT\"\r\n * @property {ObjectId} staff_id Notification staff ObjectId\r\n * @property {ObjectId} student_id Notification student ObjectId\r\n * @property {ObjectId} parent_id Notification parent ObjectId\r\n * @property {String} message Notification message\r\n * @property {String} notification_status Notification record status \"PENDING|CLOSED\"\r\n * @description Notification model holds record of all Notification\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport Staff from \"../staff/model\";\r\nimport Student from \"../student/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    user_type: Joi.string().valid([\"STAFF\", \"PARENT\", \"STUDENT\"]).required(),\r\n    staff_id: Joi.string().optional(),\r\n    customer_id: Joi.string().optional(),\r\n    parent_id: Joi.string().optional(),\r\n    message: Joi.string().optional(),\r\n    notification_status: Joi.string().valid(\"PENDING\", \"CLOSED\").optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    user_type: Joi.string().valid([\"STAFF\", \"PARENT\", \"CUSTOMER\"]).optional(),\r\n    staff_id: Joi.string().optional(),\r\n    customer_id: Joi.string().optional(),\r\n    parent_id: Joi.string().optional(),\r\n    message: Joi.string().optional(),\r\n    notification_status: Joi.string().valid(\"PENDING\", \"CLOSED\").optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    user_type: { type: String, enum: [\"STAFF\", \"PARENT\", \"STUDENT\"], required: true },\r\n    staff_id: { type: ObjectId, ref: \"Staff\" },\r\n    student_id: { type: ObjectId, ref: \"Student\" },\r\n    parent_id: { type: ObjectId, ref: \"Parent\" },\r\n    message: { type: String },\r\n    notification_status: { type: String, enum: [\"PENDING\", \"CLOSED\"], default: \"PENDING\" },\r\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"notification\");\r\n\r\nconst Notification = mongoose.model(\"Notification\", newSchema);\r\n\r\nexport default Notification;\r\n"]}