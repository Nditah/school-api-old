{"version":3,"sources":["../../../../src/api/general/attendance/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAIA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAVA;;;;AAyBAF,OAAOG,GAAP,CAAW,cAAX,EAA2B,CAACC,wBAAD,EAAYC,2BAAZ,CAA3B,EAAsDC,uBAAtD;;AAEA;;;;;;;;;;;;;;;;;;;AAmBAN,OAAOO,IAAP,CAAY,cAAZ,EAA4B,CAACH,wBAAD,EAAYC,2BAAZ,CAA5B,EAAuDG,wBAAvD;;AAEA;;;;;;;;;;;;;;;;;;;AAmBAR,OAAOS,GAAP,CAAW,wBAAX,EAAqC,CAACL,wBAAD,EAAYC,2BAAZ,CAArC,EAAgEK,wBAAhE;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,wBAAd,EAAwC,CAACP,wBAAD,EAAYC,2BAAZ,CAAxC,EAAmEO,wBAAnE;;kBAEeZ,M","file":"routes.js","sourcesContent":["/**\n * @author 4Decoder\n * @description Attendance holds record of all attendances involving company vehicles\n */\nimport express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/attendances?id={recordId} Retrieve one or all records\n * @apiName RetrieveAttendance\n * @apiGroup Attendance\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/attendances?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/attendances\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/v1/attendances Create attendances\n * @apiName CreateAttendance\n * @apiGroup Attendance\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {Number} staff_id Attendance staff_id\n * @apiParam {Number} paid_by Attendance paid_by\n * @apiParam {Date} paid_date Attendance paid_date\n * @apiParam {String} pay_status Attendance pay_status\n * @apiParam {String} subsidiary Attendance subsidiary\n * @apiParam {Number} terminal_id Attendance terminal_id\n * @apiParam {Date} arrival_time Attendance arrival_time\n * @apiParam {Date} departure_time Attendance departure_time\n * @apiSuccess {Object} Attendance Attendance's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Attendance not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/attendances\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/attendances/{recordId} Update attendances\n * @apiName UpdateAttendance\n * @apiGroup Attendance\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {Number} staff_id Attendance staff_id\n * @apiParam {Number} paid_by Attendance paid_by\n * @apiParam {Date} paid_date Attendance paid_date\n * @apiParam {String} pay_status Attendance pay_status\n * @apiParam {String} subsidiary Attendance subsidiary\n * @apiParam {Number} terminal_id Attendance terminal_id\n * @apiParam {Date} arrival_time Attendance arrival_time\n * @apiParam {Date} departure_time Attendance departure_time\n * @apiSuccess {Object} Attendance Attendance's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Attendance not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/attendances/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/attendances/{recordId} Delete attendances\n * @apiName DeleteAttendance\n * @apiGroup Attendance\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Attendance not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/attendances/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}