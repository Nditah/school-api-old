{"version":3,"sources":["../../../../src/api/general/attendance/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","staff_id","Joi","string","optional","student_id","attendance_status","trim","valid","subsidiary","Object","values","SUBSIDIARY","classe_id","arrival_time","date","required","departure_time","created_by","schemaUpdate","updated_by","schema","type","ref","String","enum","default","Date","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","Attendance","model","insertMany","table"],"mappings":"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","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {ObjectId} id Attendance primaryKey\n * @property {ObjectId} staff_id Attendance staff_id\n * @property {ObjectId} student_id Attendance student_id\n * @property {String} attendance_status Attendance pay_status \"SUSPENDED\", \"EARLY\", \"LATE\"\n * @property {String} subsidiary Attendance subsidiary\n * @property {ObjectId} classe_id Attendance classe_id\n * @property {Date} arrival_time Attendance arrival_time\n * @property {Date} departure_time Attendance departure_time\n * @description Attendance model holds record of staff time log\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE, SUBSIDIARY } from \"../../../constants\";\nimport table from \"./table\";\nimport Staff from \"../staff/model\";\nimport Student from \"../student/model\";\nimport Classe from \"../classe/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    staff_id: Joi.string().optional(),\n    student_id: Joi.string().optional(),\n    attendance_status: Joi.string().trim().valid([\"SUSPENDED\", \"EARLY\", \"LATE\"]).optional(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\n    classe_id: Joi.string().optional(),\n    arrival_time: Joi.date().required(),\n    departure_time: Joi.date().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    staff_id: Joi.string().optional(),\n    student_id: Joi.string().optional(),\n    attendance_status: Joi.string().trim().valid([\"SUSPENDED\", \"EARLY\", \"LATE\"]).optional(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\n    classe_id: Joi.string().optional(),\n    arrival_time: Joi.date().optional(),\n    departure_time: Joi.date().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    staff_id: { type: ObjectId, ref: \"Staff\", required: false },\n    student_id: { type: ObjectId, ref: \"Student\", required: false  },\n    attendance_status: {\n        type: String,\n        enum: [\"SUSPENDED\", \"EARLY\", \"LATE\"],\n        default: \"EARLY\",\n        required: true,\n    },\n    subsidiary: {\n        type: String,\n        enum: Object.values(SUBSIDIARY),\n        required: [true, \"Why no subsidiary?\"],\n    },\n    classe_id: { type: ObjectId, ref: \"Classe\" },\n    arrival_time: { type: Date },\n    departure_time: { type: Date },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"attendance\");\n\nconst Attendance = mongoose.model(\"Attendance\", newSchema);\n\nif (preload) { Attendance.insertMany(table); }\n\nexport default Attendance;\n"]}