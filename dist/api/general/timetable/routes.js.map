{"version":3,"sources":["../../../../src/api/general/timetable/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,aAAX,EAA0B,CAACC,wBAAD,EAAYC,2BAAZ,CAA1B,EAAqDC,uBAArD;;AAEA;;;;;;;;;;;;;;;;;AAiBAN,OAAOO,IAAP,CAAY,aAAZ,EAA2B,CAACH,wBAAD,EAAYC,2BAAZ,CAA3B,EAAsDG,wBAAtD;;AAEA;;;;;;;;;;;;;;;;;AAiBAR,OAAOS,GAAP,CAAW,uBAAX,EAAoC,CAACL,wBAAD,EAAYC,2BAAZ,CAApC,EAA+DK,wBAA/D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,uBAAd,EAAuC,CAACP,wBAAD,EAAYC,2BAAZ,CAAvC,EAAkEO,wBAAlE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/timetables?id={recordId} Retrieve one or all records\r\n * @apiName RetrieveStore\r\n * @apiGroup Store\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i https://mis-api.herokuapp.com/api/v1/timetables?id=2&fields=id,created_at,updated_at\r\n * @apiExample {curl} Example usage for retieving multiple records:\r\n *      curl -i https://mis-api.herokuapp.com/api/v1/timetables?offset=10&limit=50\r\n * @apiParam {Number} id Unique id of the record to retrieve (optional)\r\n * @apiParam {Number} offset Number of records to skip (optional)\r\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\r\n * @apiParam {String} fields Comma-separated list of record's attributes to retrieve (optional)\r\n * @apiDescription Records  of account headings belonging to one classification\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/timetables\", [checkAuth, isValidStaff], fetchRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/timetables Create timetables\r\n * @apiName CreateTimetables\r\n * @apiGroup Timetables\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiParam {String} name Timetable name\r\n * @apiParam {String} description Timetable description\r\n * @apiParam {ObjectId} classe School Classes\r\n * @apiParam {ObjectId} subject_id Subject ObjectId\r\n * @apiParam {Array} teacher_id Timetable teacher_id\r\n * @apiParam {Number} duration Duration of subject\r\n * @apiSuccess {Object} Timetable Timetable's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Timetable not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/timetables\", [checkAuth, isValidStaff], createRecord);\r\n\r\n/**\r\n * @api {put} /api/v1/timetables/{recordId} Update timetables\r\n * @apiName UpdateTimetable\r\n * @apiGroup Timetable\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiParam {String} name Timetable name\r\n * @apiParam {String} description Timetable description\r\n * @apiParam {ObjectId} classe School Classes\r\n * @apiParam {ObjectId} subject_id Subject ObjectId\r\n * @apiParam {Array} teacher_id Timetable teacher_id\r\n * @apiParam {Number} duration Duration of subject\r\n * @apiSuccess {Object} Timetable Timetable's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Timetable not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.put(\"/timetables/:recordId\", [checkAuth, isValidStaff], updateRecord);\r\n\r\n/**\r\n * @api {delete} /api/v1/timetables/{recordId} Delete timetables\r\n * @apiName DeleteTimetable\r\n * @apiGroup Timetable\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiSuccess (Success 204) 204 No Content.\r\n * @apiError 404 Timetable not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.delete(\"/timetables/:recordId\", [checkAuth, isValidStaff], deleteRecord);\r\n\r\nexport default router;\r\n"]}