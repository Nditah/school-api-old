{"version":3,"sources":["../../../../src/api/general/timetable/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,aAAX,EAA0B,CAACC,wBAAD,EAAYC,2BAAZ,CAA1B,EAAqDC,uBAArD;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBAN,OAAOO,IAAP,CAAY,aAAZ,EAA2B,CAACH,wBAAD,EAAYC,2BAAZ,CAA3B,EAAsDG,wBAAtD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBAR,OAAOS,GAAP,CAAW,uBAAX,EAAoC,CAACL,wBAAD,EAAYC,2BAAZ,CAApC,EAA+DK,wBAA/D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,uBAAd,EAAuC,CAACP,wBAAD,EAAYC,2BAAZ,CAAvC,EAAkEO,wBAAlE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/timetables?id={recordId} Retrieve one or all records\n * @apiName RetrieveStore\n * @apiGroup Store\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i https://mis-api.herokuapp.com/api/v1/timetables?id=2&fields=id,created_at,updated_at\n * @apiExample {curl} Example usage for retieving multiple records:\n *      curl -i https://mis-api.herokuapp.com/api/v1/timetables?offset=10&limit=50\n * @apiParam {Number} id Unique id of the record to retrieve (optional)\n * @apiParam {Number} offset Number of records to skip (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} fields Comma-separated list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/timetables\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/v1/timetables Create timetables\n * @apiName CreateTimetables\n * @apiGroup Timetables\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} type Timetable type \"REGULAR|ASSESSMENT\"\n * @apiParam {String} activity Timetable activity\n *  \"LESSON\", \"BREAK\", \"CLOSED\", \"PREP\", \"FREE\", \"LIBRARY\"\n* @apiParam {String} day Timetable day\n * @apiParam {String} from Timetable from\n * @apiParam {String} to Timetable to\n * @apiParam {Number} duration Timetable duration in Minutes\n * @apiParam {ObjectId} classe Timetable classe\n * @apiParam {ObjectId} course Timetable course\n * @apiParam {ObjectId} classroom Timetable classroom\n * @apiParam {String} subsidiary Timetable subsidiary\n * @apiParam {String} description Timetable description\n * @apiSuccess {Object} Timetable Timetable's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Timetable not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/timetables\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/timetables/{recordId} Update timetables\n * @apiName UpdateTimetable\n * @apiGroup Timetable\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {String} type Timetable type \"REGULAR|ASSESSMENT\"\n * @apiParam {String} activity Timetable activity\n *  \"LESSON\", \"BREAK\", \"CLOSED\", \"PREP\", \"FREE\", \"LIBRARY\"\n* @apiParam {String} day Timetable day\n * @apiParam {String} from Timetable from\n * @apiParam {String} to Timetable to\n * @apiParam {Number} duration Timetable duration in Minutes\n * @apiParam {ObjectId} classe Timetable classe\n * @apiParam {ObjectId} course Timetable course\n * @apiParam {ObjectId} classroom Timetable classroom\n * @apiParam {String} subsidiary Timetable subsidiary\n * @apiParam {String} description Timetable description\n * @apiSuccess {Object} Timetable Timetable's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Timetable not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/timetables/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/timetables/{recordId} Delete timetables\n * @apiName DeleteTimetable\n * @apiGroup Timetable\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Timetable not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/timetables/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}