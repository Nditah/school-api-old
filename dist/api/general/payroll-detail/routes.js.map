{"version":3,"sources":["../../../../src/api/general/payroll-detail/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,kBAAX,EAA+B,CAACC,wBAAD,EAAYC,2BAAZ,CAA/B,EAA0DC,uBAA1D;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBAN,OAAOO,IAAP,CAAY,kBAAZ,EAAgC,CAACH,wBAAD,EAAYC,2BAAZ,CAAhC,EAA2DG,wBAA3D;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBAR,OAAOS,GAAP,CAAW,4BAAX,EAAyC,CAACL,wBAAD,EAAYC,2BAAZ,CAAzC,EAAoEK,wBAApE;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,4BAAd,EAA4C,CAACP,wBAAD,EAAYC,2BAAZ,CAA5C,EAAuEO,wBAAvE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/payroll-details?id={recordId} Retrieve PayrollDetail records\n * @apiName RetrievePayrollDetail\n * @apiGroup PayrollDetail\n * @apiHeader {String} Authorization Bearer token\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/payroll-detail?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of payroll details for each Staff\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/payroll-details\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/v1/payroll-details Create a PayrollDetail record\n * @apiName CreatePayrollDetail\n * @apiGroup PayrollDetail\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} payroll_id PayrollDetail payroll ObjectId\n * @apiParam {String} code PayrollDetail code\n * @apiParam {ObjectId} staff_id PayrollDetail staff_id\n * @apiParam {Number} salary PayrollDetail salary\n * @apiParam {Boolean} is_paid PayrollDetail is_paid\n * @apiParam {Date} paid_date PayrollDetail paid_date\n * @apiParam {ObjectId} paid_by PayrollDetail paid_by\n * @apiParam {String} remark PayrollDetail remark\n * @apiParam {String} payment_method PayrollDetail payment method GATEWAY (required)\n * @apiParam {String} payment_gateway PayrollDetail payment gateway UNIONBANK (required)\n * @apiParam {String} payment_status PayrollDetail transaction status (prohibited)\n * @apiSuccess {Object} PayrollDetail PayrollDetail's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 PayrollDetail not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/payroll-details\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/payroll-details/{recordId} Update a PayrollDetail record\n * @apiName UpdatePayrollDetail\n * @apiGroup PayrollDetail\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {ObjectId} payroll_id PayrollDetail payroll ObjectId\n * @apiParam {String} code PayrollDetail code\n * @apiParam {ObjectId} staff_id PayrollDetail staff_id\n * @apiParam {Number} salary PayrollDetail salary\n * @apiParam {Boolean} is_paid PayrollDetail is_paid\n * @apiParam {Date} paid_date PayrollDetail paid_date\n * @apiParam {ObjectId} paid_by PayrollDetail paid_by\n * @apiParam {String} remark PayrollDetail remark\n * @apiParam {String} payment_method PayrollDetail payment method GATEWAY (required)\n * @apiParam {String} payment_gateway PayrollDetail payment gateway UNIONBANK (required)\n * @apiParam {String} payment_status PayrollDetail transaction status (prohibited)\n * @apiSuccess {Object} PayrollDetail PayrollDetail's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 PayrollDetail not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/payroll-details/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/payroll-details/{recordId} Delete a PayrollDetail record\n * @apiName DeletePayrollDetail\n * @apiGroup PayrollDetail\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 PayrollDetail not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/payroll-details/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}