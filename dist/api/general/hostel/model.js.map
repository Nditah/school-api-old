{"version":3,"sources":["../../../../src/api/general/hostel/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","block","Joi","string","optional","classe_id","room_no","number","no_of_beds","fee_id","description","status","created_by","required","schemaUpdate","updated_by","schema","type","String","unique","classe","ref","Number","fee","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","Hostel","model","insertMany","table"],"mappings":";;;;;;;AAYA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AANA;AAdA;AACA;;;;;;;;;;;IAqBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EADiB;AAExBC,eAAWH,cAAIC,MAAJ,GAAaC,QAAb,EAFa;AAGxBE,aAASJ,cAAIK,MAAJ,GAAaH,QAAb,EAHe;AAIxBI,gBAAYN,cAAIK,MAAJ,GAAaH,QAAb,EAJY;AAKxBK,YAASP,cAAIC,MAAJ,GAAaC,QAAb,EALe;AAMxBM,iBAAaR,cAAIC,MAAJ,GAAaC,QAAb,EANW;AAOxBO,YAAQT,cAAIC,MAAJ,GAAaC,QAAb,EAPgB;AAQxBQ,gBAAYV,cAAIC,MAAJ,GAAaU,QAAb;AARY,CAArB;;AAWA,IAAMC,sCAAe;AACxBb,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EADiB;AAExBC,eAAWH,cAAIC,MAAJ,GAAaC,QAAb,EAFa;AAGxBE,aAASJ,cAAIK,MAAJ,GAAaH,QAAb,EAHe;AAIxBI,gBAAYN,cAAIK,MAAJ,GAAaH,QAAb,EAJY;AAKxBK,YAASP,cAAIC,MAAJ,GAAaC,QAAb,EALe;AAMxBM,iBAAaR,cAAIC,MAAJ,GAAaC,QAAb,EANW;AAOxBO,YAAQT,cAAIC,MAAJ,GAAaC,QAAb,EAPgB;AAQxBW,gBAAYb,cAAIC,MAAJ,GAAaU,QAAb;AARY,CAArB;;AAWA,IAAMG,0BAAS;AAClBf,WAAO,EAAEgB,MAAMC,MAAR,EAAgBL,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAAmDM,QAAQ,IAA3D,EADW;AAElBC,YAAQ,EAAEH,MAAMnB,QAAR,EAAiBuB,KAAK,QAAtB,EAFU;AAGlBf,aAAS,EAAEW,MAAMK,MAAR,EAHS;AAIlBd,gBAAY,EAAES,MAAMK,MAAR,EAJM;AAKlBC,SAAM,EAAEN,MAAMnB,QAAR,EAAkBuB,KAAK,KAAvB,EALY;AAMlBX,iBAAa,EAAEO,MAAMC,MAAR,EANK;AAOlBP,YAAQ,EAAEM,MAAMC,MAAR,EAPU;AAQlBN,gBAAY,EAAEK,MAAMnB,QAAR,EAAkBe,UAAU,IAA5B,EAAkCQ,KAAK,OAAvC,EARM;AASlBN,gBAAY,EAAEE,MAAMnB,QAAR,EAAkBuB,KAAK,OAAvB;AATM,CAAf;;AAYP,IAAMG,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAIlC,MAAJ,CAAWoB,MAAX,EAAmBY,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,QAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,SAASrC,mBAASsC,KAAT,CAAe,QAAf,EAAyBL,SAAzB,CAAf;AACA,IAAIN,OAAJ,EAAa;AAAEU,WAAOE,UAAP,CAAkBC,eAAlB;AAA2B;;kBAE3BH,M","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Dcoder\n * @property {Number} id hostel primaryKey\n * @property {String} block Hostel block name (required)\n * @property {Number} room_no Hostel room_no (required)\n * @property {Number} no_of_beds Hostel no_of_beds (required)\n * @property {String} fee_id Hostel fee_id (optional)\n * @property {String} description Hostel description (optional)\n * @property {String} status Hostel Status (Occupied or not Occupied)(optional)\n * @description Hostel model holds record of all hostels the company deals with\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport table from \"./table\";\nimport Staff from \"../staff/model\";\nimport Fee from \"../fee/model\";\nimport Classe from \"../classe/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    block: Joi.string().optional(),\n    classe_id: Joi.string().optional(),\n    room_no: Joi.number().optional(),\n    no_of_beds: Joi.number().optional(),\n    fee_id : Joi.string().optional(),\n    description: Joi.string().optional(),\n    status: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    block: Joi.string().optional(),\n    classe_id: Joi.string().optional(),\n    room_no: Joi.number().optional(),\n    no_of_beds: Joi.number().optional(),\n    fee_id : Joi.string().optional(),\n    description: Joi.string().optional(),\n    status: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    block: { type: String, required: [true, \"Why no input?\"], unique: true },\n    classe: { type: ObjectId,ref: \"Classe\" },\n    room_no: { type: Number },\n    no_of_beds: { type: Number },\n    fee : { type: ObjectId, ref: \"Fee\"},\n    description: { type: String },\n    status: { type: String },\n    created_by: { type: ObjectId, required: true, ref: \"Staff\" },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"hostel\");\nnewSchema.plugin(mongoose_csv);\n\nconst Hostel = mongoose.model(\"Hostel\", newSchema);\nif (preload) { Hostel.insertMany(table); }\n\nexport default Hostel;\n"]}