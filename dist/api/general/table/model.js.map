{"version":3,"sources":["../../../../src/api/general/table/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","label","Joi","string","optional","name","url","pullable","boolean","pushable","changes","description","created_by","required","schemaUpdate","updated_by","schema","type","String","Boolean","default","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","Table","model","insertMany","table"],"mappings":";;;;;;;AAeA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;AAjBA;AACA;;;;;;;;;;;;;;IAsBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EADiB;AAExBC,UAAMH,cAAIC,MAAJ,GAAaC,QAAb,EAFkB;AAGxBE,SAAKJ,cAAIC,MAAJ,GAAaC,QAAb,EAHmB;AAIxBG,cAAUL,cAAIM,OAAJ,GAAcJ,QAAd,EAJc;AAKxBK,cAAUP,cAAIM,OAAJ,GAAcJ,QAAd,EALc;AAMxBM,aAASR,cAAIM,OAAJ,GAAcJ,QAAd,EANe;AAOxBO,iBAAaT,cAAIC,MAAJ,GAAaC,QAAb,EAPW;AAQxBQ,gBAAYV,cAAIC,MAAJ,GAAaU,QAAb;AARY,CAArB;;AAWA,IAAMC,sCAAe;AACxBb,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EADiB;AAExBC,UAAMH,cAAIC,MAAJ,GAAaC,QAAb,EAFkB;AAGxBE,SAAKJ,cAAIC,MAAJ,GAAaC,QAAb,EAHmB;AAIxBG,cAAUL,cAAIM,OAAJ,GAAcJ,QAAd,EAJc;AAKxBK,cAAUP,cAAIM,OAAJ,GAAcJ,QAAd,EALc;AAMxBM,aAASR,cAAIM,OAAJ,GAAcJ,QAAd,EANe;AAOxBO,iBAAaT,cAAIC,MAAJ,GAAaC,QAAb,EAPW;AAQxBW,gBAAYb,cAAIC,MAAJ,GAAaU,QAAb;AARY,CAArB;;AAWA,IAAMG,0BAAS;AAClBf,WAAO,EAAEgB,MAAMC,MAAR,EADW;AAElBb,UAAM,EAAEY,MAAMC,MAAR,EAAgBL,UAAU,IAA1B,EAFY;AAGlBP,SAAK,EAAEW,MAAMC,MAAR,EAAgBL,UAAU,IAA1B,EAHa;AAIlBN,cAAU,EAAEU,MAAME,OAAR,EAAiBC,SAAS,KAA1B,EAJQ;AAKlBX,cAAU,EAAEQ,MAAME,OAAR,EAAiBC,SAAS,KAA1B,EALQ;AAMlBV,aAAS,EAAEO,MAAME,OAAR,EAAiBC,SAAS,KAA1B,EANS,EAM0B;AAC5CT,iBAAa,EAAEM,MAAMC,MAAR,EAPK;AAQlBN,gBAAY,EAAEK,MAAMnB,QAAR,EAAkBuB,KAAK,OAAvB,EAAgCR,UAAU,IAA1C,EARM;AASlBE,gBAAY,EAAEE,MAAMnB,QAAR;AATM,CAAf;;AAYP,IAAMwB,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAIhC,MAAJ,CAAWoB,MAAX,EAAmBU,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,OAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,QAAQnC,mBAASoC,KAAT,CAAe,OAAf,EAAwBL,SAAxB,CAAd;;AAEA,IAAIN,OAAJ,EAAa;AAAEU,UAAME,UAAN,CAAiBC,eAAjB;AAA0B;;kBAE1BH,K","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\r\n/**\r\n * @author 4Decoder\r\n * @property {ObjectId} id Table primaryKey\r\n * @property {String} label Table label or table title,\r\n * @property {String} name Table name i.e. db collection(required),\r\n * @property {String} url Table url segment /api/{url} (required),\r\n * @property {Boolean} pullable Table pullable i.e. collection can be downloaded\r\n * @property {Boolean} pushable Table pushable i.e. collection can be uploaded\r\n * @property {Boolean} changes Table changes if there are changes to be synchronized\r\n * @property {String} description Table description about operation status or feedback\r\n * @property {ObjectId} created_by Table record created by\r\n * @property {ObjectId} updated_by Table record modified by\r\n * @description Table holds record of all cities with table_list\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport table from \"./table\";\r\nimport Staff from \"../staff/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    label: Joi.string().optional(),\r\n    name: Joi.string().optional(),\r\n    url: Joi.string().optional(),\r\n    pullable: Joi.boolean().optional(),\r\n    pushable: Joi.boolean().optional(),\r\n    changes: Joi.boolean().optional(),\r\n    description: Joi.string().optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    label: Joi.string().optional(),\r\n    name: Joi.string().optional(),\r\n    url: Joi.string().optional(),\r\n    pullable: Joi.boolean().optional(),\r\n    pushable: Joi.boolean().optional(),\r\n    changes: Joi.boolean().optional(),\r\n    description: Joi.string().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    label: { type: String },\r\n    name: { type: String, required: true },\r\n    url: { type: String, required: true },\r\n    pullable: { type: Boolean, default: false },\r\n    pushable: { type: Boolean, default: false },\r\n    changes: { type: Boolean, default: false }, // Are there changes\r\n    description: { type: String },\r\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\r\n    updated_by: { type: ObjectId },\r\n};\r\n\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"table\");\r\nnewSchema.plugin(mongoose_csv);\r\n\r\nconst Table = mongoose.model(\"table\", newSchema);\r\n\r\nif (preload) { Table.insertMany(table); }\r\n\r\nexport default Table;\r\n"]}