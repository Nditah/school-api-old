{"version":3,"sources":["../../../../src/api/general/voucher/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","auditRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAF,OAAOG,GAAP,CAAW,WAAX,EAAwB,CAACC,wBAAD,EAAYC,2BAAZ,CAAxB,EAAmDC,uBAAnD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CAN,OAAOO,IAAP,CAAY,WAAZ,EAAyB,CAACH,wBAAD,EAAYC,2BAAZ,CAAzB,EAAoDG,wBAApD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CAR,OAAOS,GAAP,CAAW,qBAAX,EAAkC,CAACL,wBAAD,EAAYC,2BAAZ,CAAlC,EAA6DK,wBAA7D;;AAEA;;;;;;;;;;;;;;AAcAV,OAAOS,GAAP,CAAW,2BAAX,EAAwC,CAACL,wBAAD,EAAYC,2BAAZ,CAAxC,EAAmEM,uBAAnE;;AAEA;;;;;;;;;;AAUAX,OAAOY,MAAP,CAAc,qBAAd,EAAqC,CAACR,wBAAD,EAAYC,2BAAZ,CAArC,EAAgEQ,wBAAhE;;kBAEeb,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { fetchRecord, createRecord, updateRecord, auditRecord, deleteRecord } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/vouchers?id={recordId} Retrieve Voucher record(s)\r\n * @apiName RetrieveVoucher\r\n * @apiGroup Voucher\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i api/vouchers\r\n * @apiParam {Object} filter query condition (optional)\r\n * @apiParam {Number} skip Number of records to offset by (optional)\r\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\r\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\r\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\r\n * @apiDescription Records  of account headings belonging to one classification\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/vouchers\", [checkAuth, isValidStaff], fetchRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/vouchers Create vouchers\r\n * @apiName CreateVoucher\r\n * @apiGroup Voucher\r\n * @apiHeader {String} Authorization authorization token\r\n * @apiParam {String} transaction_code Voucher transaction_code\r\n * @apiParam {ObjectId} related_voucher_id Voucher related voucher ObjectId\r\n * @apiParam {ObjectId} stage_id Voucher voucher_stage ObjectId\r\n * @apiParam {ObjectId} account_heading_id Voucher AccountHeading ObjectId\r\n * @apiParam {ObjectId} terminal_id Voucher Terminal ObjectId\r\n * @apiParam {String} subsidiary Voucher Department\r\n * @apiParam {Number} amount Voucher Amount to be paid\r\n * @apiParam {String} description Voucher Transaction description\r\n * @apiParam {String} voucher_type Voucher \"PAYMENT|ADVANCE|RETIREMENT\" (required)\r\n * @apiParam {String} processing Voucher \"PENDING|COMPLETE|CANCEL\" (required)\r\n * @apiParam {String} beneficiary Voucher \"STAFF|PARTNER\" (required)\r\n * @apiParam {ObjectId} staff_id Voucher beneficiary staff ObjectId\r\n * @apiParam {ObjectId} partner_id Voucher beneficiary driver ObjectId\r\n * @apiParam {ObjectId} acknowledge_by Voucher beneficiary HoD staff ObjectId\r\n * @apiParam {Date} acknowledge_date Voucher acknowledgement date\r\n * @apiParam {String} endorsed_date Voucher endorsement date\r\n * @apiParam {ObjectId} endorsed_by Voucher endorsing staff ObjectId\r\n * @apiParam {Date} authorized_date Voucher authorizing date\r\n * @apiParam {ObjectId} authorized_by Voucher authorizing staff ObjectId\r\n * @apiParam {ObjectId} approved_by Voucher approval staff ObjectId\r\n * @apiParam {Date} approved_date Voucher approval date\r\n * @apiParam {ObjectId} paid_by Voucher payment staff ObjectId\r\n * @apiParam {Date} paid_date Voucher payment date\r\n * @apiParam {String} payment_method PayrollDetail payment method GATEWAY (required)\r\n * @apiParam {String} payment_gateway PayrollDetail payment gateway UNIONBANK (required)\r\n * @apiParam {String} payment_status PayrollDetail transaction status (prohibited)\r\n * @apiParam {String} received_by Voucher payment reciever signs with name\r\n * @apiParam {Date} received_date Voucher date of payment\r\n * @apiParam {ObjectId} checked_by Voucher finance officer\r\n * @apiParam {Date} checked_date Voucher finance dept check\r\n * @apiParam {ObjectId} audited_by Voucher auditor\r\n * @apiParam {Date} audited_date Voucher audit date\r\n * @apiSuccess {Object} Voucher Voucher's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Voucher not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/vouchers\", [checkAuth, isValidStaff], createRecord);\r\n\r\n/**\r\n * @api {put} /api/v1/vouchers/{recordId} Update vouchers\r\n * @apiName UpdateVoucher\r\n * @apiGroup Voucher\r\n * @apiHeader {String} Authorization authorization token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiParam {String} transaction_code Voucher transaction_code\r\n * @apiParam {ObjectId} related_voucher_id Voucher related voucher ObjectId\r\n * @apiParam {ObjectId} stage_id Voucher voucher_stage ObjectId\r\n * @apiParam {ObjectId} account_heading_id Voucher AccountHeading ObjectId\r\n * @apiParam {ObjectId} terminal_id Voucher Terminal ObjectId\r\n * @apiParam {String} subsidiary Voucher Department\r\n * @apiParam {Number} amount Voucher Amount to be paid\r\n * @apiParam {String} description Voucher Transaction description\r\n * @apiParam {String} voucher_type Voucher \"PAYMENT|ADVANCE|RETIREMENT\" (required)\r\n * @apiParam {String} processing Voucher \"PENDING|COMPLETE|CANCEL\" (required)\r\n * @apiParam {String} beneficiary Voucher \"STAFF|PARTNER\" (required)\r\n * @apiParam {ObjectId} staff_id Voucher beneficiary staff ObjectId\r\n * @apiParam {ObjectId} partner_id Voucher beneficiary driver ObjectId\r\n * @apiParam {ObjectId} acknowledge_by Voucher beneficiary HoD staff ObjectId\r\n * @apiParam {Date} acknowledge_date Voucher acknowledgement date\r\n * @apiParam {String} endorsed_date Voucher endorsement date\r\n * @apiParam {ObjectId} endorsed_by Voucher endorsing staff ObjectId\r\n * @apiParam {Date} authorized_date Voucher authorizing date\r\n * @apiParam {ObjectId} authorized_by Voucher authorizing staff ObjectId\r\n * @apiParam {ObjectId} approved_by Voucher approval staff ObjectId\r\n * @apiParam {Date} approved_date Voucher approval date\r\n * @apiParam {ObjectId} paid_by Voucher payment staff ObjectId\r\n * @apiParam {Date} paid_date Voucher payment date\r\n * @apiParam {String} payment_method PayrollDetail payment method GATEWAY (required)\r\n * @apiParam {String} payment_gateway PayrollDetail payment gateway UNIONBANK (required)\r\n * @apiParam {String} payment_status PayrollDetail transaction status (prohibited)\r\n * @apiParam {String} received_by Voucher payment reciever signs with name\r\n * @apiParam {Date} received_date Voucher date of payment\r\n * @apiParam {ObjectId} checked_by Voucher finance officer\r\n * @apiParam {Date} checked_date Voucher finance dept check\r\n * @apiParam {ObjectId} audited_by Voucher auditor\r\n * @apiParam {Date} audited_date Voucher audit date\r\n * @apiSuccess {Object} Voucher Voucher's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Voucher not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.put(\"/vouchers/:recordId\", [checkAuth, isValidStaff], updateRecord);\r\n\r\n/**\r\n * @api {put} /api/v1/vouchers/audit/{recordId} Audit vouchers\r\n * @apiName AuditVoucher\r\n * @apiGroup Voucher\r\n * @apiHeader {String} Authorization authorization token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiParam {Status} audited_status Voucher status has been updated\r\n * @apiParam {Status} audited_remark Voucher comment by Auditor\r\n * @apiParam {ObjectId} audited_by Voucher auditor (prohibited)\r\n * @apiParam {Date} audited_date Voucher audit date (prohibited)\r\n * @apiSuccess {Object} Voucher Voucher's data.\r\n * @apiError {Object} 422 Some parameters may contain invalid values.\r\n * @apiError 404 Voucher not found.\r\n */\r\nrouter.put(\"/vouchers/audit/:recordId\", [checkAuth, isValidStaff], auditRecord);\r\n\r\n/**\r\n * @api {delete} /api/v1/vouchers/{recordId} Delete vouchers\r\n * @apiName DeleteVoucher\r\n * @apiGroup Voucher\r\n * @apiHeader {String} Authorization authorization token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiSuccess (Success 204) 204 No Content.\r\n * @apiError 404 Voucher not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.delete(\"/vouchers/:recordId\", [checkAuth, isValidStaff], deleteRecord);\r\n\r\nexport default router;\r\n"]}