{"version":3,"sources":["../../../../src/api/general/voucher/controller.js"],"names":["Joi","log4js","aqp","Voucher","schemaCreate","schemaUpdate","schemaAudit","success","fail","notFound","isObjecId","STATUS_MSG","logger","getLogger","configure","appenders","file","type","filename","categories","default","level","fetchRecord","req","res","query","filter","skip","limit","sort","projection","result","find","populate","path","select","exec","info","SUCCESS","DEFAULT","err","error","message","createRecord","data","body","validate","newRecord","save","updateRecord","recordId","id","params","findOneAndUpdate","_id","new","auditRecord","audited_by","updated_by","audited_date","Date","now","deleteRecord","findOneAndRemove"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,IAAkBC,YAAlB,EAAgCC,YAAhC,EAA8CC,WAA9C,QAAiE,SAAjE;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,cAAnD;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA;AACA,MAAMC,SAASX,OAAOY,SAAP,CAAiB,WAAjB,CAAf;AACAZ,OAAOa,SAAP,CAAiB;AACbC,eAAW,EAAEC,MAAM,EAAEC,MAAM,MAAR,EAAgBC,UAAU,kBAA1B,EAAR,EADE;AAEbC,gBAAY,EAAEC,SAAS,EAAEL,WAAW,CAAC,MAAD,CAAb,EAAuBM,OAAO,OAA9B,EAAX;AAFC,CAAjB;;AAKA,OAAO,eAAeC,WAAf,CAA2BC,GAA3B,EAAgCC,GAAhC,EAAqC;AACxC,UAAM,EAAEC,KAAF,KAAYF,GAAlB;AACA,UAAM,EAAEG,MAAF,EAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,UAA7B,KAA4C5B,IAAIuB,KAAJ,CAAlD;AACA,QAAI;AACA,cAAMM,SAAS,MAAM5B,QAAQ6B,IAAR,CAAaN,MAAb,EAChBO,QADgB,CACP,UADO,EAEhBA,QAFgB,CAEP,oBAFO,EAGhBA,QAHgB,CAGP,EAAEC,MAAM,UAAR,EAAoBC,QAAQ,gBAA5B,EAHO,EAIhBF,QAJgB,CAIP,EAAEC,MAAM,YAAR,EAAsBC,QAAQ,gBAA9B,EAJO,EAKhBF,QALgB,CAKP,EAAEC,MAAM,YAAR,EAAsBC,QAAQ,gCAA9B,EALO,EAMhBF,QANgB,CAMP,EAAEC,MAAM,YAAR,EAAsBC,QAAQ,gCAA9B,EANO,EAOhBR,IAPgB,CAOXA,IAPW,EAQhBC,KARgB,CAQVA,KARU,EAShBC,IATgB,CASXA,IATW,EAUhBM,MAVgB,CAUTL,UAVS,EAWhBM,IAXgB,EAArB;AAYA,YAAI,CAACL,MAAL,EAAa;AACT,mBAAOtB,SAASe,GAAT,EAAc,qCAAd,CAAP;AACH;AACDZ,eAAOyB,IAAP,CAAY1B,WAAW2B,OAAX,CAAmBC,OAA/B,EAAwC,EAAxC;AACA,eAAOhC,QAAQiB,GAAR,EAAa,GAAb,EAAkBO,MAAlB,EAA0B,IAA1B,CAAP;AACH,KAlBD,CAkBE,OAAOS,GAAP,EAAY;AACV5B,eAAO6B,KAAP,CAAaD,GAAb;AACA,eAAOhC,KAAKgB,GAAL,EAAU,GAAV,EAAgB,4BAA2BgB,IAAIE,OAAQ,EAAvD,CAAP;AACH;AACJ;;AAED,OAAO,eAAeC,YAAf,CAA4BpB,GAA5B,EAAiCC,GAAjC,EAAsC;AACzC,UAAMoB,OAAOrB,IAAIsB,IAAjB;AACA,UAAM,EAAEJ,KAAF,KAAYzC,IAAI8C,QAAJ,CAAaF,IAAb,EAAmBxC,YAAnB,CAAlB;AACA,QAAIqC,KAAJ,EAAW,OAAOjC,KAAKgB,GAAL,EAAU,GAAV,EAAgB,kCAAiCiB,MAAMC,OAAQ,EAA/D,CAAP;AACX,UAAMK,YAAY,IAAI5C,OAAJ,CAAYyC,IAAZ,CAAlB;AACA,QAAI;AACA,cAAMb,SAAS,MAAMgB,UAAUC,IAAV,EAArB;AACA,YAAI,CAACjB,MAAL,EAAa;AACTnB,mBAAOyB,IAAP,CAAY1B,WAAW2B,OAAX,CAAmBC,OAA/B,EAAwC,EAAxC;AACA,mBAAO9B,SAASe,GAAT,EAAc,qCAAd,CAAP;AACH;AACD,eAAOjB,QAAQiB,GAAR,EAAa,GAAb,EAAkBO,MAAlB,EAA0B,8BAA1B,CAAP;AACH,KAPD,CAOE,OAAOS,GAAP,EAAY;AACV5B,eAAO6B,KAAP,CAAaD,GAAb;AACA,eAAOhC,KAAKgB,GAAL,EAAU,GAAV,EAAgB,0BAAyBgB,IAAIE,OAAQ,EAArD,CAAP;AACH;AACJ;;AAED,OAAO,eAAeO,YAAf,CAA4B1B,GAA5B,EAAiCC,GAAjC,EAAsC;AACzC,UAAMoB,OAAOrB,IAAIsB,IAAjB;AACA,UAAM,EAAEK,UAAUC,EAAZ,KAAmB5B,IAAI6B,MAA7B;AACA,UAAM,EAAEX,KAAF,KAAYzC,IAAI8C,QAAJ,CAAaF,IAAb,EAAmBvC,YAAnB,CAAlB;AACA,QAAIoC,KAAJ,EAAW,OAAOjC,KAAKgB,GAAL,EAAU,GAAV,EAAgB,kCAAiCiB,MAAMC,OAAQ,EAA/D,CAAP;AACX,QAAI;AACA,cAAMX,SAAS,MAAM5B,QAAQkD,gBAAR,CAAyB,EAAEC,KAAKH,EAAP,EAAzB,EAAsCP,IAAtC,EAA4C,EAAEW,KAAK,IAAP,EAA5C,CAArB;AACA,YAAI,CAACxB,MAAL,EAAa;AACT,mBAAOtB,SAASe,GAAT,EAAe,wCAAuC2B,EAAG,EAAzD,CAAP;AACH;AACD,eAAO5C,QAAQiB,GAAR,EAAa,GAAb,EAAkBO,MAAlB,EAA0B,8BAA1B,CAAP;AACH,KAND,CAME,OAAOS,GAAP,EAAY;AACV5B,eAAO6B,KAAP,CAAaD,GAAb;AACA,eAAOhC,KAAKgB,GAAL,EAAU,GAAV,EAAgB,0BAAyBgB,IAAIE,OAAQ,EAArD,CAAP;AACH;AACJ;;AAED,OAAO,eAAec,WAAf,CAA2BjC,GAA3B,EAAgCC,GAAhC,EAAqC;AACxC,UAAMoB,OAAOrB,IAAIsB,IAAjB;AACA,UAAM,EAAEK,UAAUC,EAAZ,KAAmB5B,IAAI6B,MAA7B;AACAR,SAAKa,UAAL,GAAkBlC,IAAIsB,IAAJ,CAASa,UAA3B;AACAd,SAAKe,YAAL,GAAoBC,KAAKC,GAAL,EAApB;AACA,UAAM,EAAEpB,KAAF,KAAYzC,IAAI8C,QAAJ,CAAaF,IAAb,EAAmBtC,WAAnB,CAAlB;AACA,QAAImC,KAAJ,EAAW,OAAOjC,KAAKgB,GAAL,EAAU,GAAV,EAAgB,kCAAiCiB,MAAMC,OAAQ,EAA/D,CAAP;AACX,QAAI;AACA,cAAMX,SAAS,MAAM5B,QAAQkD,gBAAR,CAAyB,EAAEC,KAAKH,EAAP,EAAzB,EAAsCP,IAAtC,EAA4C,EAAEW,KAAK,IAAP,EAA5C,CAArB;AACA,YAAI,CAACxB,MAAL,EAAa;AACT,mBAAOtB,SAASe,GAAT,EAAe,wCAAuC2B,EAAG,EAAzD,CAAP;AACH;AACD,eAAO5C,QAAQiB,GAAR,EAAa,GAAb,EAAkBO,MAAlB,EAA0B,8BAA1B,CAAP;AACH,KAND,CAME,OAAOS,GAAP,EAAY;AACV5B,eAAO6B,KAAP,CAAaD,GAAb;AACA,eAAOhC,KAAKgB,GAAL,EAAU,GAAV,EAAgB,0BAAyBgB,IAAIE,OAAQ,EAArD,CAAP;AACH;AACJ;;AAED,OAAO,eAAeoB,YAAf,CAA4BvC,GAA5B,EAAiCC,GAAjC,EAAsC;AACzC,UAAM,EAAE0B,UAAUC,EAAZ,KAAmB5B,IAAI6B,MAA7B;AACA,QAAI;AACA,cAAMrB,SAAS,MAAM5B,QAAQ4D,gBAAR,CAAyB,EAAET,KAAKH,EAAP,EAAzB,CAArB;AACA,YAAI,CAACpB,MAAL,EAAa;AACT,mBAAOtB,SAASe,GAAT,EAAe,wCAAuC2B,EAAG,EAAzD,CAAP;AACH;AACD,eAAO5C,QAAQiB,GAAR,EAAa,GAAb,EAAkBO,MAAlB,EAA0B,8BAA1B,CAAP;AACH,KAND,CAME,OAAOS,GAAP,EAAY;AACV5B,eAAO6B,KAAP,CAAaD,GAAb;AACA,eAAOhC,KAAKgB,GAAL,EAAU,GAAV,EAAgB,0BAAyBgB,IAAIE,OAAQ,EAArD,CAAP;AACH;AACJ","file":"controller.js","sourcesContent":["import Joi from \"joi\";\nimport log4js from \"log4js\";\nimport aqp from \"api-query-params\";\nimport Voucher, { schemaCreate, schemaUpdate, schemaAudit } from \"./model\";\nimport { success, fail, notFound, isObjecId } from \"../../../lib\";\nimport { STATUS_MSG } from \"../../../constants\";\n\n// Logging\nconst logger = log4js.getLogger(\"[voucher]\");\nlog4js.configure({\n    appenders: { file: { type: \"file\", filename: \"logs/voucher.log\" } },\n    categories: { default: { appenders: [\"file\"], level: \"debug\" } },\n});\n\nexport async function fetchRecord(req, res) {\n    const { query } = req;\n    const { filter, skip, limit, sort, projection } = aqp(query);\n    try {\n        const result = await Voucher.find(filter)\n            .populate(\"stage_id\")\n            .populate(\"account_heading_id\")\n            .populate({ path: \"staff_id\", select: \"-password -otp\" })\n            .populate({ path: \"partner_id\", select: \"-password -otp\" })\n            .populate({ path: \"created_by\", select: \"surname other_name email phone\" })\n            .populate({ path: \"updated_by\", select: \"surname other_name email phone\" })\n            .skip(skip)\n            .limit(limit)\n            .sort(sort)\n            .select(projection)\n            .exec();\n        if (!result) {\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n        logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n        return success(res, 201, result, null);\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error retrieving record. ${err.message}`);\n    }\n}\n\nexport async function createRecord(req, res) {\n    const data = req.body;\n    const { error } = Joi.validate(data, schemaCreate);\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\n    const newRecord = new Voucher(data);\n    try {\n        const result = await newRecord.save();\n        if (!result) {\n            logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n        return success(res, 201, result, \"Record created successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error creating record. ${err.message}`);\n    }\n}\n\nexport async function updateRecord(req, res) {\n    const data = req.body;\n    const { recordId: id } = req.params;\n    const { error } = Joi.validate(data, schemaUpdate);\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\n    try {\n        const result = await Voucher.findOneAndUpdate({ _id: id }, data, { new: true });\n        if (!result) {\n            return notFound(res, `Bad Request: Model not found with id ${id}`);\n        }\n        return success(res, 200, result, \"Record updated successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error updating record. ${err.message}`);\n    }\n}\n\nexport async function auditRecord(req, res) {\n    const data = req.body;\n    const { recordId: id } = req.params;\n    data.audited_by = req.body.updated_by;\n    data.audited_date = Date.now();\n    const { error } = Joi.validate(data, schemaAudit);\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\n    try {\n        const result = await Voucher.findOneAndUpdate({ _id: id }, data, { new: true });\n        if (!result) {\n            return notFound(res, `Bad Request: Model not found with id ${id}`);\n        }\n        return success(res, 200, result, \"Record updated successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error updating record. ${err.message}`);\n    }\n}\n\nexport async function deleteRecord(req, res) {\n    const { recordId: id } = req.params;\n    try {\n        const result = await Voucher.findOneAndRemove({ _id: id });\n        if (!result) {\n            return notFound(res, `Bad Request: Model not found with id ${id}`);\n        }\n        return success(res, 200, result, \"Record deleted successfully!\");\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error deleting record. ${err.message}`);\n    }\n}\n"]}