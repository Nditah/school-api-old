{"version":3,"sources":["../../../../src/api/general/documentation/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","document_type_id","Joi","string","optional","type","trim","valid","required","asset_id","staff_id","partner_id","customer_id","vehicle_id","sales_order_id","purchase_order_id","reference","last_renewal","date","next_renewal","renewal_by","amount","number","description","is_renewed","boolean","is_validity","created_by","schemaUpdate","updated_by","schema","ref","String","enum","Date","Number","comment","Boolean","default","url","validate","validator","text","length","indexOf","message","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","Documentation","model","insertMany","table"],"mappings":"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","file":"model.js","sourcesContent":["/**\r\n * @author 4Dcoder\r\n * @property {ObjectId} id Documentation primaryKey\r\n * @property {ObjectId} document_type_id Documentation DocumentType ObjectId (required)\r\n * @property {String} type Documentation type owner\r\n * \"ASSET|PARTNER|STAFF|VEHICLE|SALESORDER|PURCHASE\" (required)\r\n * @property {ObjectId} asset_id Documentation asset ObjectId\r\n * @property {ObjectId} staff_id Documentation staff ObjectId\r\n * @property {ObjectId} partner_id Documentation partner ObjectId\r\n * @property {ObjectId} customer_id Documentation customer ObjectId\r\n * @property {ObjectId} vehicle_id Documentation vehicle ObjectId\r\n * @property {ObjectId} sales_order_id Documentation sales_order ObjectId\r\n * @property {ObjectId} purchase_order_id Documentation PurchaseOrder ObjectId\r\n * @property {String} reference Documentation reference number\r\n * @property {Date} last_renewal Documentation previous date renewal\r\n * @property {Date} next_renewal Documentation upcoming renewal\r\n * @property {ObjectId} renewal_by Documentation renewal_by Staff responsible for the task\r\n * @property {Number} amount Documentation amount spent or fee|charge for renewal\r\n * @property {String} description Documentation description\r\n * @property {Boolean} is_renewed Documentation is_renewed\r\n * @property {Boolean} is_validity Documentation is_validity\r\n * @description Documentation model holds all Company documents\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport table from \"./table\";\r\nimport Staff from \"../staff/model\";\r\nimport Vehicle from \"../vehicle/model\";\r\nimport DocumentType from \"../document-type/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    document_type_id: Joi.string().optional(),\r\n    type: Joi.string().trim().valid([\"ASSET\", \"PARTNER\", \"STAFF\", \"VEHICLE\", \"SALESORDER\", \"PURCHASE\"]).required(),\r\n    asset_id: Joi.string().optional(),\r\n    staff_id: Joi.string().optional(),\r\n    partner_id: Joi.string().optional(),\r\n    customer_id: Joi.string().optional(),\r\n    vehicle_id: Joi.string().optional(),\r\n    sales_order_id: Joi.string().optional(),\r\n    purchase_order_id: Joi.string().optional(),\r\n    reference: Joi.string().optional(),\r\n    last_renewal: Joi.date().optional(),\r\n    next_renewal: Joi.date().optional(),\r\n    renewal_by: Joi.string().optional(),\r\n    amount: Joi.number().optional(),\r\n    description: Joi.string().optional(),\r\n    is_renewed: Joi.boolean().optional(),\r\n    is_validity: Joi.boolean().optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    document_type_id: Joi.string().optional(),\r\n    type: Joi.string().trim().valid([\"ASSET\", \"PARTNER\", \"STAFF\", \"VEHICLE\", \"SALESORDER\", \"PURCHASE\"]).required(),\r\n    asset_id: Joi.string().optional(),\r\n    staff_id: Joi.string().optional(),\r\n    partner_id: Joi.string().optional(),\r\n    customer_id: Joi.string().optional(),\r\n    vehicle_id: Joi.string().optional(),\r\n    sales_order_id: Joi.string().optional(),\r\n    purchase_order_id: Joi.string().optional(),\r\n    reference: Joi.string().optional(),\r\n    last_renewal: Joi.date().optional(),\r\n    next_renewal: Joi.date().optional(),\r\n    renewal_by: Joi.string().optional(),\r\n    amount: Joi.number().optional(),\r\n    description: Joi.string().optional(),\r\n    is_renewed: Joi.boolean().optional(),\r\n    is_validity: Joi.boolean().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    document_type_id: { type: ObjectId, ref: \"DocumentType\", required: true },\r\n    type: {\r\n        type: String,\r\n        enum: [\"ASSET\", \"PARTNER\", \"STAFF\", \"VEHICLE\", \"SALESORDER\", \"PURCHASE\"],\r\n        required: true,\r\n    },\r\n    asset_id: { type: ObjectId, ref: \"Asset\" },\r\n    staff_id: { type: ObjectId, ref: \"Staff\" },\r\n    partner_id: { type: ObjectId, ref: \"Partner\" },\r\n    customer_id: { type: ObjectId, ref: \"Customer\" },\r\n    vehicle_id: { type: ObjectId, ref: \"Vehicle\" },\r\n    sales_order_id: { type: ObjectId, ref: \"SalesOrder\" },\r\n    purchase_order_id: { type: ObjectId, ref: \"PurchaseOrder\" },\r\n    reference: { type: String },\r\n    last_renewal: { type: Date },\r\n    next_renewal: { type: Date },\r\n    renewal_by: { type: ObjectId, ref: \"Staff\" },\r\n    amount: { type: Number, comment: \"fee or renewal charge\" },\r\n    description: { type: String },\r\n    is_renewed: { type: Boolean, required: true, default: false },\r\n    is_validity: { type: Boolean, required: true, default: false },\r\n    url: {\r\n        type: String,\r\n        validate: {\r\n            validator(text) {\r\n                if (text !== null && text.length > 0) {\r\n                    return text.indexOf(\"https://\") === 0 || text.indexOf(\"http://\") === 0;\r\n                }\r\n                return true;\r\n            },\r\n            message: \"Image url must start with https://uniform-resource/locator/images\",\r\n        },\r\n    },\r\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"documentation\");\r\nnewSchema.plugin(mongoose_csv);\r\n\r\nconst Documentation = mongoose.model(\"Documentation\", newSchema);\r\n\r\nif (preload) { Documentation.insertMany(table); }\r\n\r\nexport default Documentation;\r\n"]}