{"version":3,"sources":["../../../../src/api/general/hostel-allocation/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchHostelAllocation","post","createHostelAllocation","put","updateHostelAllocation","delete","deleteHostelAllocation"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAOA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAF,OAAOG,GAAP,CAAW,qBAAX,EAAkC,CAACC,wBAAD,EAAYC,2BAAZ,CAAlC,EAA6DC,iCAA7D;;AAEA;;;;;;;;;;;;;;;AAeAN,OAAOO,IAAP,CAAY,qBAAZ,EAAmC,CAACH,wBAAD,EAAYC,2BAAZ,CAAnC,EAA8DG,kCAA9D;;AAEA;;;;;;;;;;;;;;;AAeAR,OAAOS,GAAP,CAAW,+BAAX,EAA4C,CAACL,wBAAD,EAAYC,2BAAZ,CAA5C,EAAuEK,kCAAvE;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,+BAAd,EAA+C,CAACP,wBAAD,EAAYC,2BAAZ,CAA/C,EAA0EO,kCAA1E;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport {\n    fetchHostelAllocation,\n    createHostelAllocation,\n    updateHostelAllocation,\n    deleteHostelAllocation,\n} from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/hostel-allocations?id={recordId} Retrieve one or all records\n * @apiName RetrieveHostelAllocation\n * @apiGroup HostelAllocation\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/hostel-allocations?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records of HostelAllocation the school.\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/hostel-allocations\", [checkAuth, isValidStaff], fetchHostelAllocation);\n\n/**\n * @api {post} /api/v1/hostel-allocations Create hostel-allocations\n * @apiName CreateHostelAllocation\n * @apiGroup HostelAllocation\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} block HostelAllocation block name (required)\n * @apiParam {Number} room_no HostelAllocation room_no (required)\n * @apiParam {Number} no_of_beds HostelAllocation no_of_beds (required)\n * @apiParam {String} fee_id HostelAllocation fee_id (optional)\n * @apiParam {String} description HostelAllocation description (optional)\n * @apiParam {String} status HostelAllocation Status (Occupied or not Occupied)(optional)\n * @apiError {Object} 422 Some parameters may contain invalid values.\n * @apiError 404 HostelAllocation not found.\n * @apiError 500 server error.\n */\nrouter.post(\"/hostel-allocations\", [checkAuth, isValidStaff], createHostelAllocation);\n\n/**\n * @api {put} /api/v1/hostel-allocations/{recordId} Update hostel-allocations\n * @apiName UpdateHostelAllocation\n * @apiGroup HostelAllocation\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} block HostelAllocation block name (required)\n * @apiParam {Number} room_no HostelAllocation room_no (required)\n * @apiParam {Number} no_of_beds HostelAllocation no_of_beds (required)\n * @apiParam {String} fee_id HostelAllocation fee_id (optional)\n * @apiParam {String} description HostelAllocation description (optional)\n * @apiParam {String} status HostelAllocation Status (Occupied or not Occupied)(optional)\n * @apiError {Object} 422 Some parameters may contain invalid values.\n * @apiError 404 HostelAllocation not found.\n * @apiError 500 server error.\n */\nrouter.put(\"/hostel-allocations/:recordId\", [checkAuth, isValidStaff], updateHostelAllocation);\n\n/**\n * @api {delete} /api/v1/hostel-allocations/{recordId} Delete hostel-allocations\n * @apiName DeleteHostelAllocation\n * @apiGroup HostelAllocation\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 HostelAllocation not found.\n * @apiError 401 master HostelAllocation only.\n */\nrouter.delete(\"/hostel-allocations/:recordId\", [checkAuth, isValidStaff], deleteHostelAllocation);\n\nexport default router;\n"]}