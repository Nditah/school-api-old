{"version":3,"sources":["../../../../src/api/general/payroll/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,WAAX,EAAwB,CAACC,wBAAD,EAAYC,2BAAZ,CAAxB,EAAmDC,uBAAnD;;AAEA;;;;;;;;;;;;;;;;;;AAkBAN,OAAOO,IAAP,CAAY,WAAZ,EAAyB,CAACH,wBAAD,EAAYC,2BAAZ,CAAzB,EAAoDG,wBAApD;;AAEA;;;;;;;;;;;;;;;;;;;AAmBAR,OAAOS,GAAP,CAAW,qBAAX,EAAkC,CAACL,wBAAD,EAAYC,2BAAZ,CAAlC,EAA6DK,wBAA7D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,qBAAd,EAAqC,CAACP,wBAAD,EAAYC,2BAAZ,CAArC,EAAgEO,wBAAhE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/payrolls?id={recordId} Retrieve Payroll records\r\n * @apiName RetrievePayroll\r\n * @apiGroup Payroll\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i api/payroll?\r\n * @apiParam {Object} filter query condition (optional)\r\n * @apiParam {Number} skip Number of records to offset by (optional)\r\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\r\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\r\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\r\n * @apiDescription Records  of account headings belonging to one classification\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/payrolls\", [checkAuth, isValidStaff], fetchRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/payrolls Create a Payroll record\r\n * @apiName CreatePayroll\r\n * @apiGroup Payroll\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {Date} period Payroll period YYYY-MM salary month\r\n * @apiParam {String} code Payroll code of transaction\r\n * @apiParam {String} subsidiary Payroll subsidiary of company eg PML\r\n * @apiParam {String} voucher Payroll voucher raised for salary\r\n * @apiParam {Array} payroll_detail_ids Payroll PayrollDetail ObjectIds\r\n * @apiParam {Number} total Payroll total sum of salary paid\r\n * @apiParam {Date} pay_start Payroll pay_start commence payment date\r\n * @apiParam {String} remark Payroll remark or any comment\r\n * @apiSuccess {Object} Payroll Payroll's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Payroll not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/payrolls\", [checkAuth, isValidStaff], createRecord);\r\n\r\n/**\r\n * @api {put} /api/v1/payrolls/{recordId} Update a Payroll record\r\n * @apiName UpdatePayroll\r\n * @apiGroup Payroll\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiParam {Date} period Payroll period YYYY-MM salary month\r\n * @apiParam {String} code Payroll code of transaction\r\n * @apiParam {String} subsidiary Payroll subsidiary of company eg PML\r\n * @apiParam {String} voucher Payroll voucher raised for salary\r\n * @apiParam {Array} payroll_detail_ids Payroll PayrollDetail ObjectIds\r\n * @apiParam {Number} total Payroll total sum of salary paid\r\n * @apiParam {Date} pay_start Payroll pay_start commence payment date\r\n * @apiParam {String} remark Payroll remark or any comment\r\n * @apiSuccess {Object} Payroll Payroll's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Payroll not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.put(\"/payrolls/:recordId\", [checkAuth, isValidStaff], updateRecord);\r\n\r\n/**\r\n * @api {delete} /api/v1/payrolls/{recordId} Delete a Payroll record\r\n * @apiName DeletePayroll\r\n * @apiGroup Payroll\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recordId required record ObjectId\r\n * @apiSuccess (Success 204) 204 No Content.\r\n * @apiError 404 Payroll not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.delete(\"/payrolls/:recordId\", [checkAuth, isValidStaff], deleteRecord);\r\n\r\nexport default router;\r\n"]}