{"version":3,"sources":["../../../../src/api/general/payroll/model.js"],"names":["Joi","mongoose","mongoose_csv","DATABASE","SUBSIDIARY","table","Staff","Voucher","PayrollDetail","Schema","ObjectId","Types","schemaCreate","period","date","required","code","string","trim","subsidiary","valid","Object","values","voucher","payroll_detail_ids","array","optional","total","number","pay_start","remark","created_by","schemaUpdate","updated_by","schema","type","Date","comment","String","enum","ref","Number","default","preload","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","Payroll","model","insertMany"],"mappings":"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","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {ObjectId} id Payroll primaryKey\n * @property {Date} period Payroll period YYYY-MM salary month\n * @property {String} code Payroll code of transaction\n * @property {String} subsidiary Payroll subsidiary of company eg PML\n * @property {String} voucher Payroll voucher raised for salary\n * @property {Array} payroll_detail_ids Payroll PayrollDetail ObjectIds\n * @property {Number} total Payroll total sum of salary paid\n * @property {Date} pay_start Payroll pay_start commence payment date\n * @property {String} remark Payroll remark or any comment\n * @description Payroll model holds record of Salary payment summary\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE, SUBSIDIARY } from \"../../../constants\";\nimport table from \"./table\";\nimport Staff from \"../staff/model\";\nimport Voucher from \"../voucher/model\";\n// eslint-disable-next-line import/no-cycle\nimport PayrollDetail from \"../payroll-detail/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    period: Joi.date().required(),\n    code: Joi.string().trim().required(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).required(),\n    voucher: Joi.string().required(),\n    payroll_detail_ids: Joi.array().optional(),\n    total: Joi.number().optional(),\n    pay_start: Joi.date().optional(),\n    remark: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    period: Joi.date().optional(),\n    code: Joi.string().trim().optional(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\n    voucher: Joi.string().optional(),\n    payroll_detail_ids: Joi.array().optional(),\n    total: Joi.number().optional(),\n    pay_start: Joi.date().optional(),\n    remark: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    period: { type: Date, required: true, comment: \"Salary yyyy-mm date\" },\n    code: { type: String, required: true, comment: \"Transaction code\" },\n    subsidiary: {\n        type: String,\n        enum: Object.values(SUBSIDIARY),\n        required: [false, \"Why no input?\"],\n    },\n    voucher: { type: ObjectId, ref: \"Voucher\" },\n    total: { type: Number, required: true, default: 0 },\n    payroll_detail_ids: [{ type: ObjectId, ref: \"PayrollDetail\" }],\n    pay_start: { type: Date },\n    remark: { type: String },\n    created_by: { type: ObjectId, required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"payroll\");\n\nconst Payroll = mongoose.model(\"Payroll\", newSchema);\n\nif (preload) { Payroll.insertMany(table); }\n\nexport default Payroll;\n"]}