{"version":3,"sources":["../../../../src/api/general/staff/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord","login"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,SAAX,EAAsB,CAACC,wBAAD,EAAYC,2BAAZ,CAAtB,EAAiDC,uBAAjD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEAN,OAAOO,IAAP,CAAY,SAAZ,EAAuB,CAACH,wBAAD,EAAYC,2BAAZ,CAAvB,EAAkDG,wBAAlD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEAR,OAAOS,GAAP,CAAW,mBAAX,EAAgC,CAACL,wBAAD,EAAYC,2BAAZ,CAAhC,EAA2DK,wBAA3D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,mBAAd,EAAmC,CAACP,wBAAD,EAAYC,2BAAZ,CAAnC,EAA8DO,wBAA9D;;AAEA;;;;;;;;;;;;;AAaAZ,OAAOO,IAAP,CAAY,cAAZ,EAA4BM,iBAA5B;;kBAEeb,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { fetchRecord, createRecord, updateRecord, deleteRecord, login } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/staffs?id={recordId} Retrieve Staff records\r\n * @apiName RetrieveStaff\r\n * @apiGroup Staff\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i api/staffs?\r\n * @apiParam {Object} filter query condition (optional)\r\n * @apiParam {Number} skip Number of records to offset by (optional)\r\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\r\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\r\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\r\n * @apiDescription Records of staffs in the school.\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/staffs\", [checkAuth, isValidStaff], fetchRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/staffs Create a Staff record\r\n * @apiName CreateStaff\r\n * @apiGroup Staff\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} title Staff title (optional)\r\n * @apiParam {String} surname Staff surname (optional)\r\n * @apiParam {String} given_name Staff given_name (optional)\r\n * @apiParam {String} gender Staff gender (optional)\r\n * @apiParam {Date} birth_date Staff birth_date (optional)\r\n * @apiParam {String} marital_status Staff marital_status (optional)\r\n * @apiParam {String} phone Staff office phone (optional)\r\n * @apiParam {String} phone_personal Staff phone_personal (optional)\r\n * @apiParam {String} address Staff address (optional)\r\n * @apiParam {ObjectId} state Staff state (optional)\r\n * @apiParam {ObjectId} county Staff county (optional)\r\n * @apiParam {String} email Staff email (optional)\r\n * @apiParam {String} staff_type Staff staff_type (optional)\r\n * @apiParam {ObjectId} classe Staff classe (optional)\r\n * @apiParam {ObjectId} subject Staff subject (optional)\r\n * @apiParam {String} password Staff password (optional)\r\n * @apiParam {String} kin Staff kin (required)\r\n * @apiParam {String} kin_phone Staff kin_phone (required)\r\n * @apiParam {String} kin_address Staff kin_address (required)\r\n * @apiParam {String} guarantor1 Staff guarantor1 (required)\r\n * @apiParam {String} guarantor1_phone Staff guarantor1_phone (required)\r\n * @apiParam {String} guarantor1_address Staff guarantor1_address (required)\r\n * @apiParam {String} guarantor2 Staff guarantor2 (optional)\r\n * @apiParam {String} guarantor2_phone Staff guarantor2_phone (optional)\r\n * @apiParam {String} guarantor2_address Staff guarantor2_address (optional)\r\n * @apiParam {String} profession Staff profession (optional)\r\n * @apiParam {String} qualification Staff qualification (optional)\r\n * @apiParam {String} employment_status Staff employment_status (required)\r\n * @apiParam {Number} tax Staff tax (optional)\r\n * @apiParam {Number} basic_salary Staff basic_salary (optional)\r\n * @apiParam {Number} bonus Staff bonus (optional)\r\n * @apiParam {Number} entertainment_allowance Staff entertainment_allowance (optional)\r\n * @apiParam {Number} house_allowance Staff house_allowance (optional)\r\n * @apiParam {Number} lunch_allowance Staff lunch_allowance (optional)\r\n * @apiParam {Number} medical_allowance Staff medical_allowance (optional)\r\n * @apiParam {Number} transport_allowance Staff transport_allowance (optional)\r\n * @apiParam {Number} utility_allowance Staff utility_allowance (optional)\r\n * @apiParam {Number} welfare_allowance Staff welfare_allowance (optional)\r\n * @apiParam {Number} pension Staff pension (optional)\r\n * @apiParam {Number} assurance Staff assurance (optional)\r\n * @apiParam {ObjectId} bank_name Staff bank_name (optional)\r\n * @apiParam {String} bank_account_number Staff bank_account_number (optional)\r\n * @apiParam {String} bank_account_name Staff bank_account_name (optional)\r\n * @apiParam {String} rank Staff rank (optional)\r\n * @apiParam {ObjectId} office Staff office (required)\r\n * @apiParam {String} role Staff role is an array of office duties (required)\r\n * @apiParam {String} subsidiary Staff subsidiary (required)\r\n * @apiParam {String} remark Staff remark (optional)\r\n * @apiParam {String} photo Staff photo (optional)\r\n * @apiParam {Boolean} is_salary_payable Staff is_salary_payable (optional)\r\n * @apiParam {Boolean} is_document_complete Staff is_document_complete (optional)\r\n * @apiParam {ObjectId} approved_by Staff approved_by (optional)\r\n * @apiParam {Date} approved_date Staff approved_date (optional)\r\n * @apiParam {ObjectId} disengaged_by Staff disengaged_by (optional)\r\n * @apiParam {Date} disengaged_date Staff disengaged_date (optional)\r\n * @apiSuccess {Object} Staff Staff's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Staff not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/staffs\", [checkAuth, isValidStaff], createRecord);\r\n\r\n/**\r\n * @api {put} /api/v1/staffs/{recordId} Update a Staff record\r\n * @apiName UpdateStaff\r\n * @apiGroup Staff\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {ObjectId} recordId required record ObjectId\r\n * @apiParam {String} title Staff title (optional)\r\n * @apiParam {String} surname Staff surname (optional)\r\n * @apiParam {String} given_name Staff given_name (optional)\r\n * @apiParam {String} gender Staff gender (optional)\r\n * @apiParam {Date} birth_date Staff birth_date (optional)\r\n * @apiParam {String} marital_status Staff marital_status (optional)\r\n * @apiParam {String} phone Staff office phone (optional)\r\n * @apiParam {String} phone_personal Staff phone_personal (optional)\r\n * @apiParam {String} address Staff address (optional)\r\n * @apiParam {ObjectId} state Staff state (optional)\r\n * @apiParam {ObjectId} county Staff county (optional)\r\n * @apiParam {String} email Staff email (optional)\r\n * @apiParam {String} staff_type Staff staff_type (optional)\r\n * @apiParam {ObjectId} classe Staff classe (optional)\r\n * @apiParam {ObjectId} subject Staff subject (optional)\r\n * @apiParam {String} password Staff password (optional)\r\n * @apiParam {String} kin Staff kin (required)\r\n * @apiParam {String} kin_phone Staff kin_phone (required)\r\n * @apiParam {String} kin_address Staff kin_address (required)\r\n * @apiParam {String} guarantor1 Staff guarantor1 (required)\r\n * @apiParam {String} guarantor1_phone Staff guarantor1_phone (required)\r\n * @apiParam {String} guarantor1_address Staff guarantor1_address (required)\r\n * @apiParam {String} guarantor2 Staff guarantor2 (optional)\r\n * @apiParam {String} guarantor2_phone Staff guarantor2_phone (optional)\r\n * @apiParam {String} guarantor2_address Staff guarantor2_address (optional)\r\n * @apiParam {String} profession Staff profession (optional)\r\n * @apiParam {String} qualification Staff qualification (optional)\r\n * @apiParam {String} employment_status Staff employment_status (required)\r\n * @apiParam {Number} tax Staff tax (optional)\r\n * @apiParam {Number} basic_salary Staff basic_salary (optional)\r\n * @apiParam {Number} bonus Staff bonus (optional)\r\n * @apiParam {Number} entertainment_allowance Staff entertainment_allowance (optional)\r\n * @apiParam {Number} house_allowance Staff house_allowance (optional)\r\n * @apiParam {Number} lunch_allowance Staff lunch_allowance (optional)\r\n * @apiParam {Number} medical_allowance Staff medical_allowance (optional)\r\n * @apiParam {Number} transport_allowance Staff transport_allowance (optional)\r\n * @apiParam {Number} utility_allowance Staff utility_allowance (optional)\r\n * @apiParam {Number} welfare_allowance Staff welfare_allowance (optional)\r\n * @apiParam {Number} pension Staff pension (optional)\r\n * @apiParam {Number} assurance Staff assurance (optional)\r\n * @apiParam {ObjectId} bank_name Staff bank_name (optional)\r\n * @apiParam {String} bank_account_number Staff bank_account_number (optional)\r\n * @apiParam {String} bank_account_name Staff bank_account_name (optional)\r\n * @apiParam {String} rank Staff rank (optional)\r\n * @apiParam {ObjectId} office Staff office (required)\r\n * @apiParam {String} role Staff role is an array of office duties (required)\r\n * @apiParam {String} subsidiary Staff subsidiary (required)\r\n * @apiParam {String} remark Staff remark (optional)\r\n * @apiParam {String} photo Staff photo (optional)\r\n * @apiParam {Boolean} is_salary_payable Staff is_salary_payable (optional)\r\n * @apiParam {Boolean} is_document_complete Staff is_document_complete (optional)\r\n * @apiParam {ObjectId} approved_by Staff approved_by (optional)\r\n * @apiParam {Date} approved_date Staff approved_date (optional)\r\n * @apiParam {ObjectId} disengaged_by Staff disengaged_by (optional)\r\n * @apiParam {Date} disengaged_date Staff disengaged_date (optional)\r\n * @apiSuccess {Object} Staff Staff's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Staff not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.put(\"/staffs/:recordId\", [checkAuth, isValidStaff], updateRecord);\r\n\r\n/**\r\n * @api {delete} /api/v1/staffs/{recordId} Delete a Staff record\r\n * @apiName DeleteStaff\r\n * @apiGroup Staff\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {ObjectId} recordId required record ObjectId\r\n * @apiSuccess (Success 204) 204 No Content.\r\n * @apiError 404 Staff not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.delete(\"/staffs/:recordId\", [checkAuth, isValidStaff], deleteRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/staff/login Login Staff\r\n * @apiName LoginStaff\r\n * @apiGroup Staff\r\n * @apiPermission master\r\n * @apiParam {String} email Staff email address (optional)\r\n * @apiParam {String} password Staff password (optional)\r\n * @apiParam {String} office_phone Staff official phone number (optional)\r\n * @apiParam {String} otp Staff One-Time-Password sent to phone (optional)\r\n * @apiParam {String} type Login type \"EMAIL\", \"PHONE\", \"OTP\" (required)\r\n * @apiSuccess (Success 200) 200 Login Successful.\r\n * @apiError 404 Staff not found.\r\n */\r\nrouter.post(\"/staff/login\", login);\r\n\r\nexport default router;\r\n"]}