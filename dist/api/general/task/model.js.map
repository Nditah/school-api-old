{"version":3,"sources":["../../../../src/api/general/task/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","name","Joi","string","required","tags","array","optional","code","status","title","description","manhour","number","completion","report","start_date","date","end_date","assigned_date","assigned_to","assigned_by","score","remark","voucher","asset_assignment","office_id","subsidiary","valid","Object","values","SUBSIDIARY","created_by","schemaUpdate","updated_by","schema","type","String","Number","Date","ref","enum","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","Task","model","insertMany","table"],"mappings":"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","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\r\n// LESSON REGISTER\r\n/**\r\n * @author 4Dcoder\r\n * @property {ObjectId} id Task primaryKey\r\n * @property {String} name Task short name\r\n * @property {String} tags Task tags are keywords\r\n * @property {String} code Task code\r\n * @property {String} status Task status \"PENDING|ASSIGNED|ONGOING|STARTED|ENDING|CLOSED\"\r\n * @property {String} title Task title\r\n * @property {String} description Task description explanation and expectations\r\n * @property {Number} manhour Task manhour estimated manhour required\r\n * @property {Number} completion Task completion current Percent executed\r\n * @property {String} report Task report by Staff assigned_to\r\n * @property {Date} start_date Task start_date assigned_to mark as started\r\n * @property {Date} end_date Task end_date Staff assigned_to mark as ended\r\n * @property {Date} assigned_date Task assigned_date\r\n * @property {ObjectId} assigned_to Task assigned_to Staff performing the task\r\n * @property {ObjectId} assigned_by Task assigned_by Staff created the task\r\n * @property {Number} score Task score by Staff assigned_by\r\n * @property {String} remark Task remark by Staff assigned_by\r\n * @property {ObjectId} voucher Task voucher for needed funds by Staff assigned_to\r\n * @property {ObjectId} asset_assignment Task request by Staff assigned_to\r\n * @property {String} subsidiary Task subsidiary conducting the task\r\n * @property {ObjectId} office_id Task office id conducting the task\r\n * @description Task model holds record of all projects and assignment\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE, SUBSIDIARY } from \"../../../constants\";\r\nimport table from \"./table\";\r\nimport Staff from \"../staff/model\";\r\nimport Office from \"../office/model\";\r\nimport AssetAssignment from \"../asset-assignment/model\";\r\nimport Voucher from \"../voucher/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    name: Joi.string().required(),\r\n    tags: Joi.array().optional(),\r\n    code: Joi.string().optional(),\r\n    status: Joi.string().optional(),\r\n    title: Joi.string().required(),\r\n    description: Joi.string().required(), // Explanation and expectations\r\n    manhour: Joi.number().optional(),\r\n    completion: Joi.number().optional(), // Percent\r\n    report: Joi.string().optional(), // By Staff assigned_to\r\n    start_date: Joi.date().optional(),\r\n    end_date: Joi.date().optional(),\r\n    assigned_date: Joi.date().optional(),\r\n    assigned_to: Joi.string().optional(),\r\n    assigned_by: Joi.string().optional(),\r\n    score: Joi.number().optional(), // By Staff assigned_by\r\n    remark: Joi.string().optional(), // By Staff assigned_by\r\n    voucher: Joi.string().optional(),\r\n    asset_assignment: Joi.string().optional(),\r\n    office_id: Joi.string().required(),\r\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    name: Joi.string().optional(),\r\n    tags: Joi.array().optional(),\r\n    code: Joi.string().optional(),\r\n    status: Joi.string().optional(),\r\n    title: Joi.string().optional(),\r\n    description: Joi.string().optional(), // Explanation and expectations\r\n    manhour: Joi.number().optional(),\r\n    completion: Joi.number().optional(), // Percent\r\n    report: Joi.string().optional(), // By Staff assigned_to\r\n    start_date: Joi.date().optional(),\r\n    end_date: Joi.date().optional(),\r\n    assigned_date: Joi.date().optional(),\r\n    assigned_to: Joi.string().optional(),\r\n    assigned_by: Joi.string().optional(),\r\n    score: Joi.number().optional(), // By Staff assigned_by\r\n    remark: Joi.string().optional(), // By Staff assigned_by\r\n    voucher: Joi.string().optional(),\r\n    asset_assignment: Joi.string().optional(),\r\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\r\n    office_id: Joi.string().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    name: { type: String },\r\n    tags: [{ type: String }], // Keywords\r\n    code: { type: String },\r\n    status: { type: String },\r\n    title: { type: String },\r\n    description: { type: String }, // Explanation and expectations\r\n    manhour: { type: Number },\r\n    completion: { type: Number }, // Percent\r\n    report: { type: String }, // By Staff assigned_to\r\n    start_date: { type: Date },\r\n    end_date: { type: Date },\r\n    assigned_date: { type: Date },\r\n    assigned_to: { type: ObjectId, ref: \"Staff\" },\r\n    assigned_by: { type: ObjectId, ref: \"Staff\" },\r\n    score: { type: Number }, // By Staff assigned_by\r\n    remark: { type: String }, // By Staff assigned_by\r\n    voucher: { type: ObjectId, ref: \"Voucher\" },\r\n    asset_assignment: { type: ObjectId, ref: \"AssetAssignment\" },\r\n    subsidiary: {\r\n        type: String,\r\n        enum: Object.values(SUBSIDIARY),\r\n        required: [false, \"Why no input?\"],\r\n    },\r\n    office_id: { type: ObjectId, ref: \"Office\", required: true },\r\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"task\");\r\n\r\nconst Task = mongoose.model(\"Task\", newSchema);\r\n\r\nif (preload) { Task.insertMany(table); }\r\n\r\nexport default Task;\r\n"]}