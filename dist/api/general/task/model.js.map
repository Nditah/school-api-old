{"version":3,"sources":["../../../../src/api/general/task/model.js"],"names":["Joi","mongoose","mongoose_csv","DATABASE","SUBSIDIARY","table","Staff","Office","AssetAssignment","Voucher","Schema","ObjectId","Types","schemaCreate","name","string","required","tags","array","optional","code","status","title","description","manhour","number","completion","report","start_date","date","end_date","assigned_date","assigned_to","assigned_by","score","remark","voucher","asset_assignment","office_id","subsidiary","valid","Object","values","created_by","schemaUpdate","updated_by","schema","type","String","Number","Date","ref","enum","preload","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","Task","model","insertMany"],"mappings":"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","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n// LESSON REGISTER\n/**\n * @author 4Dcoder\n * @property {ObjectId} id Task primaryKey\n * @property {String} name Task short name\n * @property {String} tags Task tags are keywords\n * @property {String} code Task code\n * @property {String} status Task status \"PENDING|ASSIGNED|ONGOING|STARTED|ENDING|CLOSED\"\n * @property {String} title Task title\n * @property {String} description Task description explanation and expectations\n * @property {Number} manhour Task manhour estimated manhour required\n * @property {Number} completion Task completion current Percent executed\n * @property {String} report Task report by Staff assigned_to\n * @property {Date} start_date Task start_date assigned_to mark as started\n * @property {Date} end_date Task end_date Staff assigned_to mark as ended\n * @property {Date} assigned_date Task assigned_date\n * @property {ObjectId} assigned_to Task assigned_to Staff performing the task\n * @property {ObjectId} assigned_by Task assigned_by Staff created the task\n * @property {Number} score Task score by Staff assigned_by\n * @property {String} remark Task remark by Staff assigned_by\n * @property {ObjectId} voucher Task voucher for needed funds by Staff assigned_to\n * @property {ObjectId} asset_assignment Task request by Staff assigned_to\n * @property {String} subsidiary Task subsidiary conducting the task\n * @property {ObjectId} office_id Task office id conducting the task\n * @description Task model holds record of all projects and assignment\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE, SUBSIDIARY } from \"../../../constants\";\nimport table from \"./table\";\nimport Staff from \"../staff/model\";\nimport Office from \"../office/model\";\nimport AssetAssignment from \"../asset-assignment/model\";\nimport Voucher from \"../voucher/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    name: Joi.string().required(),\n    tags: Joi.array().optional(),\n    code: Joi.string().optional(),\n    status: Joi.string().optional(),\n    title: Joi.string().required(),\n    description: Joi.string().required(), // Explanation and expectations\n    manhour: Joi.number().optional(),\n    completion: Joi.number().optional(), // Percent\n    report: Joi.string().optional(), // By Staff assigned_to\n    start_date: Joi.date().optional(),\n    end_date: Joi.date().optional(),\n    assigned_date: Joi.date().optional(),\n    assigned_to: Joi.string().optional(),\n    assigned_by: Joi.string().optional(),\n    score: Joi.number().optional(), // By Staff assigned_by\n    remark: Joi.string().optional(), // By Staff assigned_by\n    voucher: Joi.string().optional(),\n    asset_assignment: Joi.string().optional(),\n    office_id: Joi.string().required(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    name: Joi.string().optional(),\n    tags: Joi.array().optional(),\n    code: Joi.string().optional(),\n    status: Joi.string().optional(),\n    title: Joi.string().optional(),\n    description: Joi.string().optional(), // Explanation and expectations\n    manhour: Joi.number().optional(),\n    completion: Joi.number().optional(), // Percent\n    report: Joi.string().optional(), // By Staff assigned_to\n    start_date: Joi.date().optional(),\n    end_date: Joi.date().optional(),\n    assigned_date: Joi.date().optional(),\n    assigned_to: Joi.string().optional(),\n    assigned_by: Joi.string().optional(),\n    score: Joi.number().optional(), // By Staff assigned_by\n    remark: Joi.string().optional(), // By Staff assigned_by\n    voucher: Joi.string().optional(),\n    asset_assignment: Joi.string().optional(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\n    office_id: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    name: { type: String },\n    tags: [{ type: String }], // Keywords\n    code: { type: String },\n    status: { type: String },\n    title: { type: String },\n    description: { type: String }, // Explanation and expectations\n    manhour: { type: Number },\n    completion: { type: Number }, // Percent\n    report: { type: String }, // By Staff assigned_to\n    start_date: { type: Date },\n    end_date: { type: Date },\n    assigned_date: { type: Date },\n    assigned_to: { type: ObjectId, ref: \"Staff\" },\n    assigned_by: { type: ObjectId, ref: \"Staff\" },\n    score: { type: Number }, // By Staff assigned_by\n    remark: { type: String }, // By Staff assigned_by\n    voucher: { type: ObjectId, ref: \"Voucher\" },\n    asset_assignment: { type: ObjectId, ref: \"AssetAssignment\" },\n    subsidiary: {\n        type: String,\n        enum: Object.values(SUBSIDIARY),\n        required: [false, \"Why no input?\"],\n    },\n    office_id: { type: ObjectId, ref: \"Office\", required: true },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"task\");\n\nconst Task = mongoose.model(\"Task\", newSchema);\n\nif (preload) { Task.insertMany(table); }\n\nexport default Task;\n"]}