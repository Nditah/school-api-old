{"version":3,"sources":["../../../../src/api/general/parent/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord","login"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAF,OAAOG,GAAP,CAAW,UAAX,EAAuB,CAACC,wBAAD,EAAYC,2BAAZ,CAAvB,EAAkDC,uBAAlD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAN,OAAOO,IAAP,CAAY,UAAZ,EAAwBC,wBAAxB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BAR,OAAOS,GAAP,CAAW,oBAAX,EAAiC,CAACL,wBAAD,CAAjC,EAA8CM,wBAA9C;;AAEA;;;;;;;;;AASAV,OAAOW,MAAP,CAAc,oBAAd,EAAoC,CAACP,wBAAD,EAAYC,2BAAZ,CAApC,EAA+DO,wBAA/D;;AAEA;;;;;;;;;;;;AAYAZ,OAAOO,IAAP,CAAY,gBAAZ,EAA8BM,iBAA9B;;kBAEeb,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord, login } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/parents?id={recordId} Retrieve one or all records\n * @apiName RetrieveParent\n * @apiGroup Parent\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/parents?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records of consolidated list of parents of students in the school.\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/parents\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/v1/parents Create parents\n * @apiName CreateParent\n * @apiGroup Parent\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} title Parent title (optional)\n * @apiParam {String} surname Parent surname (optional)\n * @apiParam {String} given_name Parent given_name (optional)\n * @apiParam {String} gender Parent gender (optional)\n * @apiParam {Date} birth_date Parent birth_date (optional)\n * @apiParam {String} marital_status Parent marital_status (optional)\n * @apiParam {String} address Parent address (optional)\n * @apiParam {ObjectId} state Parent state (optional)\n * @apiParam {ObjectId} county Parent county (optional)\n * @apiParam {String} email Parent email (optional)\n * @apiParam {String} phone Parent office phone (optional)\n * @apiParam {String} password Parent password (optional)\n * @apiParam {String} profession Parent profession (optional)\n * @apiParam {String} employment_status Parent employment_status (required)\n * @apiParam {ObjectId} students Parent students (optional)\n * @apiSuccess {Object} Parent Parent's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Parent not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/parents\", createRecord);\n\n/**\n * @api {put} /api/v1/parents/{recordId} Update parents\n * @apiName UpdateParent\n * @apiGroup Parent\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId required record ObjectId\n * @apiParam {String} title Parent title (optional)\n * @apiParam {String} surname Parent surname (optional)\n * @apiParam {String} given_name Parent given_name (optional)\n * @apiParam {String} gender Parent gender (optional)\n * @apiParam {Date} birth_date Parent birth_date (optional)\n * @apiParam {String} marital_status Parent marital_status (optional)\n * @apiParam {String} address Parent address (optional)\n * @apiParam {ObjectId} state Parent state (optional)\n * @apiParam {ObjectId} county Parent county (optional)\n * @apiParam {String} email Parent email (optional)\n * @apiParam {String} phone Parent office phone (optional)\n * @apiParam {String} password Parent password (optional)\n * @apiParam {String} profession Parent profession (optional)\n * @apiParam {String} employment_status Parent employment_status (required)\n * @apiParam {ObjectId} students Parent students (optional)\n * @apiParam {ObjectId} updated_by id of the staff who created the record\n * @apiSuccess {Object} Parent Parent's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Parent not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/parents/:recordId\", [checkAuth], updateRecord);\n\n/**\n * @api {delete} /api/v1/parents/{recordId} Delete parents\n * @apiName DeleteParent\n * @apiGroup Parent\n * @apiParam {ObjectId} recordId record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Parent not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/parents/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\n/**\n * @api {post} /api/v1/parents/login Login Parent\n * @apiName LoginParent\n * @apiGroup Parent\n * @apiParam {String} email Parent email address (optional)\n * @apiParam {String} password Parent password (optional)\n * @apiParam {String} phone Parent mobile phone number (optional)\n * @apiParam {String} otp Parent One-Time-Password sent to phone (optional)\n * @apiParam {String} type Login type \"EMAIL\", \"PHONE\", \"OTP\" (required)\n * @apiSuccess (Success 200) 200 Login Successful.\n * @apiError 404 Parent not found.\n */\nrouter.post(\"/parents/login\", login);\n\nexport default router;\n"]}