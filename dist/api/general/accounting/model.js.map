{"version":3,"sources":["../../../../src/api/general/accounting/model.js"],"names":["Schema","mongoose","ObjectId","Types","accountClassCreate","code","Joi","string","trim","required","name","optional","description","category","valid","Object","values","ACCOUNT_CLASS_CATEGORY","class_type","ACCOUNT_CLASS_TYPE","subsidiary","SUBSIDIARY","created_by","accountClassUpdate","updated_by","accountClass","type","String","enum","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newAccountClass","set","plugin","mongoose_csv","AccountClass","model","insertMany","accountClassTable","accountHeadingCreate","heading","account_class_id","amount","number","opening_balance","bank_account_id","accountHeadingUpdate","accountHeading","Number","newAccountHeading","AccountHeading","accountHeadingTable","accountPostingCreate","transaction_date","date","transaction_code","transaction_details","object","posting_type","account_heading_id","accountPostingUpdate","accountPosting","Date","comment","newAccountPostingSchema","AccountPosting"],"mappings":"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","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE, SUBSIDIARY, ACCOUNT_CLASS_TYPE, ACCOUNT_CLASS_CATEGORY } from \"../../../constants\";\nimport { accountClassTable, accountHeadingTable } from \"./table\";\nimport Staff from \"../staff/model\";\nimport BankAccount from \"../bank-account/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const accountClassCreate = {\n    code: Joi.string().trim().required(),\n    name: Joi.string().trim().optional(),\n    description: Joi.string().optional(),\n    category: Joi.string().valid(Object.values(ACCOUNT_CLASS_CATEGORY)).required(),\n    class_type: Joi.string().valid(Object.values(ACCOUNT_CLASS_TYPE)).required(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).required(),\n    created_by: Joi.string().required(),\n};\n\nexport const accountClassUpdate = {\n    code: Joi.string().trim().optional(),\n    name: Joi.string().trim().optional(),\n    description: Joi.string().optional(),\n    category: Joi.string().valid(Object.values(ACCOUNT_CLASS_CATEGORY)).optional(),\n    class_type: Joi.string().valid(Object.values(ACCOUNT_CLASS_TYPE)).optional(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\n    updated_by: Joi.string().required(),\n};\n\n/**\n * @author 4Dcoder\n * @property {OBJECTID} id bank primaryKey\n * @property {String} code AccountClass code (required)\n * @property {String} name AccountClass name\n * @property {String} description AccountClass description\n * @property {String} category AccountClass category (required)\n * @property {String} class_type AccountClass type (required)\n * @property {String} subsidiary AccountClass subsidiary (required)\n * @description AccountClass model holds record of all Accounting Classification\n */\n\nexport const accountClass = {\n    code: { type: String, required: [true, \"Why no input?\"] },\n    name: { type: String },\n    description: { type: String },\n    category: { type: String, enum: (Object.values(ACCOUNT_CLASS_CATEGORY)) },\n    class_type: { type: String, enum: (Object.values(ACCOUNT_CLASS_TYPE)) },\n    subsidiary: { type: String, enum: (Object.values(SUBSIDIARY)), required: [true, \"Why no input?\"] },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newAccountClass = new Schema(accountClass, options);\nnewAccountClass.set(\"collection\", \"account_class\");\nnewAccountClass.plugin(mongoose_csv);\n\nconst AccountClass = mongoose.model(\"AccountClass\", newAccountClass);\nif (preload) { AccountClass.insertMany(accountClassTable); }\n\n//* ============ACCOUNT HEADING ==============\n\nexport const accountHeadingCreate = {\n    code: Joi.string().trim().optional(),\n    heading: Joi.string().optional(),\n    account_class_id: Joi.string().required(),\n    description: Joi.string().optional(),\n    amount: Joi.number().optional(),\n    opening_balance: Joi.number().optional(),\n    bank_account_id: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const accountHeadingUpdate = {\n    code: Joi.string().trim().optional(),\n    heading: Joi.string().optional(),\n    account_class_id: Joi.string().required(),\n    description: Joi.string().optional(),\n    amount: Joi.number().optional(),\n    opening_balance: Joi.number().optional(),\n    bank_account_id: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\n/**\n * @author 4Dcoder\n * @property {ObjectId} id bank primaryKey\n * @property {String} code Account-Heading code\n * @property {String} heading Account-Heading heading\n * @property {ObjectId} account_class_id Account-Heading account_class_id\n * @property {String} description Account-Heading description\n * @property {Number} amount Account-Heading amount\n * @property {Number} opening_balance Account-Heading opening_balance\n * @property {ObjectId} bank_account_id Account-Heading bank_account_id\n * @description AccountHeading model holds record of all Accounting Heading\n */\n\nexport const accountHeading = {\n    account_class_id: { type: ObjectId, ref: \"AccountClass\", required: true },\n    code: { type: String },\n    heading: { type: String },\n    description: { type: String },\n    amount: { type: Number },\n    opening_balance: { type: Number },\n    bank_account_id: { type: ObjectId, ref: \"BankAccount\", required: true },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst newAccountHeading = new Schema(accountHeading, options);\nnewAccountHeading.set(\"collection\", \"account_heading\");\nnewAccountHeading.plugin(mongoose_csv);\n\nconst AccountHeading = mongoose.model(\"AccountHeading\", newAccountHeading);\nif (preload) { AccountHeading.insertMany(accountHeadingTable); }\n\n//* ============ACCOUNT POSTING ==============\n\nexport const accountPostingCreate = {\n    code: Joi.string().optional(),\n    amount: Joi.number().optional(),\n    description: Joi.string().optional(),\n    transaction_date: Joi.date().optional(),\n    transaction_code: Joi.string().optional(),\n    transaction_details: Joi.object().optional(),\n    posting_type: Joi.string().valid(\"DEBIT\", \"CREDIT\").optional(),\n    category: Joi.string().valid(\"INCOME\", \"EXPENSES\").optional(),\n    account_heading_id: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const accountPostingUpdate = {\n    code: Joi.string().optional(),\n    amount: Joi.number().optional(),\n    description: Joi.string().optional(),\n    transaction_date: Joi.date().optional(),\n    transaction_code: Joi.string().optional(),\n    transaction_details: Joi.object().optional(),\n    posting_type: Joi.string().valid(\"DEBIT\", \"CREDIT\").optional(),\n    category: Joi.string().valid(\"INCOME\", \"EXPENSES\").optional(),\n    account_heading_id: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\n/**\n * @author 4Dcoder\n * @property {ObjectId} id AccountPosting primaryKey\n * @property {String} code AccountPosting accounting code\n * @property {Number} amount AccountPosting amount of money in Naira\n * @property {String} description AccountPosting description\n * @property {Date} transaction_date AccountPosting date of transaction\n * @property {String} transaction_code AccountPosting transaction event TnxRef\n * @property {Object} transaction_details AccountPosting transaction object details\n * @property {String} posting_type AccountPosting posting_type \"DEBIT|CREDIT\"\n * @property {String} category AccountPosting category \"INCOME|EXPENSES\"\n * @property {ObjectId} account_heading_id AccountPosting AccountHeading ObjectId\n * @description AccountPosting model holds record of transactions posting into the General Ledger\n */\nexport const accountPosting = {\n    code: { type: String, required: true },\n    amount: { type: Number, required: true },\n    description: { type: String },\n    transaction_date: { type: Date, required: true },\n    transaction_code: { type: String, comment: \"Trans Ref\" },\n    transaction_details: { type: {} },\n    posting_type: { type: String, enum: (\"DEBIT\", \"CREDIT\") },\n    category: { type: String, enum: (\"INCOME\", \"EXPENSES\") },\n    account_heading_id: { type: ObjectId, ref: \"AccountHeading\" },\n    created_by: { type: ObjectId, required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst newAccountPostingSchema = new Schema(accountPosting, options);\nnewAccountPostingSchema.set(\"collection\", \"account_posting\");\nconst AccountPosting = mongoose.model(\"AccountPosting\", newAccountPostingSchema);\n\nexport { AccountClass, AccountHeading, AccountPosting };\n"]}