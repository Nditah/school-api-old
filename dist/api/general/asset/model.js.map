{"version":3,"sources":["../../../../src/api/general/asset/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","name","Joi","string","optional","type","value","created_by","required","schemaUpdate","updated_by","schema","String","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","Asset","model","insertMany","table"],"mappings":";;;;;;;AASA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;AAXA;AACA;;;;;;;;IAgBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,UAAMC,cAAIC,MAAJ,GAAaC,QAAb,EADkB;AAExBC,UAAMH,cAAIC,MAAJ,GAAaC,QAAb,EAFkB;AAGxBE,WAAOJ,cAAIC,MAAJ,GAAaC,QAAb,EAHiB;AAIxBG,gBAAYL,cAAIC,MAAJ,GAAaK,QAAb;AAJY,CAArB;;AAOA,IAAMC,sCAAe;AACxBR,UAAMC,cAAIC,MAAJ,GAAaC,QAAb,EADkB;AAExBC,UAAMH,cAAIC,MAAJ,GAAaC,QAAb,EAFkB;AAGxBE,WAAOJ,cAAIC,MAAJ,GAAaC,QAAb,EAHiB;AAIxBM,gBAAYR,cAAIC,MAAJ,GAAaK,QAAb;AAJY,CAArB;;AAOA,IAAMG,0BAAS;AAClBV,UAAM,EAAEI,MAAMO,MAAR,EADY;AAElBP,UAAM,EAAEA,MAAMO,MAAR,EAFY;AAGlBN,WAAO,EAAED,MAAMO,MAAR,EAHW;AAIlBL,gBAAY,EAAEF,MAAMP,QAAR,EAAkBe,KAAK,OAAvB,EAAgCL,UAAU,IAA1C,EAJM;AAKlBE,gBAAY,EAAEL,MAAMP,QAAR,EAAkBe,KAAK,OAAvB;AALM,CAAf;;AAQP,IAAMC,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAIxB,MAAJ,CAAWe,MAAX,EAAmBO,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,OAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,QAAQ3B,mBAAS4B,KAAT,CAAe,OAAf,EAAwBL,SAAxB,CAAd;AACA,IAAIN,OAAJ,EAAa;AAAEU,UAAME,UAAN,CAAiBC,eAAjB;AAA0B;;kBAE1BH,K","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\r\n/**\r\n * @author 4Dcoder\r\n * @property {ObjectId} id Asset primaryKey\r\n * @property {String} name Asset name\r\n * @property {String} type Asset type or model\r\n * @property {String} value Asset value\r\n * @description Asset model holds record of all Inventories except vehicles\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport table from \"./table\";\r\nimport Staff from \"../staff/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    name: Joi.string().optional(),\r\n    type: Joi.string().optional(),\r\n    value: Joi.string().optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    name: Joi.string().optional(),\r\n    type: Joi.string().optional(),\r\n    value: Joi.string().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    name: { type: String },\r\n    type: { type: String },\r\n    value: { type: String },\r\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"asset\");\r\nnewSchema.plugin(mongoose_csv);\r\n\r\nconst Asset = mongoose.model(\"Asset\", newSchema);\r\nif (preload) { Asset.insertMany(table); }\r\n\r\nexport default Asset;\r\n"]}