{"version":3,"sources":["../../../../src/api/general/asset/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","name","Joi","string","optional","type","value","created_by","required","schemaUpdate","updated_by","schema","String","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","Asset","model","insertMany","table"],"mappings":";;;;;;;AASA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;AAXA;AACA;;;;;;;;IAgBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,UAAMC,cAAIC,MAAJ,GAAaC,QAAb,EADkB;AAExBC,UAAMH,cAAIC,MAAJ,GAAaC,QAAb,EAFkB;AAGxBE,WAAOJ,cAAIC,MAAJ,GAAaC,QAAb,EAHiB;AAIxBG,gBAAYL,cAAIC,MAAJ,GAAaK,QAAb;AAJY,CAArB;;AAOA,IAAMC,sCAAe;AACxBR,UAAMC,cAAIC,MAAJ,GAAaC,QAAb,EADkB;AAExBC,UAAMH,cAAIC,MAAJ,GAAaC,QAAb,EAFkB;AAGxBE,WAAOJ,cAAIC,MAAJ,GAAaC,QAAb,EAHiB;AAIxBM,gBAAYR,cAAIC,MAAJ,GAAaK,QAAb;AAJY,CAArB;;AAOA,IAAMG,0BAAS;AAClBV,UAAM,EAAEI,MAAMO,MAAR,EADY;AAElBP,UAAM,EAAEA,MAAMO,MAAR,EAFY;AAGlBN,WAAO,EAAED,MAAMO,MAAR,EAHW;AAIlBL,gBAAY,EAAEF,MAAMP,QAAR,EAAkBe,KAAK,OAAvB,EAAgCL,UAAU,IAA1C,EAJM;AAKlBE,gBAAY,EAAEL,MAAMP,QAAR,EAAkBe,KAAK,OAAvB;AALM,CAAf;;AAQP,IAAMC,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAIxB,MAAJ,CAAWe,MAAX,EAAmBO,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,OAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,QAAQ3B,mBAAS4B,KAAT,CAAe,OAAf,EAAwBL,SAAxB,CAAd;AACA,IAAIN,OAAJ,EAAa;AAAEU,UAAME,UAAN,CAAiBC,eAAjB;AAA0B;;kBAE1BH,K","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Dcoder\n * @property {ObjectId} id Asset primaryKey\n * @property {String} name Asset name\n * @property {String} type Asset type or model\n * @property {String} value Asset value\n * @description Asset model holds record of all Inventories except vehicles\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport table from \"./table\";\nimport Staff from \"../staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    name: Joi.string().optional(),\n    type: Joi.string().optional(),\n    value: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    name: Joi.string().optional(),\n    type: Joi.string().optional(),\n    value: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    name: { type: String },\n    type: { type: String },\n    value: { type: String },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"asset\");\nnewSchema.plugin(mongoose_csv);\n\nconst Asset = mongoose.model(\"Asset\", newSchema);\nif (preload) { Asset.insertMany(table); }\n\nexport default Asset;\n"]}