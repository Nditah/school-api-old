{"version":3,"sources":["../../../../src/api/general/asset/routes.js"],"names":["express","checkAuth","isValidStaff","fetchRecord","createRecord","updateRecord","deleteRecord","router","Router","get","post","put","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,mCAAxC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkDC,YAAlD,QAAsE,cAAtE;;AAEA,MAAMC,SAASP,QAAQQ,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAD,OAAOE,GAAP,CAAW,SAAX,EAAsB,CAACR,SAAD,EAAYC,YAAZ,CAAtB,EAAiDC,WAAjD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCAI,OAAOG,IAAP,CAAY,SAAZ,EAAuB,CAACT,SAAD,EAAYC,YAAZ,CAAvB,EAAkDE,YAAlD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCAG,OAAOI,GAAP,CAAW,mBAAX,EAAgC,CAACV,SAAD,EAAYC,YAAZ,CAAhC,EAA2DG,YAA3D;;AAEA;;;;;;;;;;AAUAE,OAAOK,MAAP,CAAc,mBAAd,EAAmC,CAACX,SAAD,EAAYC,YAAZ,CAAnC,EAA8DI,YAA9D;;AAEA,eAAeC,MAAf","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/assets?id={recordId} Retrieve Asset records\n * @apiName RetrieveAsset\n * @apiGroup Asset\n * @apiHeader {String} Authorization Bearer token\n* @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/assets\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/assets\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/assets Create an Asset record\n * @apiName CreateAsset\n * @apiGroup Asset\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} label Asset label or barcode tag\n * @apiParam {String} serial Asset serial\n * @apiParam {String} name Asset name\n * @apiParam {String} type Asset type or model\n * @apiParam {String} make Asset make or manufacturer\n * @apiParam {String} measure Asset measure\n * @apiParam {ObjectId} category_id Asset category_id\n * @apiParam {String} description Asset description\n * @apiParam {ObjectId} terminal_id Asset terminal_id\n * @apiParam {String} subsidiary Asset subsidiary\n * @apiParam {String} location Asset location\n * @apiParam {String} is_consumable Asset is_consumable\n * @apiParam {String} usability Asset usability \"DUTY|SCRAP|SHOP|SOLD|DISPOSED\"\n * @apiParam {String} worth Asset worth \"APPRECIATE|DEPRECIATE\"\n * @apiParam {ObjectId} staff_id Asset custodian staff ObjectId\n * @apiParam {Date} launch_date Asset launch_date\n * @apiParam {Date} expire_date Asset expire_date\n * @apiParam {ObjectId} purchase_id Asset purchase_id\n * @apiParam {Number} opening_value Asset opening_value\n * @apiParam {Number} closing_value Asset closing_value\n * @apiParam {Number} salvage_value Asset salvage_value\n * @apiParam {Number} current_value Asset current_value\n * @apiParam {String} photo Asset photo\n * @apiParam {Number} lifespan Asset lifespan in Years\n * @apiParam {Number} total_depreciable_cost Asset total_depreciable_cost\n * @apiParam {Number} depreciation_rate Asset depreciation_rate\n * @apiParam {Number} depreciation_expense Asset depreciation_expense\n * @apiParam {Number} accumulated_depreciation Asset accumulated_depreciation\n * @apiSuccess {Object} Asset Asset's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Asset not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/assets\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/assets/{recordId} Update an Asset record\n * @apiName UpdateAsset\n * @apiGroup Asset\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {String} label Asset label or barcode tag\n * @apiParam {String} serial Asset serial\n * @apiParam {String} name Asset name\n * @apiParam {String} type Asset type or model\n * @apiParam {String} make Asset make or manufacturer\n * @apiParam {String} measure Asset measure\n * @apiParam {ObjectId} category_id Asset category_id\n * @apiParam {String} description Asset description\n * @apiParam {ObjectId} terminal_id Asset terminal_id\n * @apiParam {String} subsidiary Asset subsidiary\n * @apiParam {String} location Asset location\n * @apiParam {String} is_consumable Asset is_consumable\n * @apiParam {String} usability Asset usability \"DUTY|SCRAP|SHOP|SOLD|DISPOSED\"\n * @apiParam {String} worth Asset worth \"APPRECIATE|DEPRECIATE\"\n * @apiParam {ObjectId} staff_id Asset custodian staff ObjectId\n * @apiParam {Date} launch_date Asset launch_date\n * @apiParam {Date} expire_date Asset expire_date\n * @apiParam {ObjectId} purchase_id Asset purchase_id\n * @apiParam {Number} opening_value Asset opening_value\n * @apiParam {Number} closing_value Asset closing_value\n * @apiParam {Number} salvage_value Asset salvage_value\n * @apiParam {Number} current_value Asset current_value\n * @apiParam {String} photo Asset photo\n * @apiParam {Number} lifespan Asset lifespan in Years\n * @apiParam {Number} total_depreciable_cost Asset total_depreciable_cost\n * @apiParam {Number} depreciation_rate Asset depreciation_rate\n * @apiParam {Number} depreciation_expense Asset depreciation_expense\n * @apiParam {Number} accumulated_depreciation Asset accumulated_depreciation\n * @apiSuccess {Object} Asset Asset's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Asset not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/assets/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/assets/{recordId} Delete an Asset record\n * @apiName DeleteAsset\n * @apiGroup Asset\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Asset not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/assets/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}