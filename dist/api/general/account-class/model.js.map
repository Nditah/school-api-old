{"version":3,"sources":["../../../../src/api/general/account-class/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","code","Joi","string","trim","required","name","optional","description","category","valid","Object","values","ACCOUNT_CLASS_CATEGORY","class_type","ACCOUNT_CLASS_TYPE","subsidiary","SUBSIDIARY","created_by","schemaUpdate","updated_by","schema","type","String","enum","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","AccountClass","model","insertMany","table"],"mappings":";;;;;;;AAYA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;AAdA;AACA;;;;;;;;;;;IAmBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADkB;AAExBC,UAAMJ,cAAIC,MAAJ,GAAaC,IAAb,GAAoBG,QAApB,EAFkB;AAGxBC,iBAAaN,cAAIC,MAAJ,GAAaI,QAAb,EAHW;AAIxBE,cAAUP,cAAIC,MAAJ,GAAaO,KAAb,CAAmBC,OAAOC,MAAP,CAAcC,iCAAd,CAAnB,EAA0DR,QAA1D,EAJc;AAKxBS,gBAAYZ,cAAIC,MAAJ,GAAaO,KAAb,CAAmBC,OAAOC,MAAP,CAAcG,6BAAd,CAAnB,EAAsDV,QAAtD,EALY;AAMxBW,gBAAYd,cAAIC,MAAJ,GAAaO,KAAb,CAAmBC,OAAOC,MAAP,CAAcK,qBAAd,CAAnB,EAA8CZ,QAA9C,EANY;AAOxBa,gBAAYhB,cAAIC,MAAJ,GAAaE,QAAb;AAPY,CAArB;;AAUA,IAAMc,sCAAe;AACxBlB,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBG,QAApB,EADkB;AAExBD,UAAMJ,cAAIC,MAAJ,GAAaC,IAAb,GAAoBG,QAApB,EAFkB;AAGxBC,iBAAaN,cAAIC,MAAJ,GAAaI,QAAb,EAHW;AAIxBE,cAAUP,cAAIC,MAAJ,GAAaO,KAAb,CAAmBC,OAAOC,MAAP,CAAcC,iCAAd,CAAnB,EAA0DN,QAA1D,EAJc;AAKxBO,gBAAYZ,cAAIC,MAAJ,GAAaO,KAAb,CAAmBC,OAAOC,MAAP,CAAcG,6BAAd,CAAnB,EAAsDR,QAAtD,EALY;AAMxBS,gBAAYd,cAAIC,MAAJ,GAAaO,KAAb,CAAmBC,OAAOC,MAAP,CAAcK,qBAAd,CAAnB,EAA8CV,QAA9C,EANY;AAOxBa,gBAAYlB,cAAIC,MAAJ,GAAaE,QAAb;AAPY,CAArB;;AAUA,IAAMgB,0BAAS;AAClBpB,UAAM,EAAEqB,MAAMC,MAAR,EAAgBlB,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EADY;AAElBC,UAAM,EAAEgB,MAAMC,MAAR,EAFY;AAGlBf,iBAAa,EAAEc,MAAMC,MAAR,EAHK;AAIlBd,cAAU,EAAEa,MAAMC,MAAR,EAAgBC,MAAOb,OAAOC,MAAP,CAAcC,iCAAd,CAAvB,EAJQ;AAKlBC,gBAAY,EAAEQ,MAAMC,MAAR,EAAgBC,MAAOb,OAAOC,MAAP,CAAcG,6BAAd,CAAvB,EALM;AAMlBC,gBAAY,EAAEM,MAAMC,MAAR,EAAgBC,MAAOb,OAAOC,MAAP,CAAcK,qBAAd,CAAvB,EAAmDZ,UAAU,CAAC,IAAD,EAAO,eAAP,CAA7D,EANM;AAOlBa,gBAAY,EAAEI,MAAMxB,QAAR,EAAkB2B,KAAK,OAAvB,EAAgCpB,UAAU,IAA1C,EAPM;AAQlBe,gBAAY,EAAEE,MAAMxB,QAAR,EAAkB2B,KAAK,OAAvB;AARM,CAAf;;AAWP,IAAMC,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAIpC,MAAJ,CAAWyB,MAAX,EAAmBS,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,eAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,eAAevC,mBAASwC,KAAT,CAAe,cAAf,EAA+BL,SAA/B,CAArB;AACA,IAAIN,OAAJ,EAAa;AAAEU,iBAAaE,UAAb,CAAwBC,eAAxB;AAAiC;;kBAEjCH,Y","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Dcoder\n * @property {OBJECTID} id bank primaryKey\n * @property {String} code AccountClass code (required)\n * @property {String} name AccountClass name\n * @property {String} description AccountClass description\n * @property {String} category AccountClass category (required)\n * @property {String} class_type AccountClass type (required)\n * @property {String} subsidiary AccountClass subsidiary (required)\n * @description AccountClass model holds record of all Accounting Classification\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE, SUBSIDIARY, ACCOUNT_CLASS_TYPE, ACCOUNT_CLASS_CATEGORY } from \"../../../constants\";\nimport table from \"./table\";\nimport Staff from \"../staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    code: Joi.string().trim().required(),\n    name: Joi.string().trim().optional(),\n    description: Joi.string().optional(),\n    category: Joi.string().valid(Object.values(ACCOUNT_CLASS_CATEGORY)).required(),\n    class_type: Joi.string().valid(Object.values(ACCOUNT_CLASS_TYPE)).required(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).required(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    code: Joi.string().trim().optional(),\n    name: Joi.string().trim().optional(),\n    description: Joi.string().optional(),\n    category: Joi.string().valid(Object.values(ACCOUNT_CLASS_CATEGORY)).optional(),\n    class_type: Joi.string().valid(Object.values(ACCOUNT_CLASS_TYPE)).optional(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    code: { type: String, required: [true, \"Why no input?\"] },\n    name: { type: String },\n    description: { type: String },\n    category: { type: String, enum: (Object.values(ACCOUNT_CLASS_CATEGORY)) },\n    class_type: { type: String, enum: (Object.values(ACCOUNT_CLASS_TYPE)) },\n    subsidiary: { type: String, enum: (Object.values(SUBSIDIARY)), required: [true, \"Why no input?\"] },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"account_class\");\nnewSchema.plugin(mongoose_csv);\n\nconst AccountClass = mongoose.model(\"AccountClass\", newSchema);\nif (preload) { AccountClass.insertMany(table); }\n\nexport default AccountClass;\n"]}