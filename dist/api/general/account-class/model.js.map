{"version":3,"sources":["../../../../src/api/general/account-class/model.js"],"names":["Joi","mongoose","mongoose_csv","DATABASE","SUBSIDIARY","ACCOUNT_CLASS_TYPE","ACCOUNT_CLASS_CATEGORY","table","Staff","Schema","ObjectId","Types","schemaCreate","code","string","trim","required","name","optional","description","category","valid","Object","values","class_type","subsidiary","created_by","schemaUpdate","updated_by","schema","type","String","enum","ref","preload","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","AccountClass","model","insertMany"],"mappings":"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","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Dcoder\n * @property {OBJECTID} id bank primaryKey\n * @property {String} code AccountClass code (required)\n * @property {String} name AccountClass name\n * @property {String} description AccountClass description\n * @property {String} category AccountClass category (required)\n * @property {String} class_type AccountClass type (required)\n * @property {String} subsidiary AccountClass subsidiary (required)\n * @description AccountClass model holds record of all Accounting Classification\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE, SUBSIDIARY, ACCOUNT_CLASS_TYPE, ACCOUNT_CLASS_CATEGORY } from \"../../../constants\";\nimport table from \"./table\";\nimport Staff from \"../staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    code: Joi.string().trim().required(),\n    name: Joi.string().trim().optional(),\n    description: Joi.string().optional(),\n    category: Joi.string().valid(Object.values(ACCOUNT_CLASS_CATEGORY)).required(),\n    class_type: Joi.string().valid(Object.values(ACCOUNT_CLASS_TYPE)).required(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).required(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    code: Joi.string().trim().optional(),\n    name: Joi.string().trim().optional(),\n    description: Joi.string().optional(),\n    category: Joi.string().valid(Object.values(ACCOUNT_CLASS_CATEGORY)).optional(),\n    class_type: Joi.string().valid(Object.values(ACCOUNT_CLASS_TYPE)).optional(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    code: { type: String, required: [true, \"Why no input?\"] },\n    name: { type: String },\n    description: { type: String },\n    category: { type: String, enum: (Object.values(ACCOUNT_CLASS_CATEGORY)) },\n    class_type: { type: String, enum: (Object.values(ACCOUNT_CLASS_TYPE)) },\n    subsidiary: { type: String, enum: (Object.values(SUBSIDIARY)), required: [true, \"Why no input?\"] },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"account_class\");\nnewSchema.plugin(mongoose_csv);\n\nconst AccountClass = mongoose.model(\"AccountClass\", newSchema);\nif (preload) { AccountClass.insertMany(table); }\n\nexport default AccountClass;\n"]}