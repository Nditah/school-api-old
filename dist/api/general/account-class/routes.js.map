{"version":3,"sources":["../../../../src/api/general/account-class/routes.js"],"names":["express","checkAuth","isValidStaff","fetchRecord","createRecord","updateRecord","deleteRecord","router","Router","get","post","put","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,mCAAxC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkDC,YAAlD,QAAsE,cAAtE;;AAEA,MAAMC,SAASP,QAAQQ,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAD,OAAOE,GAAP,CAAW,kBAAX,EAA+B,CAACR,SAAD,EAAYC,YAAZ,CAA/B,EAA0DC,WAA1D;;AAEA;;;;;;;;;;;;;;;;AAgBAI,OAAOG,IAAP,CAAY,kBAAZ,EAAgC,CAACT,SAAD,EAAYC,YAAZ,CAAhC,EAA2DE,YAA3D;;AAEA;;;;;;;;;;;;;;;;;AAiBAG,OAAOI,GAAP,CAAW,4BAAX,EAAyC,CAACV,SAAD,EAAYC,YAAZ,CAAzC,EAAoEG,YAApE;;AAEA;;;;;;;;;;AAUAE,OAAOK,MAAP,CAAc,4BAAd,EAA4C,CAACX,SAAD,EAAYC,YAAZ,CAA5C,EAAuEI,YAAvE;;AAEA,eAAeC,MAAf","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/account-classes?id={recordId} Retrieve one or all records\n * @apiName RetrieveAccountClasss\n * @apiGroup AccountClass\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/account-classes?\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account classifications\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/account-classes\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/account-classes Create account-classes\n * @apiName CreateAccountClass\n * @apiGroup AccountClass\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} code AccountClass code (required)\n * @apiParam {String} name AccountClass name\n * @apiParam {String} description AccountClass description\n * @apiParam {String} category AccountClass category (required)\n * @apiParam {String} class_type AccountClass type (required)\n * @apiParam {String} subsidiary AccountClass subsidiary (required)\n * @apiSuccess {Object} AccountClass AccountClass's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 AccountClass not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/account-classes\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/account-classes/{recordId} Update account-classes\n * @apiName UpdateAccountClass\n * @apiGroup AccountClass\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId\n * @apiParam {String} code AccountClass code (required)\n * @apiParam {String} name AccountClass name\n * @apiParam {String} description AccountClass description\n * @apiParam {String} category AccountClass category (required)\n * @apiParam {String} class_type AccountClass type (required)\n * @apiParam {String} subsidiary AccountClass subsidiary (required)\n * @apiSuccess {Object} AccountClass AccountClass's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 AccountClass not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/account-classes/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/account-classes/{recordId} Delete account-classes\n * @apiName DeleteAccountClass\n * @apiGroup AccountClass\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 AccountClass not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/account-classes/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}