{"version":3,"sources":["../../../../src/api/general/account-class/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,kBAAX,EAA+B,CAACC,wBAAD,EAAYC,2BAAZ,CAA/B,EAA0DC,uBAA1D;;AAEA;;;;;;;;;;;;;;;;AAgBAN,OAAOO,IAAP,CAAY,kBAAZ,EAAgC,CAACH,wBAAD,EAAYC,2BAAZ,CAAhC,EAA2DG,wBAA3D;;AAEA;;;;;;;;;;;;;;;;;AAiBAR,OAAOS,GAAP,CAAW,4BAAX,EAAyC,CAACL,wBAAD,EAAYC,2BAAZ,CAAzC,EAAoEK,wBAApE;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,4BAAd,EAA4C,CAACP,wBAAD,EAAYC,2BAAZ,CAA5C,EAAuEO,wBAAvE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/account-classes?id={recordId} Retrieve one or all records\n * @apiName RetrieveAccountClasss\n * @apiGroup AccountClass\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/account-classes?\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account classifications\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/account-classes\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/v1/account-classes Create account-classes\n * @apiName CreateAccountClass\n * @apiGroup AccountClass\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} code AccountClass code (required)\n * @apiParam {String} name AccountClass name\n * @apiParam {String} description AccountClass description\n * @apiParam {String} category AccountClass category (required)\n * @apiParam {String} class_type AccountClass type (required)\n * @apiParam {String} subsidiary AccountClass subsidiary (required)\n * @apiSuccess {Object} AccountClass AccountClass's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 AccountClass not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/account-classes\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/account-classes/{recordId} Update account-classes\n * @apiName UpdateAccountClass\n * @apiGroup AccountClass\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId\n * @apiParam {String} code AccountClass code (required)\n * @apiParam {String} name AccountClass name\n * @apiParam {String} description AccountClass description\n * @apiParam {String} category AccountClass category (required)\n * @apiParam {String} class_type AccountClass type (required)\n * @apiParam {String} subsidiary AccountClass subsidiary (required)\n * @apiSuccess {Object} AccountClass AccountClass's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 AccountClass not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/account-classes/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/account-classes/{recordId} Delete account-classes\n * @apiName DeleteAccountClass\n * @apiGroup AccountClass\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 AccountClass not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/account-classes/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}