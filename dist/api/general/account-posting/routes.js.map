{"version":3,"sources":["../../../../src/api/general/account-posting/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,kBAAX,EAA+B,CAACC,wBAAD,EAAYC,2BAAZ,CAA/B,EAA0DC,uBAA1D;;AAEA;;;;;;;;;;;;;;;;;;;AAmBAN,OAAOO,IAAP,CAAY,kBAAZ,EAAgC,CAACH,wBAAD,EAAYC,2BAAZ,CAAhC,EAA2DG,wBAA3D;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBAR,OAAOS,GAAP,CAAW,4BAAX,EAAyC,CAACL,wBAAD,EAAYC,2BAAZ,CAAzC,EAAoEK,wBAApE;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,4BAAd,EAA4C,CAACP,wBAAD,EAAYC,2BAAZ,CAA5C,EAAuEO,wBAAvE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/account-posting?id={recordId} Retrieve one or all records\n * @apiName RetrieveAccountPosting\n * @apiGroup AccountPosting\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/account-posting?\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/account-posting\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/v1/account-posting Create account-posting\n * @apiName CreateAccountPosting\n * @apiGroup AccountPosting\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} code AccountPosting accounting code\n * @apiParam {Number} amount AccountPosting amount of money in Naira\n * @apiParam {String} description AccountPosting description\n * @apiParam {Date} transaction_date AccountPosting date of transaction\n * @apiParam {String} transaction_code AccountPosting transaction event TnxRef\n * @apiParam {Object} transaction_details AccountPosting transaction object details\n * @apiParam {String} posting_type AccountPosting posting_type \"DEBIT|CREDIT\"\n * @apiParam {String} category AccountPosting category \"INCOME|EXPENSES\"\n * @apiParam {ObjectId} account_heading_id AccountPosting AccountHeading ObjectId\n * @apiSuccess {Object} AccountPosting AccountPosting's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 AccountPosting not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/account-posting\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/account-posting/{recordId} Update account-posting\n * @apiName UpdateAccountPosting\n * @apiGroup AccountPosting\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId\n * @apiParam {String} code AccountPosting accounting code\n * @apiParam {Number} amount AccountPosting amount of money in Naira\n * @apiParam {String} description AccountPosting description\n * @apiParam {Date} transaction_date AccountPosting date of transaction\n * @apiParam {String} transaction_code AccountPosting transaction event TnxRef\n * @apiParam {Object} transaction_details AccountPosting transaction object details\n * @apiParam {String} posting_type AccountPosting posting_type \"DEBIT|CREDIT\"\n * @apiParam {String} category AccountPosting category \"INCOME|EXPENSES\"\n * @apiParam {ObjectId} account_heading_id AccountPosting AccountHeading ObjectId\n * @apiSuccess {Object} AccountPosting AccountPosting's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 AccountPosting not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/account-posting/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/account-posting/{recordId} Delete account-posting\n * @apiName DeleteAccountPosting\n * @apiGroup AccountPosting\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 AccountPosting not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/account-posting/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}