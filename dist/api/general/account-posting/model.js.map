{"version":3,"sources":["../../../../src/api/general/account-posting/model.js"],"names":["Joi","mongoose","mongoose_csv","DATABASE","Staff","AccountHeading","Schema","ObjectId","Types","schemaCreate","code","string","optional","amount","number","description","transaction_date","date","transaction_code","transaction_details","object","posting_type","valid","category","account_heading_id","created_by","required","schemaUpdate","updated_by","schema","type","String","Number","Date","comment","enum","ref","preload","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","AccountPosting","model"],"mappings":"AAAA;;;;;;;;;;;;;;AAcA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;AAEA,MAAM,EAAEC,MAAF,KAAaL,QAAnB;AACA,MAAM,EAAEM,QAAF,KAAeD,OAAOE,KAA5B;;AAEA,OAAO,MAAMC,eAAe;AACxBC,UAAMV,IAAIW,MAAJ,GAAaC,QAAb,EADkB;AAExBC,YAAQb,IAAIc,MAAJ,GAAaF,QAAb,EAFgB;AAGxBG,iBAAaf,IAAIW,MAAJ,GAAaC,QAAb,EAHW;AAIxBI,sBAAkBhB,IAAIiB,IAAJ,GAAWL,QAAX,EAJM;AAKxBM,sBAAkBlB,IAAIW,MAAJ,GAAaC,QAAb,EALM;AAMxBO,yBAAqBnB,IAAIoB,MAAJ,GAAaR,QAAb,EANG;AAOxBS,kBAAcrB,IAAIW,MAAJ,GAAaW,KAAb,CAAmB,OAAnB,EAA4B,QAA5B,EAAsCV,QAAtC,EAPU;AAQxBW,cAAUvB,IAAIW,MAAJ,GAAaW,KAAb,CAAmB,QAAnB,EAA6B,UAA7B,EAAyCV,QAAzC,EARc;AASxBY,wBAAoBxB,IAAIW,MAAJ,GAAaC,QAAb,EATI;AAUxBa,gBAAYzB,IAAIW,MAAJ,GAAae,QAAb;AAVY,CAArB;;AAaP,OAAO,MAAMC,eAAe;AACxBjB,UAAMV,IAAIW,MAAJ,GAAaC,QAAb,EADkB;AAExBC,YAAQb,IAAIc,MAAJ,GAAaF,QAAb,EAFgB;AAGxBG,iBAAaf,IAAIW,MAAJ,GAAaC,QAAb,EAHW;AAIxBI,sBAAkBhB,IAAIiB,IAAJ,GAAWL,QAAX,EAJM;AAKxBM,sBAAkBlB,IAAIW,MAAJ,GAAaC,QAAb,EALM;AAMxBO,yBAAqBnB,IAAIoB,MAAJ,GAAaR,QAAb,EANG;AAOxBS,kBAAcrB,IAAIW,MAAJ,GAAaW,KAAb,CAAmB,OAAnB,EAA4B,QAA5B,EAAsCV,QAAtC,EAPU;AAQxBW,cAAUvB,IAAIW,MAAJ,GAAaW,KAAb,CAAmB,QAAnB,EAA6B,UAA7B,EAAyCV,QAAzC,EARc;AASxBY,wBAAoBxB,IAAIW,MAAJ,GAAaC,QAAb,EATI;AAUxBgB,gBAAY5B,IAAIW,MAAJ,GAAae,QAAb;AAVY,CAArB;;AAaP,OAAO,MAAMG,SAAS;AAClBnB,UAAM,EAAEoB,MAAMC,MAAR,EAAgBL,UAAU,IAA1B,EADY;AAElBb,YAAQ,EAAEiB,MAAME,MAAR,EAAgBN,UAAU,IAA1B,EAFU;AAGlBX,iBAAa,EAAEe,MAAMC,MAAR,EAHK;AAIlBf,sBAAkB,EAAEc,MAAMG,IAAR,EAAcP,UAAU,IAAxB,EAJA;AAKlBR,sBAAkB,EAAEY,MAAMC,MAAR,EAAgBG,SAAS,WAAzB,EALA;AAMlBf,yBAAqB,EAAEW,MAAM,EAAR,EANH;AAOlBT,kBAAc,EAAES,MAAMC,MAAR,EAAgBI,OAAO,SAAS,QAAhB,CAAhB,EAPI;AAQlBZ,cAAU,EAAEO,MAAMC,MAAR,EAAgBI,OAAO,UAAU,UAAjB,CAAhB,EARQ;AASlBX,wBAAoB,EAAEM,MAAMvB,QAAR,EAAkB6B,KAAK,gBAAvB,EATF;AAUlBX,gBAAY,EAAEK,MAAMvB,QAAR,EAAkBmB,UAAU,IAA5B,EAVM;AAWlBE,gBAAY,EAAEE,MAAMvB,QAAR,EAAkB6B,KAAK,OAAvB;AAXM,CAAf;;AAcP,MAAMC,UAAUlC,SAASmC,kBAAT,CAA4BC,OAA5C;AACA,MAAMC,UAAUrC,SAASsC,OAAzB;;AAEA,MAAMC,YAAY,IAAIpC,MAAJ,CAAWuB,MAAX,EAAmBW,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,iBAA5B;;AAEA,MAAMC,iBAAiB3C,SAAS4C,KAAT,CAAe,gBAAf,EAAiCH,SAAjC,CAAvB;;AAEA,eAAeE,cAAf","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {ObjectId} id AccountPosting primaryKey\n * @property {String} code AccountPosting accounting code\n * @property {Number} amount AccountPosting amount of money in Naira\n * @property {String} description AccountPosting description\n * @property {Date} transaction_date AccountPosting date of transaction\n * @property {String} transaction_code AccountPosting transaction event TnxRef\n * @property {Object} transaction_details AccountPosting transaction object details\n * @property {String} posting_type AccountPosting posting_type \"DEBIT|CREDIT\"\n * @property {String} category AccountPosting category \"INCOME|EXPENSES\"\n * @property {ObjectId} account_heading_id AccountPosting AccountHeading ObjectId\n * @description AccountPosting model holds record of transactions posting into the General Ledger\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport Staff from \"../staff/model\";\nimport AccountHeading from \"../account-heading/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    code: Joi.string().optional(),\n    amount: Joi.number().optional(),\n    description: Joi.string().optional(),\n    transaction_date: Joi.date().optional(),\n    transaction_code: Joi.string().optional(),\n    transaction_details: Joi.object().optional(),\n    posting_type: Joi.string().valid(\"DEBIT\", \"CREDIT\").optional(),\n    category: Joi.string().valid(\"INCOME\", \"EXPENSES\").optional(),\n    account_heading_id: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    code: Joi.string().optional(),\n    amount: Joi.number().optional(),\n    description: Joi.string().optional(),\n    transaction_date: Joi.date().optional(),\n    transaction_code: Joi.string().optional(),\n    transaction_details: Joi.object().optional(),\n    posting_type: Joi.string().valid(\"DEBIT\", \"CREDIT\").optional(),\n    category: Joi.string().valid(\"INCOME\", \"EXPENSES\").optional(),\n    account_heading_id: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    code: { type: String, required: true },\n    amount: { type: Number, required: true },\n    description: { type: String },\n    transaction_date: { type: Date, required: true },\n    transaction_code: { type: String, comment: \"Trans Ref\" },\n    transaction_details: { type: {} },\n    posting_type: { type: String, enum: (\"DEBIT\", \"CREDIT\") },\n    category: { type: String, enum: (\"INCOME\", \"EXPENSES\") },\n    account_heading_id: { type: ObjectId, ref: \"AccountHeading\" },\n    created_by: { type: ObjectId, required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"account_posting\");\n\nconst AccountPosting = mongoose.model(\"AccountPosting\", newSchema);\n\nexport default AccountPosting;\n"]}