{"version":3,"sources":["../../../../src/api/general/account-posting/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","code","Joi","string","optional","amount","number","description","transaction_date","date","transaction_code","transaction_details","object","posting_type","valid","category","account_heading_id","created_by","required","schemaUpdate","updated_by","schema","type","String","Number","Date","comment","enum","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","AccountPosting","model"],"mappings":"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","file":"model.js","sourcesContent":["/**\r\n * @author 4Dcoder\r\n * @property {ObjectId} id AccountPosting primaryKey\r\n * @property {String} code AccountPosting accounting code\r\n * @property {Number} amount AccountPosting amount of money in Naira\r\n * @property {String} description AccountPosting description\r\n * @property {Date} transaction_date AccountPosting date of transaction\r\n * @property {String} transaction_code AccountPosting transaction event TnxRef\r\n * @property {Object} transaction_details AccountPosting transaction object details\r\n * @property {String} posting_type AccountPosting posting_type \"DEBIT|CREDIT\"\r\n * @property {String} category AccountPosting category \"INCOME|EXPENSES\"\r\n * @property {ObjectId} account_heading_id AccountPosting AccountHeading ObjectId\r\n * @description AccountPosting model holds record of transactions posting into the General Ledger\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport Staff from \"../staff/model\";\r\nimport AccountHeading from \"../account-heading/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    code: Joi.string().optional(),\r\n    amount: Joi.number().optional(),\r\n    description: Joi.string().optional(),\r\n    transaction_date: Joi.date().optional(),\r\n    transaction_code: Joi.string().optional(),\r\n    transaction_details: Joi.object().optional(),\r\n    posting_type: Joi.string().valid(\"DEBIT\", \"CREDIT\").optional(),\r\n    category: Joi.string().valid(\"INCOME\", \"EXPENSES\").optional(),\r\n    account_heading_id: Joi.string().optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    code: Joi.string().optional(),\r\n    amount: Joi.number().optional(),\r\n    description: Joi.string().optional(),\r\n    transaction_date: Joi.date().optional(),\r\n    transaction_code: Joi.string().optional(),\r\n    transaction_details: Joi.object().optional(),\r\n    posting_type: Joi.string().valid(\"DEBIT\", \"CREDIT\").optional(),\r\n    category: Joi.string().valid(\"INCOME\", \"EXPENSES\").optional(),\r\n    account_heading_id: Joi.string().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    code: { type: String, required: true },\r\n    amount: { type: Number, required: true },\r\n    description: { type: String },\r\n    transaction_date: { type: Date, required: true },\r\n    transaction_code: { type: String, comment: \"Trans Ref\" },\r\n    transaction_details: { type: {} },\r\n    posting_type: { type: String, enum: (\"DEBIT\", \"CREDIT\") },\r\n    category: { type: String, enum: (\"INCOME\", \"EXPENSES\") },\r\n    account_heading_id: { type: ObjectId, ref: \"AccountHeading\" },\r\n    created_by: { type: ObjectId, required: true },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"account_posting\");\r\n\r\nconst AccountPosting = mongoose.model(\"AccountPosting\", newSchema);\r\n\r\nexport default AccountPosting;\r\n"]}