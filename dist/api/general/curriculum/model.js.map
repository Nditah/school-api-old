{"version":3,"sources":["../../../../src/api/general/curriculum/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","description","Joi","string","optional","scheme","book","staff","materials","created_by","required","schemaUpdate","updated_by","schema","type","String","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","Curriculum","model","insertMany","table"],"mappings":";;;;;;;AASA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;IAEQA,M,GAAWC,kB,CAAXD,M;AAPR;AAXA;;;;;;;;;;IAmBQE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,iBAAaC,cAAIC,MAAJ,GAAaC,QAAb,EADW;AAExBC,YAAQH,cAAIC,MAAJ,GAAaC,QAAb,EAFgB;AAGxBE,UAAMJ,cAAIC,MAAJ,GAAaC,QAAb,EAHkB;AAIxBG,WAAOL,cAAIC,MAAJ,GAAaC,QAAb,EAJiB;AAKxBI,eAAWN,cAAIC,MAAJ,GAAaC,QAAb,EALa;AAMxBK,gBAAYP,cAAIC,MAAJ,GAAaO,QAAb;AANY,CAArB;;AASA,IAAMC,sCAAe;AACxBV,iBAAaC,cAAIC,MAAJ,GAAaC,QAAb,EADW;AAExBC,YAAQH,cAAIC,MAAJ,GAAaC,QAAb,EAFgB;AAGxBE,UAAMJ,cAAIC,MAAJ,GAAaC,QAAb,EAHkB;AAIxBI,eAAWN,cAAIC,MAAJ,GAAaC,QAAb,EAJa;AAKxBG,WAAOL,cAAIC,MAAJ,GAAaC,QAAb,EALiB;AAMxBQ,gBAAYV,cAAIC,MAAJ,GAAaO,QAAb;AANY,CAArB;;AASA,IAAMG,0BAAS;AAClBZ,iBAAa,EAAEa,MAAMC,MAAR,EAAgBL,UAAU,IAA1B,EADK;AAElBL,YAAQ,EAAES,MAAMhB,QAAR,EAFU;AAGlBQ,UAAM,EAAEQ,MAAMhB,QAAR,EAAkBkB,KAAK,MAAvB,EAHY;AAIlBR,eAAW,EAAEM,MAAMhB,QAAR,EAJO;AAKlBS,WAAO,EAAEO,MAAMhB,QAAR,EAAkBkB,KAAK,OAAvB,EAAgCN,UAAU,IAA1C,EALW;AAMlBD,gBAAY,EAAEK,MAAMhB,QAAR,EAAkBkB,KAAK,OAAvB,EAAgCN,UAAU,IAA1C,EANM;AAOlBE,gBAAY,EAAEE,MAAMhB,QAAR,EAAkBkB,KAAK,OAAvB;AAPM,CAAf;AASP,IAAMC,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAI3B,MAAJ,CAAWiB,MAAX,EAAmBQ,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,YAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,aAAa9B,mBAAS+B,KAAT,CAAe,YAAf,EAA6BL,SAA7B,CAAnB;;AAEA,IAAIN,OAAJ,EAAa;AAAEU,eAAWE,UAAX,CAAsBC,eAAtB;AAA+B;;kBAE/BH,U","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {ObjectId} id Curriculum primaryKey\n * @property {String} description Curriculum description String (required)\n * @property {String} scheme Curriculum scheme String\n * @property {ObjectId} staff Curriculum staff ObjectId\n * @property {ObjectId} book Curriculum Book ObjectId\n * @description Curriculum model holds all School curriculums\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport table from \"./table\";\nimport Staff from \"../staff/model\";\nimport Book from \"../book/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    description: Joi.string().optional(),\n    scheme: Joi.string().optional(),\n    book: Joi.string().optional(),\n    staff: Joi.string().optional(),\n    materials: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    description: Joi.string().optional(),\n    scheme: Joi.string().optional(),\n    book: Joi.string().optional(),\n    materials: Joi.string().optional(),\n    staff: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    description: { type: String, required: true },\n    scheme: { type: ObjectId },\n    book: { type: ObjectId, ref: \"Book\" },\n    materials: { type: ObjectId },\n    staff: { type: ObjectId, ref: \"Staff\", required: true },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"curriculum\");\nnewSchema.plugin(mongoose_csv);\n\nconst Curriculum = mongoose.model(\"Curriculum\", newSchema);\n\nif (preload) { Curriculum.insertMany(table); }\n\nexport default Curriculum;\n"]}