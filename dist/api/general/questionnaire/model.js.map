{"version":3,"sources":["../../../../src/api/general/questionnaire/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","code","Joi","string","required","type","valid","question","answer1","answer2","optional","answer3","answer4","answer5","correct","score","number","courses","array","created_by","schemaUpdate","updated_by","schema","String","enum","Number","default","ref","deleted","Boolean","deleted_at","Date","options","DATABASE","OPTIONS","newSchema","set","Questionnaire","model"],"mappings":"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","file":"model.js","sourcesContent":["/**\r\n * @author 4Dcoder\r\n * @property {ObjectId} id Questionnaire primaryKey\r\n * @property {String} code Questionnaire code\r\n * @property {String} type Questionnaire type \"OBJECTIVE|THEORY|SUBJECTIVE\"\r\n * @property {String} question Questionnaire question\r\n * @property {String} answer1 Questionnaire 1st optional answer\r\n * @property {String} answer2 Questionnaire 2nd optional answer\r\n * @property {String} answer3 Questionnaire 3rd optional answer\r\n * @property {String} answer4 Questionnaire 4th optional answer\r\n * @property {String} answer5 Questionnaire 5th optional answer\r\n * @property {String} correct Questionnaire correct answer(s) amongst\r\n *  \"answer1|answer2|answer3|answer4|answer5\"\r\n * @property {Number} score Questionnaire score or weight of quiz\r\n * @property {String} courses Questionnaire courses Array<Course>\r\n * @property {ObjectId} created_by Questionnaire Staff who created record\r\n * @property {ObjectId} updated_by Questionnaire Staff who updated record\r\n * @description Questionnaire holds record of all assessment quiz in the DB\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport Staff from \"../staff/model\";\r\nimport Course from \"../course/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    code: Joi.string().required(),\r\n    type: Joi.string().valid([\"OBJECTIVE\", \"THEORY\", \"SUBJECTIVE\"]).required(),\r\n    question: Joi.string().required(),\r\n    answer1: Joi.string().required(),\r\n    answer2: Joi.string().optional(),\r\n    answer3: Joi.string().optional(),\r\n    answer4: Joi.string().optional(),\r\n    answer5: Joi.string().optional(),\r\n    correct: Joi.string().valid([\"answer1\", \"answer2\", \"answer3\", \"answer4\", \"answer5\"]).required(),\r\n    score: Joi.number().optional(),\r\n    courses: Joi.array().required(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    code: Joi.string().optional(),\r\n    type: Joi.string().valid([\"OBJECTIVE\", \"THEORY\", \"SUBJECTIVE\"]).optional(),\r\n    question: Joi.string().optional(),\r\n    answer1: Joi.string().optional(),\r\n    answer2: Joi.string().optional(),\r\n    answer3: Joi.string().optional(),\r\n    answer4: Joi.string().optional(),\r\n    answer5: Joi.string().optional(),\r\n    correct: Joi.string().valid([\"answer1\", \"answer2\", \"answer3\", \"answer4\", \"answer5\"]).optional(),\r\n    score: Joi.number().optional(),\r\n    courses: Joi.array().optional(),\r\n    updated_by: Joi.string().optional(),\r\n};\r\n\r\nexport const schema = {\r\n    code: { type: String, required: true },\r\n    type: { type: String, enum: [\"OBJECTIVE\", \"THEORY\", \"SUBJECTIVE\"], required: true },\r\n    question: { type: String, required: true },\r\n    answer1: { type: String }, // Option A\r\n    answer2: { type: String }, // Option B\r\n    answer3: { type: String }, // Option C\r\n    answer4: { type: String }, // Option D\r\n    answer5: { type: String }, // Option E\r\n    correct: [{ type: String, enum: [\"answer1\", \"answer2\", \"answer3\", \"answer4\", \"answer5\"], required: true }],\r\n    score: { type: Number, required: true, default: 1 },\r\n    courses: [{ type: ObjectId, ref: \"Course\", required: true }],\r\n    deleted: { type: Boolean, default: false, required: true },\r\n    deleted_at: { type: Date },\r\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"questionnaire\");\r\n\r\nconst Questionnaire = mongoose.model(\"Questionnaire\", newSchema);\r\n\r\nexport default Questionnaire;\r\n"]}