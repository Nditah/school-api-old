{"version":3,"sources":["../../../../src/api/general/multimedia/model.js"],"names":["Joi","mongoose","mongoose_csv","table","DATABASE","Staff","Schema","ObjectId","Types","schemaCreate","name","string","trim","required","url","created_by","schemaUpdate","updated_by","schema","mysql_id","type","Number","String","ref","preload","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","Image","model","insertMany"],"mappings":"AAAA;;;;;;;;;AASA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAM,EAAEC,MAAF,KAAaL,QAAnB;AACA,MAAM,EAAEM,QAAF,KAAeD,OAAOE,KAA5B;;AAEA,OAAO,MAAMC,eAAe;AACxBC,UAAMV,IAAIW,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADkB;AAExBC,SAAKd,IAAIW,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAFmB;AAGxB;AACAE,gBAAYf,IAAIW,MAAJ,GAAaE,QAAb;AAJY,CAArB;;AAOP,OAAO,MAAMG,eAAe;AACxBN,UAAMV,IAAIW,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADkB;AAExBC,SAAKd,IAAIW,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAFmB;AAGxBI,gBAAYjB,IAAIW,MAAJ,GAAaE,QAAb;AAHY,CAArB;;AAMP,OAAO,MAAMK,SAAS;AAClBC,cAAU,EAAEC,MAAMC,MAAR,EADQ;AAElBX,UAAM,EAAEU,MAAME,MAAR,EAAgBT,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAFY;AAGlBC,SAAK,EAAEM,MAAME,MAAR,EAAgBT,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAHa;AAIlBE,gBAAY,EAAEK,MAAMb,QAAR,EAAkBM,UAAU,IAA5B,EAAkCU,KAAK,OAAvC,EAJM;AAKlBN,gBAAY,EAAEG,MAAMb,QAAR,EAAkBgB,KAAK,OAAvB;AALM,CAAf;;AAQP,MAAMC,UAAUpB,SAASqB,kBAAT,CAA4BC,OAA5C;AACA,MAAMC,UAAUvB,SAASwB,OAAzB;;AAEA,MAAMC,YAAY,IAAIvB,MAAJ,CAAWY,MAAX,EAAmBS,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,OAA5B;;AAEA,MAAMC,QAAQ9B,SAAS+B,KAAT,CAAe,OAAf,EAAwBH,SAAxB,CAAd;;AAEA,IAAIL,OAAJ,EAAa;AAAEO,UAAME,UAAN,CAAiB9B,KAAjB;AAA0B;;AAEzC,eAAe4B,KAAf","file":"model.js","sourcesContent":["/**\n * @author 4Decoder\n * @property {Number} id Image primaryKey\n * @property {String} name Image name\n * @property {String} url The Image url absolute-path\n * @property {Number} created_by Image record created by\n * @property {Number} updated_by Image record modified by\n * @description Image holds record of all image assets\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport table from \"./table\";\nimport { DATABASE } from \"../../../constants\";\nimport Staff from \"../staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    name: Joi.string().trim().required(),\n    url: Joi.string().trim().required(),\n    // image: Joi.any().meta({ swaggerType: \"file\" }).required(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    name: Joi.string().trim().required(),\n    url: Joi.string().trim().required(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    mysql_id: { type: Number },\n    name: { type: String, required: [true, \"Why no input?\"] },\n    url: { type: String, required: [true, \"Why no input?\"] },\n    created_by: { type: ObjectId, required: true, ref: \"Staff\" },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"image\");\n\nconst Image = mongoose.model(\"Image\", newSchema);\n\nif (preload) { Image.insertMany(table); }\n\nexport default Image;\n"]}