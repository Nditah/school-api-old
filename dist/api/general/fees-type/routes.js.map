{"version":3,"sources":["../../../../src/api/general/fees-type/routes.js"],"names":["router","express","Router","get","fetchRecord","post","checkAuth","isValidStaff","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;;AAiBAF,OAAOG,GAAP,CAAW,aAAX,EAA0BC,uBAA1B;;AAEA;;;;;;;;;;;;;;AAcAJ,OAAOK,IAAP,CAAY,aAAZ,EAA2B,CAACC,wBAAD,EAAYC,2BAAZ,CAA3B,EAAsDC,wBAAtD;;AAEA;;;;;;;;;;;;;;AAcAR,OAAOS,GAAP,CAAW,uBAAX,EAAoC,CAACH,wBAAD,EAAYC,2BAAZ,CAApC,EAA+DG,wBAA/D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,uBAAd,EAAuC,CAACL,wBAAD,EAAYC,2BAAZ,CAAvC,EAAkEK,wBAAlE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/fees_types?id={recordId} Retrieve FeesType records\n * @apiName RetrieveFeesType filter, skip, limit, sort, projection\n * @apiGroup FeesType\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/FeesTypes?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records of all FeesTypes and branches worldwide.\n * Routes are established as links between FeesTypes. Certain FeesTypes are Hubs.\n * Read more from https://www.npmjs.com/package/api-query-params\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/fees_types\", fetchRecord);\n\n/**\n * @api {post} /api/v1/fees_types Create a FeesType record\n * @apiName CreateFeesType\n * @apiGroup FeesType\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} type FeesType type String,\n * @apiParam {ObjectId} classe_id FeesType classe_id (required)\n * @apiParam {String} amount FeesType amount (required),\n * @apiParam {String} description FeesType description String\n * @apiSuccess {Object} FeesType FeesType's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 FeesType not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/fees_types\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/fees_types/{recordId} Update a FeesType record\n * @apiName UpdateFeesType\n * @apiGroup FeesType\n * @apiHeader {String} Authorization authorization token\n * @apiParam {String} type FeesType type String,\n * @apiParam {ObjectId} classe_id FeesType classe_id (required)\n * @apiParam {String} amount FeesType amount (required),\n * @apiParam {String} description FeesType description String\n * @apiSuccess {Object} FeesType FeesType's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 FeesType not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/fees_types/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/fees_types/{recordId} Delete a FeesType record\n * @apiName DeleteFeesType\n * @apiGroup FeesType\n * @apiHeader {String} Authorization authorization token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 FeesType not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/fees_types/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}