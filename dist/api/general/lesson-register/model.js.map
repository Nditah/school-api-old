{"version":3,"sources":["../../../../src/api/general/lesson-register/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","lesson","Joi","string","optional","taught_date","date","status","number","teacher","created_by","required","schemaUpdate","updated_by","schema","type","ref","Date","String","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","LessonRegister","model","insertMany","table"],"mappings":";;;;;;;AAUA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;IAEQA,M,GAAWC,kB,CAAXD,M;AAPR;AAZA;AACA;;;;;;;;;;IAmBQE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,YAAQC,cAAIC,MAAJ,GAAaC,QAAb,EADgB;AAExBC,iBAAaH,cAAII,IAAJ,GAAWF,QAAX,EAFW;AAGxBG,YAAQL,cAAIM,MAAJ,GAAaJ,QAAb,EAHgB;AAIxBK,aAAUP,cAAIC,MAAJ,GAAaC,QAAb,EAJc;AAKxBM,gBAAYR,cAAIC,MAAJ,GAAaQ,QAAb;AALY,CAArB;;AAQA,IAAMC,sCAAe;AACxBX,YAAQC,cAAIC,MAAJ,GAAaC,QAAb,EADgB;AAExBC,iBAAaH,cAAII,IAAJ,GAAWF,QAAX,EAFW;AAGxBG,YAAQL,cAAIM,MAAJ,GAAaJ,QAAb,EAHgB;AAIxBK,aAAUP,cAAIC,MAAJ,GAAaC,QAAb,EAJc;AAKxBS,gBAAYX,cAAIC,MAAJ,GAAaQ,QAAb;AALY,CAArB;;AAQA,IAAMG,0BAAS;AAClBb,YAAS,EAAEc,MAAMjB,QAAR,EAAkBkB,KAAK,QAAvB,EADS;AAElBX,iBAAa,EAAEU,MAAME,IAAR,EAFK;AAGlBV,YAAQ,EAAEQ,MAAMG,MAAR,EAHU;AAIlBT,aAAS,EAAEM,MAAMG,MAAR,EAAgBF,KAAM,OAAtB,EAJS;AAKlBN,gBAAY,EAAEK,MAAMjB,QAAR,EAAkBa,UAAU,IAA5B,EAAkCK,KAAK,OAAvC,EALM;AAMlBH,gBAAY,EAAEE,MAAMjB,QAAR,EAAkBkB,KAAK,OAAvB;AANM,CAAf;;AASP,IAAMG,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAI7B,MAAJ,CAAWkB,MAAX,EAAmBS,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,iBAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,iBAAiBhC,mBAASiC,KAAT,CAAe,gBAAf,EAAiCL,SAAjC,CAAvB;AACA,IAAIN,OAAJ,EAAa;AAAEU,mBAAeE,UAAf,CAA0BC,eAA1B;AAAmC;;kBAEnCH,c","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\r\n/**\r\n * @author 4Dcoder\r\n * @property {Number} id LessonRegister primaryKey\r\n * @property {ObjectId} lesson LessonRegister  (required)\r\n * @property {Date} taught_date LessonRegister date  (required)\r\n * @property {String} status LessonRegister status (PENDING|COMPLETED) (required)\r\n * @property {ObjectId} teacher LessonRegister teacher (optional)\r\n * @description LessonRegister model holds record of all lesson-registers the company deals with\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport table from \"./table\";\r\nimport Staff from \"../staff/model\";\r\nimport Course from \"../course/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    lesson: Joi.string().optional(),\r\n    taught_date: Joi.date().optional(),\r\n    status: Joi.number().optional(),\r\n    teacher : Joi.string().optional(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    lesson: Joi.string().optional(),\r\n    taught_date: Joi.date().optional(),\r\n    status: Joi.number().optional(),\r\n    teacher : Joi.string().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    lesson : { type: ObjectId, ref: \"Lesson\"},\r\n    taught_date: { type: Date },\r\n    status: { type: String },\r\n    teacher: { type: String, ref : \"staff\" },\r\n    created_by: { type: ObjectId, required: true, ref: \"Staff\" },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"lesson-register\");\r\nnewSchema.plugin(mongoose_csv);\r\n\r\nconst LessonRegister = mongoose.model(\"LessonRegister\", newSchema);\r\nif (preload) { LessonRegister.insertMany(table); }\r\n\r\nexport default LessonRegister;\r\n"]}