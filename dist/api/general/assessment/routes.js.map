{"version":3,"sources":["../../../../src/api/general/assessment/routes.js"],"names":["router","express","Router","get","checkAuth","fetchRecord","post","isValidCustomer","createRecord","put","isValidStaff","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,cAAX,EAA2B,CAACC,wBAAD,CAA3B,EAAwCC,uBAAxC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBAL,OAAOM,IAAP,CAAY,cAAZ,EAA4B,CAACF,wBAAD,EAAYG,8BAAZ,CAA5B,EAA0DC,wBAA1D;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBAR,OAAOS,GAAP,CAAW,wBAAX,EAAqC,CAACL,wBAAD,EAAYM,2BAAZ,CAArC,EAAgEC,wBAAhE;;AAEA;;;;;;;;;;AAUAX,OAAOY,MAAP,CAAc,wBAAd,EAAwC,CAACR,wBAAD,EAAYM,2BAAZ,CAAxC,EAAmEG,wBAAnE;;kBAEeb,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff, isValidCustomer } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/assessments?id={recordId} Retrieve one or all records\n * @apiName RetrieveAssessments\n * @apiGroup Assessment\n * @apiHeader {String} Authorization Bearer token\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/assessments?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of permissible api routes staff can access\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/assessments\", [checkAuth], fetchRecord);\n\n/**\n * @api {post} /api/v1/assessments Create assessments\n * @apiName CreateAssessment\n * @apiGroup Assessment\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} code Assessment code\n * @apiParam {String} code Assessment code \"TEST|CA|EXAM\"\n * @apiParam {String} mode Assessment mode \"ORAL|PAPER|CBT|DEMO\"\n * @apiParam {Date} written_date Assessment written_date\n * @apiParam {Date} started_at Assessment started dateime\n * @apiParam {Date} ended_at Assessment ended dateime\n * @apiParam {Number} duration Assessment duration\n * @apiParam {ObjectId} course Assessment course\n * @apiParam {ObjectId} examiner Assessment examiner ObjectId\n * @apiParam {Array} questionnaires Assessment questionnaires array of ObjectId\n * @apiParam {ObjectId} classroom Assessmentclassroom or venue ObjectId\n * @apiParam {String} students Assessment students or candidates array ObjectId\n * @apiParam {String} status Assessment status \"PENDING|DONE|CLOSED\"\n * @apiSuccess {Object} Assessment Assessment's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Assessment not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/assessments\", [checkAuth, isValidCustomer], createRecord);\n\n/**\n * @api {put} /api/v1/assessments/{recordId} Update assessments\n * @apiName UpdateAssessment\n * @apiGroup Assessment\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId.\n * @apiParam {String} code Assessment code\n * @apiParam {String} code Assessment code \"TEST|CA|EXAM\"\n * @apiParam {String} mode Assessment mode \"ORAL|PAPER|CBT|DEMO\"\n * @apiParam {Date} written_date Assessment written_date\n * @apiParam {Date} started_at Assessment started dateime\n * @apiParam {Date} ended_at Assessment ended dateime\n * @apiParam {Number} duration Assessment duration\n * @apiParam {ObjectId} course Assessment course\n * @apiParam {ObjectId} examiner Assessment examiner ObjectId\n * @apiParam {Array} questionnaires Assessment questionnaires array of ObjectId\n * @apiParam {ObjectId} classroom Assessmentclassroom or venue ObjectId\n * @apiParam {String} students Assessment students or candidates array ObjectId\n * @apiParam {String} status Assessment status \"PENDING|DONE|CLOSED\"\n * @apiSuccess {Object} Assessment Assessment's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Assessment not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/assessments/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/assessments/{recordId} Delete assessments\n * @apiName DeleteAssessment\n * @apiGroup Assessment\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {ObjectId} recordId record ObjectId.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Assessment not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/assessments/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}