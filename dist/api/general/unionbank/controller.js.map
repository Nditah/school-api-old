{"version":3,"sources":["../../../../src/api/general/unionbank/controller.js"],"names":["req","res","query","filter","skip","limit","sort","projection","UnionbankTransaction","find","select","exec","result","logger","error","info","STATUS_MSG","SUCCESS","DEFAULT","message","fetchRecord","requestHash","headers","api_key","unionbankHash","process","env","UNIONBANK_HASH","data","body","Joi","validate","schemaCreate","newRecord","save","createRecord","log4js","getLogger","configure","appenders","file","type","filename","categories","default","level"],"mappings":"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","file":"controller.js","sourcesContent":["import Joi from \"joi\";\r\nimport log4js from \"log4js\";\r\nimport aqp from \"api-query-params\";\r\nimport UnionbankTransaction, { schemaCreate } from \"./model\";\r\nimport { success, fail, notFound } from \"../../../lib\";\r\nimport { STATUS_MSG } from \"../../../constants\";\r\n\r\n// Logging\r\nconst logger = log4js.getLogger(\"[unionbank-transaction]\");\r\nlog4js.configure({\r\n    appenders: { file: { type: \"file\", filename: \"logs/unionbank-transaction.log\" } },\r\n    categories: { default: { appenders: [\"file\"], level: \"debug\" } },\r\n});\r\n\r\nexport async function fetchRecord(req, res) {\r\n    const { query } = req;\r\n    const { filter, skip, limit, sort, projection } = aqp(query);\r\n    try {\r\n        const result = await UnionbankTransaction.find(filter)\r\n            .skip(skip)\r\n            .limit(limit)\r\n            .sort(sort)\r\n            .select(projection)\r\n            .exec();\r\n        if (!result) {\r\n            logger.error(\"Error: Bad Request: Model not found\", result);\r\n            return notFound(res, \"Error: Bad Request: Model not found\");\r\n        }\r\n        logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\r\n        return success(res, 200, result, null);\r\n    } catch (err) {\r\n        logger.error(err);\r\n        return fail(res, 500, `Error retrieving record. ${err.message}`);\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line complexity\r\nexport async function createRecord(req, res) {\r\n    // Verify Hash\r\n    const requestHash = req.headers.api_key || req.query.api_key;\r\n    if (!requestHash) {\r\n        logger.error({ message: \"Bad request! No hash found\" });\r\n        return fail(res, 422, \"Error: Bad Request: hash not found\");\r\n    }\r\n\r\n    const unionbankHash = process.env.UNIONBANK_HASH;\r\n    if (requestHash !== unionbankHash) {\r\n        logger.error(`Error invalid transaction signature. ${requestHash}`, []);\r\n        return fail(res, 422, `Error invalid transaction signature. ${requestHash}`);\r\n    }\r\n\r\n    const data = req.body;\r\n    const { error } = Joi.validate(data, schemaCreate);\r\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\r\n    const newRecord = new UnionbankTransaction(data);\r\n    try {\r\n        const result = await newRecord.save();\r\n        if (!result) {\r\n            logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\r\n            return notFound(res, \"Error: Bad Request: Model not found\");\r\n        }\r\n        return success(res, 201, result, \"Record created successfully!\");\r\n    } catch (err) {\r\n        logger.error(err);\r\n    }\r\n    return fail(res, 500, `Error creating record. ${data}`);\r\n}\r\n"]}