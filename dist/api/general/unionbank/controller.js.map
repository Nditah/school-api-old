{"version":3,"sources":["../../../../src/api/general/unionbank/controller.js"],"names":["Joi","log4js","aqp","UnionbankTransaction","schemaCreate","success","fail","notFound","STATUS_MSG","logger","getLogger","configure","appenders","file","type","filename","categories","default","level","fetchRecord","req","res","query","filter","skip","limit","sort","projection","result","find","select","exec","error","info","SUCCESS","DEFAULT","err","message","createRecord","requestHash","headers","api_key","unionbankHash","process","env","UNIONBANK_HASH","data","body","validate","newRecord","save"],"mappings":"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","file":"controller.js","sourcesContent":["import Joi from \"joi\";\nimport log4js from \"log4js\";\nimport aqp from \"api-query-params\";\nimport UnionbankTransaction, { schemaCreate } from \"./model\";\nimport { success, fail, notFound } from \"../../../lib\";\nimport { STATUS_MSG } from \"../../../constants\";\n\n// Logging\nconst logger = log4js.getLogger(\"[unionbank-transaction]\");\nlog4js.configure({\n    appenders: { file: { type: \"file\", filename: \"logs/unionbank-transaction.log\" } },\n    categories: { default: { appenders: [\"file\"], level: \"debug\" } },\n});\n\nexport async function fetchRecord(req, res) {\n    const { query } = req;\n    const { filter, skip, limit, sort, projection } = aqp(query);\n    try {\n        const result = await UnionbankTransaction.find(filter)\n            .skip(skip)\n            .limit(limit)\n            .sort(sort)\n            .select(projection)\n            .exec();\n        if (!result) {\n            logger.error(\"Error: Bad Request: Model not found\", result);\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n        logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n        return success(res, 200, result, null);\n    } catch (err) {\n        logger.error(err);\n        return fail(res, 500, `Error retrieving record. ${err.message}`);\n    }\n}\n\n// eslint-disable-next-line complexity\nexport async function createRecord(req, res) {\n    // Verify Hash\n    const requestHash = req.headers.api_key || req.query.api_key;\n    if (!requestHash) {\n        logger.error({ message: \"Bad request! No hash found\" });\n        return fail(res, 422, \"Error: Bad Request: hash not found\");\n    }\n\n    const unionbankHash = process.env.UNIONBANK_HASH;\n    if (requestHash !== unionbankHash) {\n        logger.error(`Error invalid transaction signature. ${requestHash}`, []);\n        return fail(res, 422, `Error invalid transaction signature. ${requestHash}`);\n    }\n\n    const data = req.body;\n    const { error } = Joi.validate(data, schemaCreate);\n    if (error) return fail(res, 422, `Error validating request data. ${error.message}`);\n    const newRecord = new UnionbankTransaction(data);\n    try {\n        const result = await newRecord.save();\n        if (!result) {\n            logger.info(STATUS_MSG.SUCCESS.DEFAULT, []);\n            return notFound(res, \"Error: Bad Request: Model not found\");\n        }\n        return success(res, 201, result, \"Record created successfully!\");\n    } catch (err) {\n        logger.error(err);\n    }\n    return fail(res, 500, `Error creating record. ${data}`);\n}\n"]}