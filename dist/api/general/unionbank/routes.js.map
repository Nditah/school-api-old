{"version":3,"sources":["../../../../src/api/general/unionbank/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,yBAAX,EAAsC,CAACC,wBAAD,EAAYC,2BAAZ,CAAtC,EAAiEC,uBAAjE;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BAN,OAAOO,IAAP,CAAY,yBAAZ,EAAuCC,wBAAvC;;kBAEeR,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/unionbank-transactions?id={recordId} Retrieve one or all records\n * @apiName RetrieveUnionbankTransaction\n * @apiGroup UnionbankTransaction\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i https://mis-api.herokuapp.com/api/v1/unionbank-transactions?id=2&fields=id,created_at,updated_at\n * @apiExample {curl} Example usage for retieving multiple records:\n *      curl -i https://mis-api.herokuapp.com/api/v1/unionbank-transactions?offset=10&limit=50\n * @apiParam {Number} id Unique id of the record to retrieve (optional)\n * @apiParam {Number} offset Number of records to skip (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} fields Comma-separated list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/unionbank-transactions\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/v1/unionbank-transactions Create unionbank-transactions\n * @apiName CreateUnionbankTransaction\n * @apiGroup UnionbankTransaction\n * @apiParam {Number} branchid UnionBank Branch code the transaction originated from\n * @apiParam {String} channel UnionBank channel Transaction Channel\n * @apiParam {Date} trandate UnionBank trandate Date transaction was initiated\n * @apiParam {String} trancode UnionBank trancode Transaction code\n * @apiParam {String} amount UnionBank amount Transaction amount\n * @apiParam {String} currency UnionBank currency Currency In which transaction occurred\n * @apiParam {String} destaccountno UnionBank destaccountno Integrating partner’s account\n * number transaction occurred on\n * @apiParam {Number} balance UnionBank balance Available balance on the account\n * transaction occurred on\n * @apiParam {String} originbank UnionBank originbank Integrating partner’s bank\n * @apiParam {String} narration UnionBank narration Description of the transaction\n * @apiParam {String} trantype UnionBank trantype Transaction type: Debit or Credit\n * @apiParam {Date} valuedate UnionBank valuedate Date the value of the transaction hit the account\n * @apiParam {Number} business_id UnionBank business_id Profile ID for integrating partner\n * @apiParam {String} transaction_ref UnionBank transaction_ref Unique transaction reference number\n * @apiParam {String} branchname UnionBank branchname Branch name the transaction originated from\n * @description UnionbankTransaction model holds record of all transactions via Unionbank\n * @apiSuccess {Object} UnionbankTransaction UnionbankTransaction's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 UnionbankTransaction not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/unionbank-transactions\", createRecord);\n\nexport default router;\n"]}