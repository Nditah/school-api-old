{"version":3,"sources":["../../../../src/api/general/sms/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","sid","Joi","string","optional","sender","required","recipient","message","direction","valid","created_by","schema","type","String","default","SMS","PEACE_SMS_SENDER","enum","delivery_status","ref","options","DATABASE","OPTIONS","newSchema","set","Sms","model"],"mappings":";;;;;;;AAUA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;;;IAEQA,M,GAAWC,kB,CAAXD,M;AALR;AAZA;;;;;;;;;;;IAkBQE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,SAAKC,cAAIC,MAAJ,GAAaC,QAAb,EADmB;AAExBC,YAAQH,cAAIC,MAAJ,GAAaG,QAAb,EAFgB;AAGxBC,eAAWL,cAAIC,MAAJ,GAAaC,QAAb,EAHa;AAIxBI,aAASN,cAAIC,MAAJ,GAAaG,QAAb,EAJe;AAKxBG,eAAWP,cAAIC,MAAJ,GAAaO,KAAb,CAAmB,SAAnB,EAA8B,UAA9B,EAA0CN,QAA1C,EALa;AAMxBO,gBAAYT,cAAIC,MAAJ,GAAaG,QAAb;AANY,CAArB;;AASA,IAAMM,0BAAS;AAClBX,SAAK,EAAEY,MAAMC,MAAR,EADa;AAElBT,YAAQ,EAAEQ,MAAMC,MAAR,EAAgBR,UAAU,IAA1B,EAAgCS,SAASC,eAAIC,gBAA7C,EAFU;AAGlBV,eAAW,EAAEM,MAAMC,MAAR,EAAgBR,UAAU,IAA1B,EAHO;AAIlBE,aAAS,EAAEK,MAAMC,MAAR,EAAgBR,UAAU,CAAC,IAAD,EAAO,iBAAP,CAA1B,EAJS;AAKlBG,eAAW,EAAEI,MAAMC,MAAR,EAAgBI,MAAM,CAAC,SAAD,EAAY,UAAZ,CAAtB,EAA+CH,SAAS,UAAxD,EAAoET,UAAU,IAA9E,EALO;AAMlBa,qBAAiB,EAAEN,MAAMC,MAAR,EANC;AAOlBH,gBAAY,EAAEE,MAAMf,QAAR,EAAkBsB,KAAK,OAAvB;AAPM,CAAf;;AAUP,IAAMC,UAAUC,oBAASC,OAAzB;;AAEA,IAAMC,YAAY,IAAI5B,MAAJ,CAAWgB,MAAX,EAAmBS,OAAnB,CAAlB;AACAG,UAAUC,GAAV,CAAc,YAAd,EAA4B,KAA5B;;AAEA,IAAMC,MAAM7B,mBAAS8B,KAAT,CAAe,KAAf,EAAsBH,SAAtB,CAAZ;;kBAEeE,G","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {ObjectId} sid Sms primaryKey\n * @property {String} sender Sms sender phone number\n * @property {String} recipient Sms recipient\n * @property {String} message Sms message\n * @property {String} direction Sms direction INBOUND|OUTBOUND\n * @property {String} delivery_status Sms delivery status: queued|failed|sent|delivered|undelivered\n * @description Sms model holds record of all internal and external sms via ERP\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE, SMS } from \"../../../constants\";\nimport Staff from \"../staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    sid: Joi.string().optional(),\n    sender: Joi.string().required(),\n    recipient: Joi.string().optional(),\n    message: Joi.string().required(),\n    direction: Joi.string().valid(\"INBOUND\", \"OUTBOUND\").optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schema = {\n    sid: { type: String },\n    sender: { type: String, required: true, default: SMS.PEACE_SMS_SENDER },\n    recipient: { type: String, required: true },\n    message: { type: String, required: [true, \"Why no message?\"] },\n    direction: { type: String, enum: [\"INBOUND\", \"OUTBOUND\"], default: \"OUTBOUND\", required: true },\n    delivery_status: { type: String },\n    created_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"sms\");\n\nconst Sms = mongoose.model(\"Sms\", newSchema);\n\nexport default Sms;\n"]}