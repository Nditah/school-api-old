{"version":3,"sources":["../../../../src/api/general/sms/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","createOtp","createWebhook"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAgBAF,OAAOG,GAAP,CAAW,MAAX,EAAmB,CAACC,wBAAD,EAAYC,2BAAZ,CAAnB,EAA8CC,uBAA9C;;AAEA;;;;;;;;;;;;;;;AAeAN,OAAOO,IAAP,CAAY,MAAZ,EAAoB,CAACH,wBAAD,EAAYC,2BAAZ,CAApB,EAA+CG,wBAA/C;;AAEA;;;;;;;;;;;AAWAR,OAAOO,IAAP,CAAY,UAAZ,EAAwBE,qBAAxB;;AAEA;;;;;;;;;;;;;;;AAeAT,OAAOO,IAAP,CAAY,cAAZ,EAA4BG,yBAA5B;;kBAEeV,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { fetchRecord, createRecord, createWebhook, createOtp } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/sms?id={recordId} Retrieve SMS records\r\n * @apiName RetrieveSms\r\n * @apiGroup Sms\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i api/sms?\r\n * @apiParam {Object} filter query condition (optional)\r\n * @apiParam {Number} skip Number of records to offset by (optional)\r\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\r\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\r\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\r\n * @apiDescription Records  of account headings belonging to one classification\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/sms\", [checkAuth, isValidStaff], fetchRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/sms Create an SMS record\r\n * @apiName CreateSms\r\n * @apiGroup Sms\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} recipient Sms recipient\r\n * @apiParam {String} sender Sms sender phone number\r\n * @apiParam {String} message Sms message\r\n * @apiParam {String} direction Sms direction INBOUND|OUTBOUND\r\n * @apiParam {String} delivery_status Sms delivery status\r\n * @apiSuccess {Object} Sms Sms's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Sms not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/sms\", [checkAuth, isValidStaff], createRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/sms/otp Create send SMS otp\r\n * @apiName CreateSmsOtp\r\n * @apiGroup Sms\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} phone Registered user (office) phone number\r\n * @apiParam {String} user_type Registered user_type staff|supplier|partner|customer\r\n * @apiSuccess {Object} Sms Sms's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Sms not found.\r\n */\r\nrouter.post(\"/sms/otp\", createOtp);\r\n\r\n/**\r\n * @api {post} /api/v1/sms/webhook Create incoming SMS webhook\r\n * @apiName CreateSmsWebhook\r\n * @apiGroup Sms\r\n * @apiHeader {String} Authorization Bearer token\r\n * @apiParam {String} sender Sms sender phone number\r\n * @apiParam {String} recipient Sms recipient phone number\r\n * @apiParam {String} message Sms message\r\n * @apiParam {String} direction Sms direction INBOUND|OUTBOUND\r\n * @apiParam {String} delivery_status Sms delivery status: queued|failed|sent|delivered|undelivered\r\n * @apiSuccess {Object} Sms Sms's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Sms not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/sms/webhook\", createWebhook);\r\n\r\nexport default router;\r\n"]}