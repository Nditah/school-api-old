{"version":3,"sources":["../../../../src/api/general/classe/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","subsidiary","Joi","string","trim","optional","level","form_teacher","created_by","required","schemaUpdate","captain","updated_by","schema","type","String","ref","options","DATABASE","OPTIONS","newSchema","set","Classe","model"],"mappings":";;;;;;;AAYA;;;;AACA;;;;AAEA;;;;IAEQA,M,GAAWC,kB,CAAXD,M;AAHR;AAdA;AACA;;;;;;;;;;;IAiBQE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,gBAAYC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADY;AAExBC,WAAOJ,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAFiB;AAGxBE,kBAAcL,cAAIC,MAAJ,GAAaE,QAAb,EAHU;AAIxBG,gBAAYN,cAAIC,MAAJ,GAAaM,QAAb;AAJY,CAArB;;AAOA,IAAMC,sCAAe;AACxBT,gBAAYC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADY;AAExBC,WAAOJ,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAFiB;AAGxBE,kBAAcL,cAAIC,MAAJ,GAAaE,QAAb,EAHU;AAIxBM,aAAST,cAAIC,MAAJ,GAAaE,QAAb,EAJe;AAKxBO,gBAAYV,cAAIC,MAAJ,GAAaM,QAAb;AALY,CAArB;;AAQA,IAAMI,0BAAS;AAClBZ,gBAAY,EAAEa,MAAMC,MAAR,EAAgBN,UAAU,CAAC,KAAD,EAAQ,gBAAR,CAA1B,EADM;AAElBH,WAAO,EAAEQ,MAAMC,MAAR,EAAgBN,UAAU,CAAC,KAAD,EAAQ,eAAR,CAA1B,EAFW;AAGlBF,kBAAc,EAAEO,MAAMhB,QAAR,EAAkBkB,KAAK,OAAvB,EAHI;AAIlBL,aAAS,EAAEG,MAAMhB,QAAR,EAAkBkB,KAAK,SAAvB,EAJS;AAKlBR,gBAAY,EAAEM,MAAMhB,QAAR,EAAkBkB,KAAK,OAAvB,EAAgCP,UAAU,IAA1C,EALM;AAMlBG,gBAAY,EAAEE,MAAMhB,QAAR,EAAkBkB,KAAK,OAAvB,EAAgCP,UAAU,IAA1C;AANM,CAAf;;AASP,IAAMQ,UAAUC,oBAASC,OAAzB;;AAEA,IAAMC,YAAY,IAAIxB,MAAJ,CAAWiB,MAAX,EAAmBI,OAAnB,CAAlB;AACAG,UAAUC,GAAV,CAAc,YAAd,EAA4B,QAA5B;;AAEA,IAAMC,SAASzB,mBAAS0B,KAAT,CAAe,QAAf,EAAyBH,SAAzB,CAAf;;kBAEeE,M","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Decoder\n * @property {String} id Classe ObjectId primaryKey\n * @property {String} subsidiary Classe subsidiary (optional)\n * @property {String} level Classe level (optional)\n * @property {String} form_teacher Classe form_teacher (optional)\n * @property {String} created_by Classe record created by\n * @property {String} updated_by Classe record modified by\n * @description Classe holds record of all classes in the school.\n */\n\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport { DATABASE } from \"../../../constants\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    subsidiary: Joi.string().trim().optional(),\n    level: Joi.string().trim().optional(),\n    form_teacher: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    subsidiary: Joi.string().trim().optional(),\n    level: Joi.string().trim().optional(),\n    form_teacher: Joi.string().optional(),\n    captain: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    subsidiary: { type: String, required: [false, \"Why no School?\"] },\n    level: { type: String, required: [false, \"Why no level?\"] },\n    form_teacher: { type: ObjectId, ref: \"Staff\" },\n    captain: { type: ObjectId, ref: \"Student\" },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\", required: true },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"classe\");\n\nconst Classe = mongoose.model(\"Classe\", newSchema);\n\nexport default Classe;\n"]}