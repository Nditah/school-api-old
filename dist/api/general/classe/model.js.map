{"version":3,"sources":["../../../../src/api/general/classe/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","name","Joi","string","trim","optional","subsidiary","level","form_teacher","created_by","required","schemaUpdate","captain","updated_by","schema","type","String","ref","options","DATABASE","OPTIONS","newSchema","set","Classe","model"],"mappings":";;;;;;;AAaA;;;;AACA;;;;AAEA;;;;IAEQA,M,GAAWC,kB,CAAXD,M;AAHR;AAfA;AACA;;;;;;;;;;;;IAkBQE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADkB;AAExBC,gBAAYJ,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAFY;AAGxBE,WAAOL,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAHiB;AAIxBG,kBAAcN,cAAIC,MAAJ,GAAaE,QAAb,EAJU;AAKxBI,gBAAYP,cAAIC,MAAJ,GAAaO,QAAb;AALY,CAArB;;AAQA,IAAMC,sCAAe;AACxBV,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADkB;AAExBC,gBAAYJ,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAFY;AAGxBE,WAAOL,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAHiB;AAIxBG,kBAAcN,cAAIC,MAAJ,GAAaE,QAAb,EAJU;AAKxBO,aAASV,cAAIC,MAAJ,GAAaE,QAAb,EALe;AAMxBQ,gBAAYX,cAAIC,MAAJ,GAAaO,QAAb;AANY,CAArB;;AASA,IAAMI,0BAAS;AAClBb,UAAM,EAAEc,MAAMC,MAAR,EADY;AAElBV,gBAAY,EAAES,MAAMC,MAAR,EAAgBN,UAAU,CAAC,KAAD,EAAQ,gBAAR,CAA1B,EAFM;AAGlBH,WAAO,EAAEQ,MAAMC,MAAR,EAAgBN,UAAU,CAAC,KAAD,EAAQ,eAAR,CAA1B,EAHW;AAIlBF,kBAAc,EAAEO,MAAMjB,QAAR,EAAkBmB,KAAK,OAAvB,EAJI;AAKlBL,aAAS,EAAEG,MAAMjB,QAAR,EAAkBmB,KAAK,SAAvB,EALS;AAMlBR,gBAAY,EAAEM,MAAMjB,QAAR,EAAkBmB,KAAK,OAAvB,EAAgCP,UAAU,IAA1C,EANM;AAOlBG,gBAAY,EAAEE,MAAMjB,QAAR,EAAkBmB,KAAK,OAAvB,EAAgCP,UAAU,IAA1C;AAPM,CAAf;;AAUP,IAAMQ,UAAUC,oBAASC,OAAzB;;AAEA,IAAMC,YAAY,IAAIzB,MAAJ,CAAWkB,MAAX,EAAmBI,OAAnB,CAAlB;AACAG,UAAUC,GAAV,CAAc,YAAd,EAA4B,QAA5B;;AAEA,IAAMC,SAAS1B,mBAAS2B,KAAT,CAAe,QAAf,EAAyBH,SAAzB,CAAf;;kBAEeE,M","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Decoder\n * @property {ObjectId} id Classe ObjectId primaryKey\n * @property {String} name Classe name (optional)\n * @property {String} subsidiary Classe subsidiary (optional)\n * @property {String} level Classe level (optional)\n * @property {ObjectId} form_teacher Classe form_teacher (optional)\n * @property {ObjectId} created_by Classe record created by\n * @property {ObjectId} updated_by Classe record modified by\n * @description Classe holds record of all classes in the school.\n */\n\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport { DATABASE } from \"../../../constants\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    name: Joi.string().trim().optional(),\n    subsidiary: Joi.string().trim().optional(),\n    level: Joi.string().trim().optional(),\n    form_teacher: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    name: Joi.string().trim().optional(),\n    subsidiary: Joi.string().trim().optional(),\n    level: Joi.string().trim().optional(),\n    form_teacher: Joi.string().optional(),\n    captain: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    name: { type: String },\n    subsidiary: { type: String, required: [false, \"Why no School?\"] },\n    level: { type: String, required: [false, \"Why no level?\"] },\n    form_teacher: { type: ObjectId, ref: \"Staff\" },\n    captain: { type: ObjectId, ref: \"Student\" },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\", required: true },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"classe\");\n\nconst Classe = mongoose.model(\"Classe\", newSchema);\n\nexport default Classe;\n"]}