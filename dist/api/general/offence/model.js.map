{"version":3,"sources":["../../../../src/api/general/offence/model.js"],"names":["Schema","mongoose","ObjectId","Types","offenceCreate","offender_type","Joi","string","required","staff_id","partner_id","optional","offence","offence_date","date","description","offence_status","valid","verdict","verdict_by","verdict_date","verdict_remark","fine","number","discipline","suspension","payment","created_by","offenceUpdate","updated_by","offenceSchema","type","String","enum","comment","ref","Date","Number","options","DATABASE","OPTIONS","newOffenceSchema","set","Offence","model","offenceTypeCreate","code","name","suspension_days","offenceTypeUpdate","offenceTypeSchema","default","preload","PRELOAD_TABLE_DATA","DEFAULT","newOffenceTypeSchema","plugin","mongoose_csv","OffenceType","insertMany","table"],"mappings":"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","file":"model.js","sourcesContent":["import Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport table from \"./table\";\nimport Staff from \"../staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const offenceCreate = {\n    offender_type: Joi.string().required(),\n    staff_id: Joi.string().required(),\n    partner_id: Joi.string().optional(),\n    offence: Joi.string().optional(),\n    offence_date: Joi.date().optional(),\n    description: Joi.string().optional(),\n    offence_status: Joi.string().valid(\"PENDING\", \"ARBITRATED\").optional(),\n    verdict: Joi.string().valid(\"INNOCENT\", \"GUILTY\").optional(),\n    verdict_by: Joi.string().optional(),\n    verdict_date: Joi.date().optional(),\n    verdict_remark: Joi.string().optional(),\n    fine: Joi.number().optional(),\n    discipline: Joi.string().valid(\"WARNING\", \"SUSPENSION\", \"DISMISSED\").required(),\n    suspension: Joi.string().optional(),\n    payment: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const offenceUpdate = {\n    offender_type: Joi.string().optional(),\n    staff_id: Joi.string().optional(),\n    partner_id: Joi.string().optional(),\n    offence: Joi.string().optional(),\n    offence_date: Joi.date().optional(),\n    description: Joi.string().optional(),\n    offence_status: Joi.string().valid(\"PENDING\", \"ARBITRATED\").optional(),\n    verdict: Joi.string().valid(\"INNOCENT\", \"GUILTY\").optional(),\n    verdict_by: Joi.string().optional(),\n    verdict_date: Joi.date().optional(),\n    verdict_remark: Joi.string().optional(),\n    fine: Joi.number().optional(),\n    discipline: Joi.string().valid(\"WARNING\", \"SUSPENSION\", \"DISMISSED\").optional(),\n    suspension: Joi.string().optional(),\n    payment: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\n/**\n * @author 4Dcoder\n * @property {String} offender_type Offence offender_type (required)\n * @property {ObjectId} staff_id Offence staff ObjectId\n * @property {ObjectId} partner_id Offence driver ObjectId\n * @property {String} offence Offence offence (optional)\n * @property {Date} offence_date Offence offence_date (optional)\n * @property {String} description Offence description (optional)\n * @property {String} offence_status Offence offence_status (\"PENDING\", \"ARBITRATED\")\n * @property {String} verdict Offence verdict (\"INNOCENT\", \"GUILTY\")\n * @property {ObjectId} verdict_by Offence verdict_by (optional)\n * @property {Date} verdict_date Offence verdict_date (optional)\n * @property {String} verdict_remark Offence verdict_remark (optional)\n * @property {Number} fine Offence fine (required)\n * @property {String} discipline Offence discipline (\"WARNING\", \"SUSPENSION\", \"DISMISSED\")\n * @property {String} suspension Offence suspension (optional)\n * @property {Number} payment Offence paymentId (required)\n * @description Offence model holds record of all Inventories except vehicles\n */\nexport const offenceSchema = {\n    offender_type: { type: String, enum: [\"PARTNER\", \"STAFF\"], comment: \"userType\" },\n    staff_id: { type: ObjectId, ref: \"Staff\" },\n    partner_id: { type: ObjectId, ref: \"Partner\" },\n    offence: { type: String },\n    offence_date: { type: Date },\n    description: { type: String },\n    offence_status: { type: String, enum: [\"PENDING\", \"ARBITRATED\"] },\n    verdict: { type: String, enum: [\"INNOCENT\", \"GUILTY\"] },\n    verdict_by: { type: ObjectId, ref: \"Staff\" },\n    verdict_date: { type: Date },\n    verdict_remark: { type: String },\n    fine: { type: Number },\n    discipline: { type: String, enum: [\"WARNING\", \"SUSPENSION\", \"DISMISSED\"] },\n    suspension: { type: String },\n    payment: { type: String },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst options = DATABASE.OPTIONS;\nconst newOffenceSchema = new Schema(offenceSchema, options);\nnewOffenceSchema.set(\"collection\", \"offence\");\nconst Offence = mongoose.model(\"Offence\", newOffenceSchema);\n\n//* ================ OFFENCE TYPE ===================\n\nexport const offenceTypeCreate = {\n    code: Joi.string().required(),\n    offender_type: Joi.string().valid(\"PARTNER\", \"STAFF\").required(),\n    name: Joi.string().required(),\n    fine: Joi.number().required(),\n    discipline: Joi.string().valid(\"WARNING\", \"SUSPENSION\", \"DISMISSED\").required(),\n    suspension_days: Joi.number().required(),\n    description: Joi.string().required(),\n    created_by: Joi.string().required(),\n};\n\nexport const offenceTypeUpdate = {\n    code: Joi.string().optional(),\n    offender_type: Joi.string().valid(\"PARTNER\", \"STAFF\").optional(),\n    name: Joi.string().optional(),\n    fine: Joi.number().optional(),\n    discipline: Joi.string().valid(\"WARNING\", \"SUSPENSION\", \"DISMISSED\").optional(),\n    suspension_days: Joi.number().optional(),\n    description: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\n/**\n * @author 4Dcoder\n * @property {Number} id OffenceType primaryKey\n * @property {String} code OffenceType code (required)\n * @property {String} offender_type OffenceType offender_type \"PARTNER\", \"STAFF\" (required)\n * @property {String} name OffenceType name (required)\n * @property {Number} fine OffenceType fine (required)\n * @property {String} discipline OffenceType discipline\n * \"WARNING\", \"SUSPENSION\", \"DISMISSED\" (required)\n * @property {Number} suspension_days OffenceType suspension_days (required)\n * @property {String} description OffenceType description (required)\n * @description OffenceType model holds record of all offence categories\n */\nexport const offenceTypeSchema = {\n    code: { type: String },\n    offender_type: { type: String, enum: [\"PARTNER\", \"STAFF\"] },\n    name: { type: String },\n    fine: { type: Number, default: 0 },\n    discipline: { type: String, enum: [\"WARNING\", \"SUSPENSION\", \"DISMISSED\"] },\n    suspension_days: { type: Number, default: 0 },\n    description: { type: String },\n    created_by: { type: ObjectId, required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\n\nconst newOffenceTypeSchema = new Schema(offenceTypeSchema, options);\nnewOffenceTypeSchema.set(\"collection\", \"offence_type\");\nnewOffenceTypeSchema.plugin(mongoose_csv);\n\nconst OffenceType = mongoose.model(\"OffenceType\", newOffenceTypeSchema);\nif (preload) { OffenceType.insertMany(table); }\n\nexport { OffenceType, Offence };\n"]}