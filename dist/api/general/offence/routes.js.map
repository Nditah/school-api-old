{"version":3,"sources":["../../../../src/api/general/offence/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAIA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAVA;;;;AAyBAF,OAAOG,GAAP,CAAW,WAAX,EAAwB,CAACC,wBAAD,EAAYC,2BAAZ,CAAxB,EAAmDC,uBAAnD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBAN,OAAOO,IAAP,CAAY,WAAZ,EAAyB,CAACH,wBAAD,EAAYC,2BAAZ,CAAzB,EAAoDG,wBAApD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBAR,OAAOS,GAAP,CAAW,qBAAX,EAAkC,CAACL,wBAAD,EAAYC,2BAAZ,CAAlC,EAA6DK,wBAA7D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,qBAAd,EAAqC,CAACP,wBAAD,EAAYC,2BAAZ,CAArC,EAAgEO,wBAAhE;;kBAEeZ,M","file":"routes.js","sourcesContent":["/**\n * @author 4Decoder\n * @description Offence holds record of all offences involving company vehicles\n */\nimport express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/offences?id={recordId} Retrieve one or all records\n * @apiName RetrieveOffence\n * @apiGroup Offence\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/offences?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/offences\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/offences Create offences\n * @apiName CreateOffence\n * @apiGroup Offence\n * @apiParam {String} offender_type Offence offender_type (required)\n * @apiParam {Number} offender_id Offence offender_id (required)\n * @apiParam {String} offence Offence offence (optional)\n * @apiParam {Date} offence_date Offence offence_date (optional)\n * @apiParam {String} description Offence description (optional)\n * @apiParam {String} offence_status Offence offence_status (\"PENDING\", \"ARBITRATED\")\n * @apiParam {String} verdict Offence verdict (\"INNOCENT\", \"GUILTY\")\n * @apiParam {Number} verdict_by Offence verdict_by (optional)\n * @apiParam {Date} verdict_date Offence verdict_date (optional)\n * @apiParam {String} verdict_remark Offence verdict_remark (optional)\n * @apiParam {Number} fine Offence fine (required)\n * @apiParam {String} discipline Offence discipline (\"WARNING\", \"SUSPENSION\", \"DISMISSED\")\n * @apiParam {String} suspension Offence suspension (optional)\n * @apiParam {Number} payment Offence paymentId (required)\n * @apiSuccess {Object} Offence Offence's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Offence not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/offences\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/offences/{recordId} Update offences\n * @apiName UpdateOffence\n * @apiGroup Offence\n * @apiPermission master\n * @apiParam {String} offender_type Offence offender_type\n * @apiParam {Number} offender_id Offence offender_id\n * @apiParam {String} offence Offence offence\n * @apiParam {Date} offence_date Offence offence_date\n * @apiParam {String} description Offence description\n * @apiParam {String} offence_status Offence offence_status (\"PENDING\", \"ARBITRATED\")\n * @apiParam {String} verdict Offence verdict (\"INNOCENT\", \"GUILTY\")\n * @apiParam {Number} verdict_by Offence verdict_by\n * @apiParam {Date} verdict_date Offence verdict_date\n * @apiParam {String} verdict_remark Offence verdict_remark\n * @apiParam {Number} fine Offence fine\n * @apiParam {String} discipline Offence discipline (\"WARNING\", \"SUSPENSION\", \"DISMISSED\")\n * @apiParam {String} suspension Offence suspension\n * @apiParam {Number} payment Offence paymentId\n * @apiSuccess {Object} Offence Offence's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Offence not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/offences/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/offences/{recordId} Delete offences\n * @apiName DeleteOffence\n * @apiGroup Offence\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Offence not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/offences/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}