{"version":3,"sources":["../../../../src/api/general/offence/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAIA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAVA;;;;AAyBAF,OAAOG,GAAP,CAAW,WAAX,EAAwB,CAACC,wBAAD,EAAYC,2BAAZ,CAAxB,EAAmDC,uBAAnD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBAN,OAAOO,IAAP,CAAY,WAAZ,EAAyB,CAACH,wBAAD,EAAYC,2BAAZ,CAAzB,EAAoDG,wBAApD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBAR,OAAOS,GAAP,CAAW,qBAAX,EAAkC,CAACL,wBAAD,EAAYC,2BAAZ,CAAlC,EAA6DK,wBAA7D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,qBAAd,EAAqC,CAACP,wBAAD,EAAYC,2BAAZ,CAArC,EAAgEO,wBAAhE;;kBAEeZ,M","file":"routes.js","sourcesContent":["/**\r\n * @author 4Decoder\r\n * @description Offence holds record of all offences involving company vehicles\r\n */\r\nimport express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/offences?id={recordId} Retrieve one or all records\r\n * @apiName RetrieveOffence\r\n * @apiGroup Offence\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i api/offences?\r\n * @apiParam {Object} filter query condition (optional)\r\n * @apiParam {Number} skip Number of records to offset by (optional)\r\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\r\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\r\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\r\n * @apiDescription Records  of account headings belonging to one classification\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/offences\", [checkAuth, isValidStaff], fetchRecord);\r\n\r\n/**\r\n * @api {post} /api/v1/offences Create offences\r\n * @apiName CreateOffence\r\n * @apiGroup Offence\r\n * @apiParam {String} offender_type Offence offender_type (required)\r\n * @apiParam {Number} offender_id Offence offender_id (required)\r\n * @apiParam {String} offence Offence offence (optional)\r\n * @apiParam {Date} offence_date Offence offence_date (optional)\r\n * @apiParam {String} description Offence description (optional)\r\n * @apiParam {String} offence_status Offence offence_status (\"PENDING\", \"ARBITRATED\")\r\n * @apiParam {String} verdict Offence verdict (\"INNOCENT\", \"GUILTY\")\r\n * @apiParam {Number} verdict_by Offence verdict_by (optional)\r\n * @apiParam {Date} verdict_date Offence verdict_date (optional)\r\n * @apiParam {String} verdict_remark Offence verdict_remark (optional)\r\n * @apiParam {Number} fine Offence fine (required)\r\n * @apiParam {String} discipline Offence discipline (\"WARNING\", \"SUSPENSION\", \"DISMISSED\")\r\n * @apiParam {String} suspension Offence suspension (optional)\r\n * @apiParam {Number} payment Offence paymentId (required)\r\n * @apiSuccess {Object} Offence Offence's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Offence not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.post(\"/offences\", [checkAuth, isValidStaff], createRecord);\r\n\r\n/**\r\n * @api {put} /api/v1/offences/{recordId} Update offences\r\n * @apiName UpdateOffence\r\n * @apiGroup Offence\r\n * @apiPermission master\r\n * @apiParam {String} offender_type Offence offender_type\r\n * @apiParam {Number} offender_id Offence offender_id\r\n * @apiParam {String} offence Offence offence\r\n * @apiParam {Date} offence_date Offence offence_date\r\n * @apiParam {String} description Offence description\r\n * @apiParam {String} offence_status Offence offence_status (\"PENDING\", \"ARBITRATED\")\r\n * @apiParam {String} verdict Offence verdict (\"INNOCENT\", \"GUILTY\")\r\n * @apiParam {Number} verdict_by Offence verdict_by\r\n * @apiParam {Date} verdict_date Offence verdict_date\r\n * @apiParam {String} verdict_remark Offence verdict_remark\r\n * @apiParam {Number} fine Offence fine\r\n * @apiParam {String} discipline Offence discipline (\"WARNING\", \"SUSPENSION\", \"DISMISSED\")\r\n * @apiParam {String} suspension Offence suspension\r\n * @apiParam {Number} payment Offence paymentId\r\n * @apiSuccess {Object} Offence Offence's data.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n * @apiError 404 Offence not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.put(\"/offences/:recordId\", [checkAuth, isValidStaff], updateRecord);\r\n\r\n/**\r\n * @api {delete} /api/v1/offences/{recordId} Delete offences\r\n * @apiName DeleteOffence\r\n * @apiGroup Offence\r\n * @apiPermission master\r\n * @apiParam {String} access_token master access token.\r\n * @apiSuccess (Success 204) 204 No Content.\r\n * @apiError 404 Offence not found.\r\n * @apiError 401 master access only.\r\n */\r\nrouter.delete(\"/offences/:recordId\", [checkAuth, isValidStaff], deleteRecord);\r\n\r\nexport default router;\r\n"]}