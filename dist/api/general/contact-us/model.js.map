{"version":3,"sources":["../../../../src/api/general/contact-us/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","fullname","Joi","string","required","email","trim","phone","subject","message","request_type","valid","schemaUpdate","request_status","optional","remark","has_ticket","boolean","updated_by","schema","type","String","enum","default","Boolean","options","DATABASE","OPTIONS","newSchema","set","ContactUs","model"],"mappings":";;;;;;;AAgBA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;;;IAEQA,M,GAAWC,kB,CAAXD,M;AALR;AAlBA;;;;;;;;;;;;;;;;;IAwBQE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,cAAUC,cAAIC,MAAJ,GAAaC,QAAb,EADc;AAExBC,WAAOH,cAAIC,MAAJ,GAAaG,IAAb,GAAoBD,KAApB,GAA4BD,QAA5B,EAFiB;AAGxBG,WAAOL,cAAIC,MAAJ,GAAaG,IAAb,GAAoBF,QAApB,EAHiB;AAIxBI,aAASN,cAAIC,MAAJ,GAAaC,QAAb,EAJe;AAKxBK,aAASP,cAAIC,MAAJ,GAAaC,QAAb,EALe;AAMxBM,kBAAcR,cAAIC,MAAJ,GAAaG,IAAb,GAAoBK,KAApB,CAA0B,WAA1B,EAAuC,SAAvC,EAAkD,YAAlD,EAAgEP,QAAhE;AANU,CAArB;;AASA,IAAMQ,sCAAe;AACxBC,oBAAgBX,cAAIC,MAAJ,GAAaG,IAAb,GAAoBK,KAApB,CAA0B,QAA1B,EAAoC,QAApC,EAA8CG,QAA9C,EADQ;AAExBC,YAAQb,cAAIC,MAAJ,EAFgB;AAGxBa,gBAAYd,cAAIe,OAAJ,EAHY;AAIxBC,gBAAYhB,cAAIC,MAAJ,GAAaC,QAAb;AAJY,CAArB;;AAOA,IAAMe,0BAAS;AAClBlB,cAAU,EAAEmB,MAAMC,MAAR,EAAgBjB,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EADQ;AAElBC,WAAO,EAAEe,MAAMC,MAAR,EAAgBjB,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAFW;AAGlBG,WAAO,EAAEa,MAAMC,MAAR,EAAgBjB,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAHW;AAIlBI,aAAS,EAAEY,MAAMC,MAAR,EAAgBjB,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAJS;AAKlBK,aAAS,EAAEW,MAAMC,MAAR,EAAgBjB,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EALS;AAMlBM,kBAAc;AACVU,cAAMC,MADI;AAEVC,cAAM,CAAC,WAAD,EAAc,SAAd,EAAyB,YAAzB,CAFI;AAGVlB,kBAAU,CAAC,IAAD,EAAO,eAAP;AAHA,KANI;AAWlBS,oBAAgB;AACZO,cAAMC,MADM;AAEZC,cAAM,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,CAFM;AAGZC,iBAAS,SAHG;AAIZnB,kBAAU,CAAC,IAAD,EAAO,eAAP;AAJE,KAXE;AAiBlBW,YAAQ,EAAEK,MAAMC,MAAR,EAjBU;AAkBlBL,gBAAY,EAAEI,MAAMI,OAAR,EAAiBpB,UAAU,CAAC,IAAD,EAAO,eAAP,CAA3B,EAAoDmB,SAAS,KAA7D,EAlBM;AAmBlBL,gBAAY,EAAEE,MAAMtB,QAAR;AAnBM,CAAf;AAqBP,IAAM2B,UAAUC,oBAASC,OAAzB;;AAEA,IAAMC,YAAY,IAAIhC,MAAJ,CAAWuB,MAAX,EAAmBM,OAAnB,CAAlB;AACAG,UAAUC,GAAV,CAAc,YAAd,EAA4B,YAA5B;;AAEA,IAAMC,YAAYjC,mBAASkC,KAAT,CAAe,WAAf,EAA4BH,SAA5B,CAAlB;;kBAEeE,S","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {Number} id contact_us primaryKey\n * @property {String} fullname ContactUs fullname (required)\n * @property {String} email ContactUs email (required)\n * @property {String} phone ContactUs phone (required)\n * @property {String} subject ContactUs subject (required)\n * @property {String} message ContactUs message (required)\n * @property {String} request_type ContactUs request_type with values\n * \"COMPLAINT\", \"ENQUIRY\", \"SUGGESTION\", (required)\n * @property {String} request_status ContactUs request_status with values\n *  \"PENDING\", \"ACTIVE\", \"CLOSED\" (prohibited)\n * @property {String} remark ContactUs remark (prohibited)\n * @property {Boolean} has_ticket ContactUs has_ticket (prohibited)\n * @description ContactUs model holds record of all contact_us info from site visitors\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport Staff from \"../staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    fullname: Joi.string().required(),\n    email: Joi.string().trim().email().required(),\n    phone: Joi.string().trim().required(),\n    subject: Joi.string().required(),\n    message: Joi.string().required(),\n    request_type: Joi.string().trim().valid(\"COMPLAINT\", \"ENQUIRY\", \"SUGGESTION\").required(),\n};\n\nexport const schemaUpdate = {\n    request_status: Joi.string().trim().valid(\"ACTIVE\", \"CLOSED\").optional(),\n    remark: Joi.string(),\n    has_ticket: Joi.boolean(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    fullname: { type: String, required: [true, \"Why no input?\"] },\n    email: { type: String, required: [true, \"Why no input?\"] },\n    phone: { type: String, required: [true, \"Why no input?\"] },\n    subject: { type: String, required: [true, \"Why no input?\"] },\n    message: { type: String, required: [true, \"Why no input?\"] },\n    request_type: {\n        type: String,\n        enum: [\"COMPLAINT\", \"ENQUIRY\", \"SUGGESTION\"],\n        required: [true, \"Why no input?\"],\n    },\n    request_status: {\n        type: String,\n        enum: [\"PENDING\", \"ACTIVE\", \"CLOSED\"],\n        default: \"PENDING\",\n        required: [true, \"Why no input?\"],\n    },\n    remark: { type: String },\n    has_ticket: { type: Boolean, required: [true, \"Why no input?\"], default: false },\n    updated_by: { type: ObjectId },\n};\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"contact_us\");\n\nconst ContactUs = mongoose.model(\"ContactUs\", newSchema);\n\nexport default ContactUs;\n"]}