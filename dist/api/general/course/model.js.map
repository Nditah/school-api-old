{"version":3,"sources":["../../../../src/api/general/course/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","type","Joi","string","trim","optional","title","level","code","coefficient","description","classe","subject","teacher","created_by","required","schemaUpdate","updated_by","schema","String","enum","Number","ref","options","DATABASE","OPTIONS","newSchema","set","Course","model"],"mappings":";;;;;;;AAkBA;;;;AACA;;;;AAEA;;AAEA;;;;AACA;;;;AACA;;;;;;AALA;AApBA;AACA;;;;;;;;;;;;;;;;;IA0BQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADkB;AAExBC,WAAOJ,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAFiB;AAGxBE,WAAOL,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAHiB;AAIxBG,UAAMN,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAJkB;AAKxBI,iBAAaP,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EALW;AAMxBK,iBAAaR,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EANW;AAOxBM,YAAQT,cAAIC,MAAJ,GAAaE,QAAb,EAPgB;AAQxBO,aAASV,cAAIC,MAAJ,GAAaE,QAAb,EARe;AASxBQ,aAASX,cAAIC,MAAJ,GAAaE,QAAb,EATe;AAUxBS,gBAAYZ,cAAIC,MAAJ,GAAaY,QAAb;AAVY,CAArB;;AAaA,IAAMC,sCAAe;AACxBf,UAAMC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADkB;AAExBC,WAAOJ,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAFiB;AAGxBE,WAAOL,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAHiB;AAIxBG,UAAMN,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EAJkB;AAKxBI,iBAAaP,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EALW;AAMxBK,iBAAaR,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EANW;AAOxBM,YAAQT,cAAIC,MAAJ,GAAaE,QAAb,EAPgB;AAQxBO,aAASV,cAAIC,MAAJ,GAAaE,QAAb,EARe;AASxBQ,aAASX,cAAIC,MAAJ,GAAaE,QAAb,EATe;AAUxBY,gBAAYf,cAAIC,MAAJ,GAAaY,QAAb;AAVY,CAArB;;AAaA,IAAMG,0BAAS;AAClBjB,UAAM;AACFA,cAAMkB,MADJ;AAEFC,cAAM,CAAC,UAAD,EAAa,YAAb,CAFJ;AAGFL,kBAAU;AAHR,KADY;AAMlBT,WAAO,EAAEL,MAAMkB,MAAR,EAAgBJ,UAAU,CAAC,IAAD,EAAO,cAAP,CAA1B,EANW;AAOlBR,WAAO,EAAEN,MAAMkB,MAAR,EAAgBJ,UAAU,CAAC,KAAD,EAAQ,eAAR,CAA1B,EAPW;AAQlBP,UAAM,EAAEP,MAAMkB,MAAR,EAAgBJ,UAAU,CAAC,KAAD,EAAQ,cAAR,CAA1B,EARY;AASlBN,iBAAa,EAAER,MAAMoB,MAAR,EAAgBN,UAAU,CAAC,KAAD,EAAQ,qBAAR,CAA1B,EATK;AAUlBL,iBAAa,EAAET,MAAMkB,MAAR,EAVK;AAWlBR,YAAQ,EAAEV,MAAMH,QAAR,EAAkBwB,KAAK,QAAvB,EAXU;AAYlBV,aAAS,EAAEX,MAAMH,QAAR,EAAkBwB,KAAK,SAAvB,EAZS;AAalBT,aAAS,EAAEZ,MAAMH,QAAR,EAAkBwB,KAAK,OAAvB,EAbS;AAclBR,gBAAY,EAAEb,MAAMH,QAAR,EAAkBwB,KAAK,OAAvB,EAAgCP,UAAU,IAA1C,EAdM;AAelBE,gBAAY,EAAEhB,MAAMH,QAAR,EAAkBwB,KAAK,OAAvB;AAfM,CAAf;;AAkBP,IAAMC,UAAUC,oBAASC,OAAzB;;AAEA,IAAMC,YAAY,IAAI9B,MAAJ,CAAWsB,MAAX,EAAmBK,OAAnB,CAAlB;AACAG,UAAUC,GAAV,CAAc,YAAd,EAA4B,QAA5B;;AAEA,IAAMC,SAAS/B,mBAASgC,KAAT,CAAe,QAAf,EAAyBH,SAAzB,CAAf;;kBAEeE,M","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Decoder\n * @property {String} id Course ObjectId primaryKey\n * @property {String} type Course type (optional)\n * @property {String} title Course title (optional)\n * @property {String} level Course level (optional)\n * @property {String} code Course code (optional)\n * @property {String} coefficient Course coefficient (optional)\n * @property {String} description Course description (optional)\n * @property {String} classe Course classe (optional)\n * @property {String} subject Course subject (optional)\n * @property {String} teacher Course teacher (optional)\n * @property {String} created_by Course record created by\n * @property {String} updated_by Course record modified by\n * @description Course holds record of all courses in the school.\n */\n\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport { DATABASE } from \"../../../constants\";\n\nimport Classe from \"../classe/model\";\nimport Subject from \"../subject/model\";\nimport Staff from \"../staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    type: Joi.string().trim().optional(),\n    title: Joi.string().trim().optional(),\n    level: Joi.string().trim().optional(),\n    code: Joi.string().trim().optional(),\n    coefficient: Joi.string().trim().optional(),\n    description: Joi.string().trim().optional(),\n    classe: Joi.string().optional(),\n    subject: Joi.string().optional(),\n    teacher: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    type: Joi.string().trim().optional(),\n    title: Joi.string().trim().optional(),\n    level: Joi.string().trim().optional(),\n    code: Joi.string().trim().optional(),\n    coefficient: Joi.string().trim().optional(),\n    description: Joi.string().trim().optional(),\n    classe: Joi.string().optional(),\n    subject: Joi.string().optional(),\n    teacher: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    type: {\n        type: String,\n        enum: [\"ELECTIVE\", \"COMPULSORY\"],\n        required: true,\n    },\n    title: { type: String, required: [true, \"Why no name?\"] },\n    level: { type: String, required: [false, \"Why no level?\"] },\n    code: { type: String, required: [false, \"Why no code?\"] },\n    coefficient: { type: Number, required: [false, \"Why no coefficient?\"] },\n    description: { type: String },\n    classe: { type: ObjectId, ref: \"Classe\" },\n    subject: { type: ObjectId, ref: \"Subject\" },\n    teacher: { type: ObjectId, ref: \"Staff\" },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"course\");\n\nconst Course = mongoose.model(\"Course\", newSchema);\n\nexport default Course;\n"]}