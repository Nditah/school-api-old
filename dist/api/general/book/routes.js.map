{"version":3,"sources":["../../../../src/api/general/book/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAF,OAAOG,GAAP,CAAW,SAAX,EAAsB,CAACC,wBAAD,EAAYC,2BAAZ,CAAtB,EAAiDC,uBAAjD;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBAN,OAAOO,IAAP,CAAY,SAAZ,EAAuB,CAACH,wBAAD,EAAYC,2BAAZ,CAAvB,EAAkDG,wBAAlD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBAR,OAAOS,GAAP,CAAW,mBAAX,EAAgC,CAACL,wBAAD,EAAYC,2BAAZ,CAAhC,EAA2DK,wBAA3D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,mBAAd,EAAmC,CAACP,wBAAD,EAAYC,2BAAZ,CAAnC,EAA8DO,wBAA9D;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/stocks?id={recordId} Retrieve one or all records\n * @apiName RetrieveStock\n * @apiGroup Stock\n  * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/stocks?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/stocks\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/stocks Create stocks\n * @apiName CreateStock\n * @apiGroup Stock\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} type Stock type of goods\n *  \"VEHICLE\", \"ASSET\", \"MATERIAL\", \"PRODUCT\", \"SPARE\"  (required)\n * @apiParam {String} source Stock source of goods \"PURCHASED|PRODUCED\"  (required)\n * @apiParam {String} subsidiary Stock subsidiary (required)\n * @apiParam {ObjectId} store_id Stock store ObjectId (required)\n * @apiParam {ObjectId} asset_id Stock Asset ObjectId\n * @apiParam {ObjectId} material_id Stock Raw Material ObjectId\n * @apiParam {ObjectId} product_id Stock finished Product ObjectId\n * @apiParam {ObjectId} vehicle_id Stock Vehicle ObjectId\n * @apiParam {Number} quantity Stock quantity (required)\n * @apiParam {Number} price Stock price (required)\n * @apiParam {Number} min_order Stock minimum order quantity\n * @apiSuccess {Object} Stock Stock's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Stock not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/stocks\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/stocks/{recordId} Update stocks\n * @apiName UpdateStock\n * @apiGroup Stock\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiParam {String} type Stock type of goods\n *  \"VEHICLE\", \"ASSET\", \"MATERIAL\", \"PRODUCT\", \"SPARE\"  (required)\n * @apiParam {String} source Stock source of goods \"PURCHASED|PRODUCED\"  (required)\n * @apiParam {String} subsidiary Stock subsidiary (required)\n * @apiParam {ObjectId} store_id Stock store ObjectId (required)\n * @apiParam {ObjectId} asset_id Stock Asset ObjectId\n * @apiParam {ObjectId} material_id Stock Raw Material ObjectId\n * @apiParam {ObjectId} product_id Stock finished Product ObjectId\n * @apiParam {ObjectId} vehicle_id Stock Vehicle ObjectId\n * @apiParam {Number} quantity Stock quantity (required)\n * @apiParam {Number} price Stock price (required)\n * @apiParam {Number} min_order Stock minimum order quantity\n * @apiSuccess {Object} Stock Stock's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Stock not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/stocks/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/stocks/{recordId} Delete stocks\n * @apiName DeleteStock\n * @apiGroup Stock\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Stock not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/stocks/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}