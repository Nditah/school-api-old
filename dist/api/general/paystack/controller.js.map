{"version":3,"sources":["../../../../src/api/general/paystack/controller.js"],"names":["req","res","payload","body","options","method","uri","transUrl","headers","headersObj","auth","bearer","secretKey","json","then","status","data","message","catch","error","checkAuthorization","id","params","getTransaction","timelineTransaction","perPage","page","customer","from","to","amount","console","log","listTransaction","reference","verifyTransaction","verifyPaystack","totalTransaction","Accept","publicKey","process","env","PAYSTACK_TEST_PUBLIC_KEY","PAYSTACK_TEST_SECRET_KEY"],"mappings":";;;;;;;AAkBA;;;;;;;;;uEAQO,iBAAkCA,GAAlC,EAAuCC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,+BADH,GACaF,IAAIG,IADjB;AAEGC,+BAFH,GAEa;AACZC,oCAAQ,MADI;AAEZC,iCAAQC,QAAR,yBAFY;AAGZJ,kCAAMD,OAHM;AAIZM,qCAASC,UAJG;AAKZC,kCAAM,EAAEC,QAAQC,SAAV,EALM;AAMZC,kCAAM,IANM,CAMA;AANA,yBAFb;AAAA,yDAUI,8BAAGT,OAAH,EAAYU,IAAZ,CAAiB,UAACX,IAAD,EAAU;AAC9B,gCAAIA,KAAKY,MAAT,EAAiB,OAAO,kBAAQd,GAAR,EAAa,GAAb,EAAkBE,KAAKa,IAAvB,EAA6Bb,KAAKc,OAAlC,CAAP;AACjB,mCAAO,eAAKhB,GAAL,EAAU,GAAV,EAAeE,KAAKc,OAApB,CAAP;AACH,yBAHM,EAGJC,KAHI,CAGE,UAACC,KAAD,EAAW;AAChB,2CAAKlB,GAAL,EAAU,GAAV,4BAAuCkB,MAAMF,OAA7C;AACH,yBALM,CAVJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeG,kB;;;;;;wEAkBf,kBAA8BpB,GAA9B,EAAmCC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACKoB,0BADL,GACYrB,IAAIsB,MADhB,CACKD,EADL;AAEGjB,+BAFH,GAEa;AACZC,oCAAQ,KADI;AAEZC,iCAAQC,QAAR,SAAoBc,EAFR;AAGZb,qCAASC,UAHG;AAIZC,kCAAM,EAAEC,QAAQC,SAAV,EAJM;AAKZC,kCAAM;AALM,yBAFb;AAAA,0DASI,8BAAGT,OAAH,EAAYU,IAAZ,CAAiB,UAACX,IAAD,EAAU;AAC9B,gCAAIA,KAAKY,MAAT,EAAiB,OAAO,kBAAQd,GAAR,EAAa,GAAb,EAAkBE,KAAKa,IAAvB,EAA6Bb,KAAKc,OAAlC,CAAP;AACjB,mCAAO,eAAKhB,GAAL,EAAU,GAAV,EAAeE,KAAKc,OAApB,CAAP;AACH,yBAHM,EAGJC,KAHI,CAGE,UAACC,KAAD,EAAW;AAChB,2CAAKlB,GAAL,EAAU,GAAV,0BAAqCkB,MAAMF,OAA3C;AACH,yBALM,CATJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeM,c;;;;;;wEAiBf,kBAAmCvB,GAAnC,EAAwCC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACKoB,0BADL,GACYrB,IAAIsB,MADhB,CACKD,EADL;AAEGjB,+BAFH,GAEa;AACZC,oCAAQ,KADI;AAEZC,iCAAQC,QAAR,kBAA6Bc,EAFjB;AAGZX,kCAAM,EAAEC,QAAQC,SAAV,EAHM;AAIZJ,qCAASC,UAJG;AAKZI,kCAAM,IALM,CAKA;AALA,yBAFb;AAAA,0DASI,8BAAGT,OAAH,EAAYU,IAAZ,CAAiB,UAACX,IAAD,EAAU;AAC9B,gCAAIA,KAAKY,MAAT,EAAiB,OAAO,kBAAQd,GAAR,EAAa,GAAb,EAAkBE,KAAKa,IAAvB,EAA6Bb,KAAKc,OAAlC,CAAP;AACjB,mCAAO,eAAKhB,GAAL,EAAU,GAAV,EAAeE,KAAKc,OAApB,CAAP;AACH,yBAHM,EAGJC,KAHI,CAGE,UAACC,KAAD,EAAW;AAChB,2CAAKlB,GAAL,EAAU,GAAV,+BAA0CkB,MAAMF,OAAhD;AACH,yBALM,CATJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeO,mB;;;;;AAiBtB;;;;wEACO,kBAA+BxB,GAA/B,EAAoCC,GAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oCAC2DD,IAAIG,IAD/D,EACKsB,OADL,aACKA,OADL,EACcC,IADd,aACcA,IADd,EACoBC,QADpB,aACoBA,QADpB,EAC8BZ,MAD9B,aAC8BA,MAD9B,EACsCa,IADtC,aACsCA,IADtC,EAC4CC,EAD5C,aAC4CA,EAD5C,EACgDC,MADhD,aACgDA,MADhD;AAEG5B,+BAFH,GAEa,EAFb;;AAGH,4BAAIuB,OAAJ,EAAavB,QAAQuB,OAAR,GAAkBA,OAAlB;AACb,4BAAIC,IAAJ,EAAUxB,QAAQwB,IAAR,GAAeA,IAAf;AACV,4BAAIC,QAAJ,EAAczB,QAAQyB,QAAR,GAAmBA,QAAnB;AACd,4BAAIZ,MAAJ,EAAYb,QAAQa,MAAR,GAAiBA,MAAjB;AACZ,4BAAIa,IAAJ,EAAU1B,QAAQ0B,IAAR,GAAeA,IAAf;AACV,4BAAIC,EAAJ,EAAQ3B,QAAQ2B,EAAR,GAAaA,EAAb;AACR,4BAAIC,MAAJ,EAAY5B,QAAQ4B,MAAR,GAAiBA,MAAjB;;AAEZC,gCAAQC,GAAR,CAAY,eAAZ,EAA6B9B,OAA7B;AACME,+BAZH,GAYa;AACZC,oCAAQ,KADI;AAEZC,sCAAQC,QAFI;AAGZJ,kCAAMD,OAHM;AAIZM,qCAASC,UAJG;AAKZC,kCAAM,EAAEC,QAAQC,SAAV,EALM;AAMZC,kCAAM,IANM,CAMA;AANA,yBAZb;AAAA,0DAoBI,8BAAGT,OAAH,EAAYU,IAAZ,CAAiB,UAACX,IAAD,EAAU;AAC9B,gCAAIA,KAAKY,MAAT,EAAiB,OAAO,kBAAQd,GAAR,EAAa,GAAb,EAAkBE,KAAKa,IAAvB,EAA6Bb,KAAKc,OAAlC,CAAP;AACjB,mCAAO,eAAKhB,GAAL,EAAU,GAAV,EAAeE,KAAKc,OAApB,CAAP;AACH,yBAHM,EAGJC,KAHI,CAGE,UAACC,KAAD,EAAW;AAChB,2CAAKlB,GAAL,EAAU,GAAV,0BAAqCkB,MAAMF,OAA3C;AACH,yBALM,CApBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAegB,e;;;;;;wEA4Bf,kBAAiCjC,GAAjC,EAAsCC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACKiC,iCADL,GACmBlC,IAAIsB,MADvB,CACKY,SADL;AAEG9B,+BAFH,GAEa;AACZC,oCAAQ,KADI;AAEZC,iCAAQC,QAAR,gBAA2B2B,SAFf;AAGZ1B,qCAASC,UAHG;AAIZC,kCAAM,EAAEC,QAAQC,SAAV,EAJM;AAKZC,kCAAM,IALM,CAKA;AALA,yBAFb;AAAA,0DASI,8BAAGT,OAAH,EAAYU,IAAZ,CAAiB,UAACX,IAAD,EAAU;AAC9B,gCAAIA,KAAKY,MAAT,EAAiB,OAAO,kBAAQd,GAAR,EAAa,GAAb,EAAkBE,KAAKa,IAAvB,EAA6Bb,KAAKc,OAAlC,CAAP;AACjB,mCAAO,eAAKhB,GAAL,EAAU,GAAV,EAAeE,KAAKc,OAApB,CAAP;AACH,yBAHM,EAGJC,KAHI,CAGE,UAACC,KAAD,EAAW;AAChB,2CAAKlB,GAAL,EAAU,GAAV,uBAAkCkB,MAAMF,OAAxC;AACH,yBALM,CATJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAekB,iB;;;;;;wEAiBf,kBAA8BD,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACG9B,+BADH,GACa;AACZC,oCAAQ,KADI;AAEZC,iCAAQC,QAAR,gBAA2B2B,SAFf;AAGZ1B,qCAASC,UAHG;AAIZC,kCAAM,EAAEC,QAAQC,SAAV,EAJM;AAKZC,kCAAM,IALM,CAKA;AALA,yBADb;AAAA,0DAQI,8BAAGT,OAAH,EAAYU,IAAZ,CAAiB;AAAA,mCAAQX,IAAR;AAAA,yBAAjB,EAA+Be,KAA/B,CAAqC;AAAA,mCAASC,KAAT;AAAA,yBAArC,CARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeiB,c;;;;;;wEAWf,kBAAgCpC,GAAhC,EAAqCC,GAArC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCACkBD,IAAIsB,MADtB,EACKM,IADL,eACKA,IADL,EACWC,EADX,eACWA,EADX;AAEGzB,+BAFH,GAEa;AACZC,oCAAQ,KADI;AAEZC,iCAAQC,QAAR,YAFY;AAGZJ,kCAAM,EAAEyB,UAAF,EAAQC,MAAR,EAHM;AAIZrB,qCAASC,UAJG;AAKZC,kCAAM,EAAEC,QAAQC,SAAV,EALM;AAMZC,kCAAM,IANM,CAMA;AANA,yBAFb;AAAA,0DAUI,8BAAGT,OAAH,EAAYU,IAAZ,CAAiB,UAACX,IAAD,EAAU;AAC9B,gCAAIA,KAAKY,MAAT,EAAiB,OAAO,kBAAQd,GAAR,EAAa,GAAb,EAAkBE,KAAKa,IAAvB,EAA6Bb,KAAKc,OAAlC,CAAP;AACjB,mCAAO,eAAKhB,GAAL,EAAU,GAAV,EAAeE,KAAKc,OAApB,CAAP;AACH,yBAHM,EAGJC,KAHI,CAGE,UAACC,KAAD,EAAW;AAChB,2CAAKlB,GAAL,EAAU,GAAV,gCAA2CkB,MAAMF,OAAjD;AACH,yBALM,CAVJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeoB,gB;;;;;AAvItB;;;;AACA;;;;;;AAEA,IAAM9B,WAAW,qCAAjB,C,CAAwD;AACxD;AACA;AACA;AACA;AACA;;AAEA,IAAME,aAAa;AACf6B,YAAQ,kBADO;AAEf,oBAAgB,kBAFD;AAGfzB,UAAM;AAHS,CAAnB;;AAMA,IAAM0B,YAAYC,QAAQC,GAAR,CAAYC,wBAA9B;AACA,IAAM9B,YAAY4B,QAAQC,GAAR,CAAYE,wBAA9B","file":"controller.js","sourcesContent":["import rp from \"request-promise\";\r\nimport { success, fail } from \"../../../lib\";\r\n\r\nconst transUrl = \"https://api.paystack.co/transaction\"; // list\r\n// const verifyUrl = \"/verify/reference\";\r\n// Fetch https://api.paystack.co/transaction/id\r\n// Transaction Totals https://api.paystack.co/transaction/totals\r\n// Export Transactions: https://api.paystack.co/transaction/export\r\n// Check Authorization: https://api.paystack.co/transaction/check_authorization\r\n\r\nconst headersObj = {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n    json: true,\r\n};\r\n\r\nconst publicKey = process.env.PAYSTACK_TEST_PUBLIC_KEY;\r\nconst secretKey = process.env.PAYSTACK_TEST_SECRET_KEY;\r\n/*\r\nif (process.env.NODE_ENV === \"production\") {\r\n    publicKey = process.env.PAYSTACK_LIVE_PUBLIC_KEY;\r\n    secretKey = process.env.PAYSTACK_LIVE_SECRET_KEY;\r\n// tnxHash = process.env.FLUTTERWAVE_HASH;\r\n}\r\n*/\r\n\r\nexport async function checkAuthorization(req, res) {\r\n    const payload = req.body;\r\n    const options = {\r\n        method: \"POST\",\r\n        uri: `${transUrl}/check_authorization`,\r\n        body: payload,\r\n        headers: headersObj,\r\n        auth: { bearer: secretKey },\r\n        json: true, // Automatically stringifies the body to JSON\r\n    };\r\n    return rp(options).then((body) => {\r\n        if (body.status) return success(res, 200, body.data, body.message);\r\n        return fail(res, 200, body.message);\r\n    }).catch((error) => {\r\n        fail(res, 500, `Error checking Auth. ${error.message}`);\r\n    });\r\n}\r\n\r\nexport async function getTransaction(req, res) {\r\n    const { id } = req.params;\r\n    const options = {\r\n        method: \"GET\",\r\n        uri: `${transUrl}/${id}`,\r\n        headers: headersObj,\r\n        auth: { bearer: secretKey },\r\n        json: true,\r\n    };\r\n    return rp(options).then((body) => {\r\n        if (body.status) return success(res, 200, body.data, body.message);\r\n        return fail(res, 200, body.message);\r\n    }).catch((error) => {\r\n        fail(res, 500, `Error getting Tnx. ${error.message}`);\r\n    });\r\n}\r\n\r\nexport async function timelineTransaction(req, res) {\r\n    const { id } = req.params;\r\n    const options = {\r\n        method: \"GET\",\r\n        uri: `${transUrl}/timeline/${id}`,\r\n        auth: { bearer: secretKey },\r\n        headers: headersObj,\r\n        json: true, // Automatically stringifies the body to JSON\r\n    };\r\n    return rp(options).then((body) => {\r\n        if (body.status) return success(res, 200, body.data, body.message);\r\n        return fail(res, 200, body.message);\r\n    }).catch((error) => {\r\n        fail(res, 500, `Error getting timeline. ${error.message}`);\r\n    });\r\n}\r\n\r\n// eslint-disable-next-line complexity\r\nexport async function listTransaction(req, res) {\r\n    const { perPage, page, customer, status, from, to, amount } = req.body;\r\n    const payload = {};\r\n    if (perPage) payload.perPage = perPage;\r\n    if (page) payload.page = page;\r\n    if (customer) payload.customer = customer;\r\n    if (status) payload.status = status;\r\n    if (from) payload.from = from;\r\n    if (to) payload.to = to;\r\n    if (amount) payload.amount = amount;\r\n\r\n    console.log(\"query options\", payload);\r\n    const options = {\r\n        method: \"GET\",\r\n        uri: `${transUrl}`,\r\n        body: payload,\r\n        headers: headersObj,\r\n        auth: { bearer: secretKey },\r\n        json: true, // Automatically stringifies the body to JSON\r\n    };\r\n    return rp(options).then((body) => {\r\n        if (body.status) return success(res, 200, body.data, body.message);\r\n        return fail(res, 200, body.message);\r\n    }).catch((error) => {\r\n        fail(res, 500, `Error listing Tnx. ${error.message}`);\r\n    });\r\n}\r\n\r\nexport async function verifyTransaction(req, res) {\r\n    const { reference } = req.params;\r\n    const options = {\r\n        method: \"GET\",\r\n        uri: `${transUrl}/verify/${reference}`,\r\n        headers: headersObj,\r\n        auth: { bearer: secretKey },\r\n        json: true, // Automatically stringifies the body to JSON\r\n    };\r\n    return rp(options).then((body) => {\r\n        if (body.status) return success(res, 200, body.data, body.message);\r\n        return fail(res, 200, body.message);\r\n    }).catch((error) => {\r\n        fail(res, 500, `Error list Tnx. ${error.message}`);\r\n    });\r\n}\r\n\r\nexport async function verifyPaystack(reference) {\r\n    const options = {\r\n        method: \"GET\",\r\n        uri: `${transUrl}/verify/${reference}`,\r\n        headers: headersObj,\r\n        auth: { bearer: secretKey },\r\n        json: true, // Automatically stringifies the body to JSON\r\n    };\r\n    return rp(options).then(body => body).catch(error => error);\r\n}\r\n\r\nexport async function totalTransaction(req, res) {\r\n    const { from, to } = req.params;\r\n    const options = {\r\n        method: \"GET\",\r\n        uri: `${transUrl}/totals`,\r\n        body: { from, to },\r\n        headers: headersObj,\r\n        auth: { bearer: secretKey },\r\n        json: true, // Automatically stringifies the body to JSON\r\n    };\r\n    return rp(options).then((body) => {\r\n        if (body.status) return success(res, 200, body.data, body.message);\r\n        return fail(res, 200, body.message);\r\n    }).catch((error) => {\r\n        fail(res, 500, `Error getting total Tnx. ${error.message}`);\r\n    });\r\n}\r\n"]}