{"version":3,"sources":["../../../../src/api/general/paystack/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","getTransaction","timelineTransaction","listTransaction","verifyTransaction","totalTransaction","checkAuthorization"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AASA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;AAWAF,OAAOG,GAAP,CAAW,gCAAX,EAA6C,CAACC,wBAAD,EAAYC,2BAAZ,CAA7C,EAAwEC,0BAAxE;;AAEA;;;;;;;;;;;AAWAN,OAAOG,GAAP,CAAW,qCAAX,EAAkD,CAACC,wBAAD,EAAYC,2BAAZ,CAAlD,EAA6EE,+BAA7E;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBAP,OAAOG,GAAP,CAAW,6BAAX,EAA0C,CAACC,wBAAD,EAAYC,2BAAZ,CAA1C,EAAqEG,2BAArE;;AAEA;;;;;;;;;;;AAWAR,OAAOG,GAAP,CAAW,0CAAX,EAAuD,CAACC,wBAAD,EAAYC,2BAAZ,CAAvD,EAAkFI,6BAAlF;;AAEA;;;;;;;;;;;;AAYAT,OAAOG,GAAP,CAAW,+BAAX,EAA4C,CAACC,wBAAD,EAAYC,2BAAZ,CAA5C,EAAuEK,4BAAvE;;AAEA;;;;;;;;;;;;;;AAcAV,OAAOG,GAAP,CAAW,4CAAX,EAAyD,CAACC,wBAAD,EAAYC,2BAAZ,CAAzD,EAAoFM,8BAApF;;kBAEeX,M","file":"routes.js","sourcesContent":["import express from \"express\";\r\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\r\nimport {\r\n    checkAuthorization,\r\n    getTransaction,\r\n    timelineTransaction,\r\n    listTransaction,\r\n    verifyTransaction,\r\n    totalTransaction,\r\n} from \"./controller\";\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @api {get} /api/v1/paystack-transactions/get/{id} Retrieve one record\r\n * @apiName RetrieveOnePaystackTransaction\r\n * @apiGroup PaystackTransaction\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i https://mis-api.herokuapp.com/api/v1/paystack-transactions/get/2\r\n  * @apiParam {Number} id Unique id of the record to retrieve (optional)\r\n * @apiDescription Records  of account headings belonging to one classification\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/paystack-transactions/get/:id\", [checkAuth, isValidStaff], getTransaction);\r\n\r\n/**\r\n * @api {get} /api/v1/paystack-transactions/timeline/{id} View Transaction Timeline\r\n * @apiName TimelinePaystackTransaction\r\n * @apiGroup PaystackTransaction\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i https://mis-api.herokuapp.com/api/v1/paystack-transactions/timeline/2\r\n  * @apiParam {Number} id Unique id of the record to retrieve (optional)\r\n * @apiDescription View Transaction Timeline\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/paystack-transactions/timeline/:id\", [checkAuth, isValidStaff], timelineTransaction);\r\n\r\n/**\r\n * @api {get} /api/v1/paystack-transactions/list?perPage={perPage} Retrieve one or all records\r\n * @apiName ListPaystackTransaction\r\n * @apiGroup PaystackTransaction\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i https://mis-api.herokuapp.com/api/v1/paystack-transactions/list?perPage=50&page=1\r\n * @apiParam {Number} perPage Specify how many records you want to retrieve per page\r\n * @apiParam {Number} page Specify exactly what page you want to retrieve\r\n * @apiParam {Number} customer Specify an ID for the customer whose transactions\r\n *  you want to retrieve\r\n * @apiParam {String} status Filter transactions by\r\n * status ('failed', 'success', 'abandoned')\r\n * @apiParam {Date} from datetime A timestamp from which to start\r\n *  listing transaction e.g. 2016-09-24T00:00:05.000Z, 2016-09-21\r\n * @apiParam {Date} to datetime A timestamp at which to stop listing\r\n *  transaction e.g. 2016-09-24T00:00:05.000Z, 2016-09-21\r\n * @apiParam {Number} amount Filter transactions by amount. Specify the amount in kobo.\r\n * @apiDescription Records  of account headings belonging to one classification\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/paystack-transactions/list\", [checkAuth, isValidStaff], listTransaction);\r\n\r\n/**\r\n * @api {get} /api/v1/paystack-transactions/verify/{reference} Retrieve one record\r\n * @apiName VerifyPaystackTransaction\r\n * @apiGroup PaystackTransaction\r\n * @apiExample {curl} Example usage for retieving a record:\r\n *      curl -i https://mis-api.herokuapp.com/api/v1/paystack-transactions/verify/123abc123fkfk\r\n * @apiParam {String} reference PaystackTransaction reference\r\n * @apiDescription Records  of account headings belonging to one classification\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/paystack-transactions/verify/:reference\", [checkAuth, isValidStaff], verifyTransaction);\r\n\r\n/**\r\n * @api {get} /api/v1/paystack-transactions/totals Total amount received on your account\r\n * @apiName TotalPaystackTransaction\r\n * @apiGroup PaystackTransaction\r\n * @apiExample {curl} Example usage for retieving a single record:\r\n *      curl -i https://mis-api.herokuapp.com/api/v1/paystack-transactions?from=12-12-2018&to=12-12-2019\r\n * @apiParam {Date} from Paystack Transaction begining date\r\n * @apiParam {Date} to Paystack Transaction ending date\r\n * @apiDescription Records of the Total amount received on your account\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/paystack-transactions/totals\", [checkAuth, isValidStaff], totalTransaction);\r\n\r\n/**\r\n * @api {get} /api/v1/paystack-transactions/check-authorization Check Authorization\r\n * @apiName CheckAuthorizationPaystackTransaction\r\n * @apiGroup PaystackTransaction\r\n * @apiParam {String} authorization_code Authorization code for mastercard or VISA authorization\r\n *  belonging to email REQUIRED\r\n * @apiParam {Number} amount Amount in kobo REQUIRED\r\n * @apiParam {String} email Customer's email address REQUIRED\r\n * @apiParam {String} currency A currency for the amount we want to check e.g. NGN\r\n * @apiDescription All mastercard and visa authorizations can be checked with this\r\n *  endpoint to know if they have funds for the payment you seek.\r\n * @apiSuccess {Object[]} Array of Objects of records.\r\n * @apiError {Object} 400 Some parameters may contain invalid values.\r\n */\r\nrouter.get(\"/paystack-transactions/check-authorization\", [checkAuth, isValidStaff], checkAuthorization);\r\n\r\nexport default router;\r\n"]}