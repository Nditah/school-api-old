{"version":3,"sources":["../../../../src/api/general/fees-payment/routes.js"],"names":["router","express","Router","get","fetchRecord","post","checkAuth","isValidStaff","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;;AAiBAF,OAAOG,GAAP,CAAW,gBAAX,EAA6BC,uBAA7B;;AAEA;;;;;;;;;;;;;;;;;AAiBAJ,OAAOK,IAAP,CAAY,gBAAZ,EAA8B,CAACC,wBAAD,EAAYC,2BAAZ,CAA9B,EAAyDC,wBAAzD;;AAEA;;;;;;;;;;;;;;;;;AAiBAR,OAAOS,GAAP,CAAW,0BAAX,EAAuC,CAACH,wBAAD,EAAYC,2BAAZ,CAAvC,EAAkEG,wBAAlE;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,0BAAd,EAA0C,CAACL,wBAAD,EAAYC,2BAAZ,CAA1C,EAAqEK,wBAArE;;kBAEeZ,M","file":"routes.js","sourcesContent":["import express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/v1/fees_payments?id={recordId} Retrieve FeesPayment records\n * @apiName RetrieveFeesPayment filter, skip, limit, sort, projection\n * @apiGroup FeesPayment\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/fees_payments?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records of all Fees Payments and branches worldwide.\n * Routes are established as links between FeesPayment. Certain Fees Payments are Hubs.\n * Read more from https://www.npmjs.com/package/api-query-params\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/fees_payments\", fetchRecord);\n\n/**\n * @api {post} /api/v1/fees_payments Create a fees payments record\n * @apiName CreateFeesPayments\n * @apiGroup FeesPayments\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} fees_type_id Fees Payments ,\n * @apiParam {String} student_id Fees Payments student_id (required)\n * @apiParam {String} payment_method Fees Payments payment_method (required),\n * @apiParam {Number} amount Fees Payments amount number\n * @apiParam {String} deposition Fees Payments deposition String\n * @apiParam {Date} pay_date Fees Payments pay_date Date\n * @apiParam {String} remark Fees Payments remark String\n * @apiSuccess {Object} FeesPayments FeesPayments's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Fees Payments not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/fees_payments\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/v1/fees_payments/{recordId} Update a FeesPayments record\n * @apiName UpdateFeesPayments\n * @apiGroup FeesPayments\n * @apiHeader {String} Authorization authorization token\n * @apiParam {String} fees_type_id Fees Payments ,\n * @apiParam {String} student_id Fees Payments student_id (required)\n * @apiParam {String} payment_method Fees Payments payment_method (required),\n * @apiParam {Number} amount Fees Payments amount number\n * @apiParam {String} deposition Fees Payments deposition String\n * @apiParam {Date} pay_date Fees Payments pay_date Date\n * @apiParam {String} remark Fees Payments remark String\n * @apiSuccess {Object} FeesPayments FeesPayments's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 FeesPayments not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/fees_payments/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/v1/fees_payments/{recordId} Delete a FeesPayments record\n * @apiName DeleteFeesPayment\n * @apiGroup FeesPayments\n * @apiHeader {String} Authorization authorization token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 FeesPayments not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/fees_payments/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}