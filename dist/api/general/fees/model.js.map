{"version":3,"sources":["../../../../src/api/general/fees/model.js"],"names":["Schema","mongoose","ObjectId","Types","PAYMENT_METHOD","PAYMENT","METHOD","feesCreate","type","Joi","string","optional","classe","amount","description","created_by","required","feesUpdate","updated_by","feesSchema","String","Number","ref","options","DATABASE","OPTIONS","newFeesSchema","set","plugin","mongoose_csv","Fees","model","feesPaymentCreate","fees_type_id","student_id","trim","payment_method","valid","Object","values","number","deposition","pay_date","date","remark","status","feesPaymentUpdate","feesPaymentSchema","comment","enum","Date","newFeesPaymentSchema","FeesPayment"],"mappings":"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","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE, PAYMENT } from \"../../../constants\";\nimport Staff from \"../staff/model\";\nimport Voucher from \"../voucher/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\nconst PAYMENT_METHOD = PAYMENT.METHOD;\n\nexport const feesCreate = {\n    type: Joi.string().optional(),\n    classe: Joi.string().optional(),\n    amount: Joi.string().optional(),\n    description: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const feesUpdate = {\n    type: Joi.string().optional(),\n    classe: Joi.string().optional(),\n    amount: Joi.string().optional(),\n    description: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\n/**\n * @author 4Decoder\n * @property {ObjectId} id Table primaryKey\n * @property {String} type Type of fees to pay,\n * @property {ObjectId} classe_id Fees for a particular class(required),\n * @property {Number} amount Amount for each class,\n * @property {String} description Table description about fee payment\n * @property {ObjectId} created_by Table record created by\n * @property {ObjectId} updated_by Table record modified by\n * @description Table holds record of all cities with table_list\n */\nexport const feesSchema = {\n    type: { type: String },\n    classe: { type: ObjectId, required: true },\n    amount: { type: Number, required: true },\n    description: { type: String },\n    created_by: { type: ObjectId, ref: \"Staff\", required: true },\n    updated_by: { type: ObjectId },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newFeesSchema = new Schema(feesSchema, options);\nnewFeesSchema.set(\"collection\", \"fees\");\nnewFeesSchema.plugin(mongoose_csv);\n\nconst Fees = mongoose.model(\"Fees\", newFeesSchema);\n\n//* ==========FEES-PAYMENT =============\n\n/**\n * @author 4Dcoder\n * @property {ObjectId} id FeesPayment primaryKey\n * @property {ObjectId} student FeesPayment Student Name\n * @property {ObjectId} fees_type_id Type of Fees to be paid\n * @property {Number} amount Amount to be Paid\n * @property {String} deposition Deposition of fees\n * @property {Enum} payment_method payment payment-method \"TRANSFER|CASH|BANK-DEPOSIT|CHEQUE\"\n * @property {Date} pay_date Fees payment date\n * @property {String} remark Fees Payment remark or any comment\n * @property {Enum} status payment status \"PAID|NOT-PAID|ON-SCHOLARSHIP\"\n * @description Fees payment summary\n */\n\nexport const feesPaymentCreate = {\n    fees_type_id: Joi.string().optional(),\n    student_id: Joi.string().trim().optional(),\n    payment_method: Joi.string().valid(Object.values(PAYMENT_METHOD)).optional(),\n    amount: Joi.number().optional(),\n    deposition: Joi.string().optional(),\n    pay_date: Joi.date().optional(),\n    remark: Joi.string().optional(),\n    status: Joi.string().optional(),\n    created_by: Joi.string().required(),\n};\n\nexport const feesPaymentUpdate = {\n    fees_type_id: Joi.string().optional(),\n    student_id: Joi.string().trim().optional(),\n    payment_method: Joi.string().valid(Object.values(PAYMENT_METHOD)).optional(),\n    amount: Joi.number().optional(),\n    deposition: Joi.string().optional(),\n    pay_date: Joi.date().optional(),\n    remark: Joi.string().optional(),\n    status: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const feesPaymentSchema = {\n    fees_type_id: { type: ObjectId, required: true, comment: \"Fees_type\" },\n    student_id: { type: ObjectId, required: true, comment: \"Student name\" },\n    payment_method: {\n        type: String,\n        enum: Object.values(PAYMENT_METHOD),\n        required: [false, \"Why no input?\"],\n    },\n    amount: { type: Number, ref: \"Amount\" },\n    deposition: { type: String },\n    pay_date: { type: Date },\n    remark: { type: String },\n    status: { type: String },\n    created_by: { type: ObjectId, required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst newFeesPaymentSchema = new Schema(feesPaymentSchema, options);\nnewFeesPaymentSchema.set(\"collection\", \"fees_payment\");\nconst FeesPayment = mongoose.model(\"FeesPayment\", newFeesPaymentSchema);\n\nexport { Fees, FeesPayment };\n"]}