{"version":3,"sources":["../../../../src/api/general/expense/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","amount","Joi","number","trim","required","description","string","created_by","schemaUpdate","updated_by","schema","type","Number","unique","String","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","Expense","model","insertMany","table"],"mappings":";;;;;;;AAQA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;AAVA;AACA;;;;;;;IAeQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,YAAQC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADgB;AAExBC,iBAAaJ,cAAIK,MAAJ,GAAaH,IAAb,GAAoBC,QAApB,EAFW;AAGxBG,gBAAYN,cAAIK,MAAJ,GAAaF,QAAb;AAHY,CAArB;;AAMA,IAAMI,sCAAe;AACxBR,YAAQC,cAAIC,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADgB;AAExBC,iBAAaJ,cAAIK,MAAJ,GAAaH,IAAb,GAAoBC,QAApB,EAFW;AAGxBK,gBAAYR,cAAIK,MAAJ,GAAaF,QAAb;AAHY,CAArB;;AAMA,IAAMM,0BAAS;AAClBV,YAAQ,EAAEW,MAAMC,MAAR,EAAgBR,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAAmDS,QAAQ,IAA3D,EADU;AAElBR,iBAAa,EAAEM,MAAMG,MAAR,EAAgBV,UAAU,CAAC,IAAD,EAAO,eAAP,CAA1B,EAFK;AAGlBG,gBAAY,EAAEI,MAAMd,QAAR,EAAkBO,UAAU,IAA5B,EAAkCW,KAAK,OAAvC,EAHM;AAIlBN,gBAAY,EAAEE,MAAMd,QAAR,EAAkBkB,KAAK,OAAvB;AAJM,CAAf;;AAOP,IAAMC,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAI3B,MAAJ,CAAWe,MAAX,EAAmBU,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,SAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,UAAU9B,mBAAS+B,KAAT,CAAe,SAAf,EAA0BL,SAA1B,CAAhB;AACA,IAAIN,OAAJ,EAAa;AAAEU,YAAQE,UAAR,CAAmBC,eAAnB;AAA4B;;kBAE5BH,O","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\r\n/**\r\n * @author 4Dcoder\r\n * @property {Number} id expense primaryKey\r\n * @property {String} amount Expense amount (required)\r\n * @property {String} description Expense description (required)\r\n * @description Expense model holds record of all expenses the school have\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport table from \"./table\";\r\nimport Staff from \"../staff/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    amount: Joi.number().trim().required(),\r\n    description: Joi.string().trim().required(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    amount: Joi.number().trim().required(),\r\n    description: Joi.string().trim().required(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    amount: { type: Number, required: [true, \"Why no input?\"], unique: true },\r\n    description: { type: String, required: [true, \"Why no input?\"] },\r\n    created_by: { type: ObjectId, required: true, ref: \"Staff\" },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"expense\");\r\nnewSchema.plugin(mongoose_csv);\r\n\r\nconst Expense = mongoose.model(\"Expense\", newSchema);\r\nif (preload) { Expense.insertMany(table); }\r\n\r\nexport default Expense;\r\n"]}