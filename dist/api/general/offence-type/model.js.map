{"version":3,"sources":["../../../../src/api/general/offence-type/model.js"],"names":["Joi","mongoose","mongoose_csv","DATABASE","table","Staff","Schema","ObjectId","Types","schemaCreate","code","string","required","offender_type","valid","name","fine","number","discipline","suspension_days","description","created_by","schemaUpdate","optional","updated_by","schema","type","String","enum","Number","default","ref","preload","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","OffenceType","model","insertMany"],"mappings":"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","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {Number} id OffenceType primaryKey\n * @property {String} code OffenceType code (required)\n * @property {String} offender_type OffenceType offender_type \"PARTNER\", \"STAFF\" (required)\n * @property {String} name OffenceType name (required)\n * @property {Number} fine OffenceType fine (required)\n * @property {String} discipline OffenceType discipline\n * \"WARNING\", \"SUSPENSION\", \"DISMISSED\" (required)\n * @property {Number} suspension_days OffenceType suspension_days (required)\n * @property {String} description OffenceType description (required)\n * @description OffenceType model holds record of all offence categories\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport table from \"./table\";\nimport Staff from \"../staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    code: Joi.string().required(),\n    offender_type: Joi.string().valid(\"PARTNER\", \"STAFF\").required(),\n    name: Joi.string().required(),\n    fine: Joi.number().required(),\n    discipline: Joi.string().valid(\"WARNING\", \"SUSPENSION\", \"DISMISSED\").required(),\n    suspension_days: Joi.number().required(),\n    description: Joi.string().required(),\n    created_by: Joi.string().required(),\n};\n\nexport const schemaUpdate = {\n    code: Joi.string().optional(),\n    offender_type: Joi.string().valid(\"PARTNER\", \"STAFF\").optional(),\n    name: Joi.string().optional(),\n    fine: Joi.number().optional(),\n    discipline: Joi.string().valid(\"WARNING\", \"SUSPENSION\", \"DISMISSED\").optional(),\n    suspension_days: Joi.number().optional(),\n    description: Joi.string().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    code: { type: String },\n    offender_type: { type: String, enum: [\"PARTNER\", \"STAFF\"] },\n    name: { type: String },\n    fine: { type: Number, default: 0 },\n    discipline: { type: String, enum: [\"WARNING\", \"SUSPENSION\", \"DISMISSED\"] },\n    suspension_days: { type: Number, default: 0 },\n    description: { type: String },\n    created_by: { type: ObjectId, required: true },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"offence_type\");\nnewSchema.plugin(mongoose_csv);\n\nconst OffenceType = mongoose.model(\"OffenceType\", newSchema);\n\nif (preload) { OffenceType.insertMany(table); }\n\nexport default OffenceType;\n"]}