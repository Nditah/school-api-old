{"version":3,"sources":["../../../../src/api/general/offence-type/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","code","Joi","string","required","offender_type","valid","name","fine","number","discipline","suspension_days","description","created_by","schemaUpdate","optional","updated_by","schema","type","String","enum","Number","default","ref","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","OffenceType","model","insertMany","table"],"mappings":";;;;;;;AAaA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAJA;AAfA;;;;;;;;;;;;;IAqBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,UAAMC,cAAIC,MAAJ,GAAaC,QAAb,EADkB;AAExBC,mBAAeH,cAAIC,MAAJ,GAAaG,KAAb,CAAmB,SAAnB,EAA8B,OAA9B,EAAuCF,QAAvC,EAFS;AAGxBG,UAAML,cAAIC,MAAJ,GAAaC,QAAb,EAHkB;AAIxBI,UAAMN,cAAIO,MAAJ,GAAaL,QAAb,EAJkB;AAKxBM,gBAAYR,cAAIC,MAAJ,GAAaG,KAAb,CAAmB,SAAnB,EAA8B,YAA9B,EAA4C,WAA5C,EAAyDF,QAAzD,EALY;AAMxBO,qBAAiBT,cAAIO,MAAJ,GAAaL,QAAb,EANO;AAOxBQ,iBAAaV,cAAIC,MAAJ,GAAaC,QAAb,EAPW;AAQxBS,gBAAYX,cAAIC,MAAJ,GAAaC,QAAb;AARY,CAArB;;AAWA,IAAMU,sCAAe;AACxBb,UAAMC,cAAIC,MAAJ,GAAaY,QAAb,EADkB;AAExBV,mBAAeH,cAAIC,MAAJ,GAAaG,KAAb,CAAmB,SAAnB,EAA8B,OAA9B,EAAuCS,QAAvC,EAFS;AAGxBR,UAAML,cAAIC,MAAJ,GAAaY,QAAb,EAHkB;AAIxBP,UAAMN,cAAIO,MAAJ,GAAaM,QAAb,EAJkB;AAKxBL,gBAAYR,cAAIC,MAAJ,GAAaG,KAAb,CAAmB,SAAnB,EAA8B,YAA9B,EAA4C,WAA5C,EAAyDS,QAAzD,EALY;AAMxBJ,qBAAiBT,cAAIO,MAAJ,GAAaM,QAAb,EANO;AAOxBH,iBAAaV,cAAIC,MAAJ,GAAaY,QAAb,EAPW;AAQxBC,gBAAYd,cAAIC,MAAJ,GAAaC,QAAb;AARY,CAArB;;AAWA,IAAMa,0BAAS;AAClBhB,UAAM,EAAEiB,MAAMC,MAAR,EADY;AAElBd,mBAAe,EAAEa,MAAMC,MAAR,EAAgBC,MAAM,CAAC,SAAD,EAAY,OAAZ,CAAtB,EAFG;AAGlBb,UAAM,EAAEW,MAAMC,MAAR,EAHY;AAIlBX,UAAM,EAAEU,MAAMG,MAAR,EAAgBC,SAAS,CAAzB,EAJY;AAKlBZ,gBAAY,EAAEQ,MAAMC,MAAR,EAAgBC,MAAM,CAAC,SAAD,EAAY,YAAZ,EAA0B,WAA1B,CAAtB,EALM;AAMlBT,qBAAiB,EAAEO,MAAMG,MAAR,EAAgBC,SAAS,CAAzB,EANC;AAOlBV,iBAAa,EAAEM,MAAMC,MAAR,EAPK;AAQlBN,gBAAY,EAAEK,MAAMpB,QAAR,EAAkBM,UAAU,IAA5B,EARM;AASlBY,gBAAY,EAAEE,MAAMpB,QAAR,EAAkByB,KAAK,OAAvB;AATM,CAAf;;AAYP,IAAMC,UAAUC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,UAAUH,oBAASI,OAAzB;;AAEA,IAAMC,YAAY,IAAIlC,MAAJ,CAAWqB,MAAX,EAAmBW,OAAnB,CAAlB;AACAE,UAAUC,GAAV,CAAc,YAAd,EAA4B,cAA5B;AACAD,UAAUE,MAAV,CAAiBC,qBAAjB;;AAEA,IAAMC,cAAcrC,mBAASsC,KAAT,CAAe,aAAf,EAA8BL,SAA9B,CAApB;;AAEA,IAAIN,OAAJ,EAAa;AAAEU,gBAAYE,UAAZ,CAAuBC,eAAvB;AAAgC;;kBAEhCH,W","file":"model.js","sourcesContent":["/**\r\n * @author 4Dcoder\r\n * @property {Number} id OffenceType primaryKey\r\n * @property {String} code OffenceType code (required)\r\n * @property {String} offender_type OffenceType offender_type \"PARTNER\", \"STAFF\" (required)\r\n * @property {String} name OffenceType name (required)\r\n * @property {Number} fine OffenceType fine (required)\r\n * @property {String} discipline OffenceType discipline\r\n * \"WARNING\", \"SUSPENSION\", \"DISMISSED\" (required)\r\n * @property {Number} suspension_days OffenceType suspension_days (required)\r\n * @property {String} description OffenceType description (required)\r\n * @description OffenceType model holds record of all offence categories\r\n */\r\nimport Joi from \"joi\";\r\nimport mongoose from \"mongoose\";\r\n// eslint-disable-next-line camelcase\r\nimport mongoose_csv from \"mongoose-csv\";\r\nimport { DATABASE } from \"../../../constants\";\r\nimport table from \"./table\";\r\nimport Staff from \"../staff/model\";\r\n\r\nconst { Schema } = mongoose;\r\nconst { ObjectId } = Schema.Types;\r\n\r\nexport const schemaCreate = {\r\n    code: Joi.string().required(),\r\n    offender_type: Joi.string().valid(\"PARTNER\", \"STAFF\").required(),\r\n    name: Joi.string().required(),\r\n    fine: Joi.number().required(),\r\n    discipline: Joi.string().valid(\"WARNING\", \"SUSPENSION\", \"DISMISSED\").required(),\r\n    suspension_days: Joi.number().required(),\r\n    description: Joi.string().required(),\r\n    created_by: Joi.string().required(),\r\n};\r\n\r\nexport const schemaUpdate = {\r\n    code: Joi.string().optional(),\r\n    offender_type: Joi.string().valid(\"PARTNER\", \"STAFF\").optional(),\r\n    name: Joi.string().optional(),\r\n    fine: Joi.number().optional(),\r\n    discipline: Joi.string().valid(\"WARNING\", \"SUSPENSION\", \"DISMISSED\").optional(),\r\n    suspension_days: Joi.number().optional(),\r\n    description: Joi.string().optional(),\r\n    updated_by: Joi.string().required(),\r\n};\r\n\r\nexport const schema = {\r\n    code: { type: String },\r\n    offender_type: { type: String, enum: [\"PARTNER\", \"STAFF\"] },\r\n    name: { type: String },\r\n    fine: { type: Number, default: 0 },\r\n    discipline: { type: String, enum: [\"WARNING\", \"SUSPENSION\", \"DISMISSED\"] },\r\n    suspension_days: { type: Number, default: 0 },\r\n    description: { type: String },\r\n    created_by: { type: ObjectId, required: true },\r\n    updated_by: { type: ObjectId, ref: \"Staff\" },\r\n};\r\n\r\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\r\nconst options = DATABASE.OPTIONS;\r\n\r\nconst newSchema = new Schema(schema, options);\r\nnewSchema.set(\"collection\", \"offence_type\");\r\nnewSchema.plugin(mongoose_csv);\r\n\r\nconst OffenceType = mongoose.model(\"OffenceType\", newSchema);\r\n\r\nif (preload) { OffenceType.insertMany(table); }\r\n\r\nexport default OffenceType;\r\n"]}