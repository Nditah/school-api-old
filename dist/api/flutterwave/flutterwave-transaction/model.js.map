{"version":3,"sources":["../../../../src/api/flutterwave/flutterwave-transaction/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","flwId","Joi","number","optional","txRef","string","flwRef","orderRef","paymentPlan","flwCreatedAt","date","amount","charged_amount","status","IP","currency","customer","object","entity","created_by","schemaUpdate","updated_by","required","schema","type","Number","String","Date","id","phone","fullName","customertoken","email","createdAt","updatedAt","deletedAt","AccountId","account_number","first_name","last_name","card6","card_last4","ref","options","DATABASE","OPTIONS","newSchema","set","FlutterwaveTransaction","model"],"mappings":";;;;;;;AAmCA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;;;IAEQA,M,GAAWC,kB,CAAXD,M;AALR;AArCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2CQE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAe;AACxBC,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EADiB;AAExBC,WAAOH,cAAII,MAAJ,GAAaF,QAAb,EAFiB;AAGxBG,YAAQL,cAAII,MAAJ,GAAaF,QAAb,EAHgB;AAIxBI,cAAUN,cAAII,MAAJ,GAAaF,QAAb,EAJc;AAKxBK,iBAAaP,cAAII,MAAJ,GAAaF,QAAb,EALW;AAMxBM,kBAAcR,cAAIS,IAAJ,GAAWP,QAAX,EANU;AAOxBQ,YAAQV,cAAIC,MAAJ,GAAaC,QAAb,EAPgB;AAQxBS,oBAAgBX,cAAIC,MAAJ,GAAaC,QAAb,EARQ;AASxBU,YAAQZ,cAAII,MAAJ,GAAaF,QAAb,EATgB;AAUxBW,QAAIb,cAAII,MAAJ,GAAaF,QAAb,EAVoB;AAWxBY,cAAUd,cAAII,MAAJ,GAAaF,QAAb,EAXc;AAYxBa,cAAUf,cAAIgB,MAAJ,GAAad,QAAb,EAZc;AAaxBe,YAAQjB,cAAIgB,MAAJ,GAAad,QAAb,EAbgB;AAcxBgB,gBAAYlB,cAAII,MAAJ,GAAaF,QAAb;AAdY,CAArB;;AAiBA,IAAMiB,sCAAe;AACxBpB,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EADiB;AAExBC,WAAOH,cAAII,MAAJ,GAAaF,QAAb,EAFiB;AAGxBG,YAAQL,cAAII,MAAJ,GAAaF,QAAb,EAHgB;AAIxBI,cAAUN,cAAII,MAAJ,GAAaF,QAAb,EAJc;AAKxBK,iBAAaP,cAAII,MAAJ,GAAaF,QAAb,EALW;AAMxBM,kBAAcR,cAAIS,IAAJ,GAAWP,QAAX,EANU;AAOxBQ,YAAQV,cAAIC,MAAJ,GAAaC,QAAb,EAPgB;AAQxBS,oBAAgBX,cAAIC,MAAJ,GAAaC,QAAb,EARQ;AASxBU,YAAQZ,cAAII,MAAJ,GAAaF,QAAb,EATgB;AAUxBW,QAAIb,cAAII,MAAJ,GAAaF,QAAb,EAVoB;AAWxBY,cAAUd,cAAII,MAAJ,GAAaF,QAAb,EAXc;AAYxBa,cAAUf,cAAIgB,MAAJ,GAAad,QAAb,EAZc;AAaxBe,YAAQjB,cAAIgB,MAAJ,GAAad,QAAb,EAbgB;AAcxBkB,gBAAYpB,cAAII,MAAJ,GAAaiB,QAAb;AAdY,CAArB;;AAiBA,IAAMC,0BAAS;AAClBvB,WAAO,EAAEwB,MAAMC,MAAR,EADW,EACO;AACzBrB,WAAO,EAAEoB,MAAME,MAAR,EAFW,EAEO;AACzBpB,YAAQ,EAAEkB,MAAME,MAAR,EAHU,EAGQ;AAC1BnB,cAAU,EAAEiB,MAAME,MAAR,EAJQ,EAIU;AAC5BlB,iBAAa,EAAEgB,MAAME,MAAR,EALK,EAKa;AAC/BjB,kBAAc,EAAEe,MAAMG,IAAR,EANI,EAMY;AAC9BhB,YAAQ,EAAEa,MAAMC,MAAR,EAPU,EAOQ;AAC1Bb,oBAAgB,EAAEY,MAAMC,MAAR,EARE,EAQgB;AAClCZ,YAAQ,EAAEW,MAAME,MAAR,EATU,EASQ;AAC1BZ,QAAI,EAAEU,MAAME,MAAR,EAVc,EAUI;AACtBX,cAAU,EAAES,MAAME,MAAR,EAXQ,EAWU;AAC5BV,cAAU;AACNY,YAAI,EAAEJ,MAAMC,MAAR,EADE,EACgB;AACtBI,eAAO,EAAEL,MAAME,MAAR,EAFD,EAEmB;AACzBI,kBAAU,EAAEN,MAAME,MAAR,EAHJ,EAGsB;AAC5BK,uBAAe,EAAEP,MAAME,MAAR,EAJT,EAI2B;AACjCM,eAAO,EAAER,MAAME,MAAR,EALD,EAKmB;AACzBO,mBAAW,EAAET,MAAMG,IAAR,EANL,EAMqB;AAC3BO,mBAAW,EAAEV,MAAMG,IAAR,EAPL,EAOqB;AAC3BQ,mBAAW,EAAEX,MAAMG,IAAR,EARL,EAQqB;AAC3BS,mBAAW,EAAEZ,MAAMC,MAAR,EATL,CASuB;AATvB,KAZQ;AAuBlBP,YAAQ;AACJmB,wBAAgB,EAAEb,MAAME,MAAR,EADZ,EAC8B;AAClCY,oBAAY,EAAEd,MAAME,MAAR,EAFR,EAE0B;AAC9Ba,mBAAW,EAAEf,MAAME,MAAR,EAHP,EAGyB;AAC7Bc,eAAO,EAAEhB,MAAME,MAAR,EAJH,EAIqB;AACzBe,oBAAY,EAAEjB,MAAME,MAAR,EALR,CAK0B;AAL1B,KAvBU;AA8BlBP,gBAAY,EAAEK,MAAM3B,QAAR,EA9BM;AA+BlBwB,gBAAY,EAAEG,MAAM3B,QAAR,EAAkB6C,KAAK,OAAvB;AA/BM,CAAf;;AAkCP,IAAMC,UAAUC,oBAASC,OAAzB;;AAEA,IAAMC,YAAY,IAAInD,MAAJ,CAAW4B,MAAX,EAAmBoB,OAAnB,CAAlB;AACAG,UAAUC,GAAV,CAAc,YAAd,EAA4B,yBAA5B;;AAEA,IAAMC,yBAAyBpD,mBAASqD,KAAT,CAAe,wBAAf,EAAyCH,SAAzC,CAA/B;;kBAEeE,sB","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {Number} flwId FlutterwaveTransaction flwId // 125837,\n * @property {String} txRef FlutterwaveTransaction txRef // \"rave-pos-272519815315\",\n * @property {String} flwRef FlutterwaveTransaction flwRef // \"FLWACHMOCK-1523118279396\",\n * @property {String} orderRef FlutterwaveTransaction orderRef // \"URF_1523118277202_7343035\",\n * @property {String} paymentPlan FlutterwaveTransaction paymentPlan // null,\n * @property {Date} flwCreatedAt FlutterwaveTransaction flwCreatedAt // \"2018-04-07T16:24:37.000Z\",\n * @property {Number} amount FlutterwaveTransaction amount // 200,\n * @property {Number} charged_amount FlutterwaveTransaction charged_amount // 200,\n * @property {String} status FlutterwaveTransaction status // \"successful\",\n * @property {String} IP FlutterwaveTransaction IP // \"197.149.95.62\",\n * @property {String} currency FlutterwaveTransaction currency // \"NGN\",\n * @property {Object} customer FlutterwaveTransaction customer Object {\n *      {Number} id customer id // 5766,\n *      {String} phone customer phone , // \"N/A\",\n *      {String} fullName customer phone , // \"Anonymous customer\",\n *      {String} customertoken customer phone , // null,\n *      {String} email customer phone , // \"salesmode@ravepay.co\",\n *      {Date} createdAt customer phone , // \"2017-10-16T10:03:19.000Z\",\n *      {Date} updatedAt customer phone , // \"2017-10-16T10:03:19.000Z\",\n *      {Date} deletedAt customer phone , // null,\n *      {Number} AccountId customer phone , // 134,\n *      },\n * @property {Object} entity FlutterwaveTransaction entity Object {\n *      {String} account_number entity , // \"0690000037\",\n *      {String} first_name entity , // \"Dele Moruf\",\n *      {String} last_name entity , // \"Quadri\",\n *      {String} card6 entity , // \"539983\",\n *      {String} card_last4 entity , // \"8381\",\n *      },\n * @description FlutterwaveTransaction model holds record of all transactions through 3rd party\n * payment gateway like InterSwitch, Flutterwave, Paystack, Paypal. It mainly has the\n * webhook for flutterwave payment for now.\n */\nimport Joi from \"joi\";\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport mongoose_csv from \"mongoose-csv\";\nimport { DATABASE } from \"../../../constants\";\nimport Staff from \"../../general/staff/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = {\n    flwId: Joi.number().optional(),\n    txRef: Joi.string().optional(),\n    flwRef: Joi.string().optional(),\n    orderRef: Joi.string().optional(),\n    paymentPlan: Joi.string().optional(),\n    flwCreatedAt: Joi.date().optional(),\n    amount: Joi.number().optional(),\n    charged_amount: Joi.number().optional(),\n    status: Joi.string().optional(),\n    IP: Joi.string().optional(),\n    currency: Joi.string().optional(),\n    customer: Joi.object().optional(),\n    entity: Joi.object().optional(),\n    created_by: Joi.string().optional(),\n};\n\nexport const schemaUpdate = {\n    flwId: Joi.number().optional(),\n    txRef: Joi.string().optional(),\n    flwRef: Joi.string().optional(),\n    orderRef: Joi.string().optional(),\n    paymentPlan: Joi.string().optional(),\n    flwCreatedAt: Joi.date().optional(),\n    amount: Joi.number().optional(),\n    charged_amount: Joi.number().optional(),\n    status: Joi.string().optional(),\n    IP: Joi.string().optional(),\n    currency: Joi.string().optional(),\n    customer: Joi.object().optional(),\n    entity: Joi.object().optional(),\n    updated_by: Joi.string().required(),\n};\n\nexport const schema = {\n    flwId: { type: Number }, // 125837,\n    txRef: { type: String }, // \"rave-pos-272519815315\",\n    flwRef: { type: String }, // \"FLWACHMOCK-1523118279396\",\n    orderRef: { type: String }, // \"URF_1523118277202_7343035\",\n    paymentPlan: { type: String }, // null,\n    flwCreatedAt: { type: Date }, // \"2018-04-07T16:24:37.000Z\",\n    amount: { type: Number }, // 200,\n    charged_amount: { type: Number }, // 200,\n    status: { type: String }, // \"successful\",\n    IP: { type: String }, // \"197.149.95.62\",\n    currency: { type: String }, // \"NGN\",\n    customer: {\n        id: { type: Number }, // 5766,\n        phone: { type: String }, // \"N/A\",\n        fullName: { type: String }, // \"Anonymous customer\",\n        customertoken: { type: String }, // null,\n        email: { type: String }, // \"salesmode@ravepay.co\",\n        createdAt: { type: Date }, // \"2017-10-16T10:03:19.000Z\",\n        updatedAt: { type: Date }, // \"2017-10-16T10:03:19.000Z\",\n        deletedAt: { type: Date }, // null,\n        AccountId: { type: Number }, // 134,\n    },\n    entity: {\n        account_number: { type: String }, // \"0690000037\",\n        first_name: { type: String }, // \"Dele Moruf\",\n        last_name: { type: String }, // \"Quadri\",\n        card6: { type: String }, // \"539983\",\n        card_last4: { type: String }, // \"8381\",\n    },\n    created_by: { type: ObjectId },\n    updated_by: { type: ObjectId, ref: \"Staff\" },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"flutterwave_transaction\");\n\nconst FlutterwaveTransaction = mongoose.model(\"FlutterwaveTransaction\", newSchema);\n\nexport default FlutterwaveTransaction;\n"]}