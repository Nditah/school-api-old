{"version":3,"sources":["../../src/services/sms.js"],"names":["twilio","require","dotenv","SMS","config","accountSid","process","env","TWILIO_ACCOUNT_SID","authToken","TWILIO_AUTH_TOKEN","client","sender","PEACE_SMS_SENDER","formatPhone","phone","str","toString","trim","length","slice","sendSms","recipient","message","data","from","body","to","messages","create","then","result","console","log","sid","sendSmsAsync","receiveSms","req","res","twiml","TwimlResponse","send","readMultipleSms","each"],"mappings":"AAAA,MAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,MAAMC,SAASD,QAAQ,QAAR,CAAf;AACA,MAAM,EAAEE,GAAF,KAAUF,QAAQ,cAAR,CAAhB;;AAEA;;AAEAC,OAAOE,MAAP;;AAEA,MAAMC,aAAaC,QAAQC,GAAR,CAAYC,kBAA/B;AACA,MAAMC,YAAYH,QAAQC,GAAR,CAAYG,iBAA9B;AACA;AACA,MAAMC,SAAS,IAAIX,MAAJ,CAAWK,UAAX,EAAuBI,SAAvB,CAAf;AACA,MAAMG,SAAST,IAAIU,gBAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAIC,MAAMD,MAAME,QAAN,EAAV;AACAD,UAAMA,IAAIE,IAAJ,EAAN;AACA,QAAIF,IAAIG,MAAJ,KAAe,EAAf,IAAqBH,IAAK,CAAL,MAAa,GAAtC,EAA2C;AACvCA,cAAO,OAAMA,IAAII,KAAJ,CAAU,CAAV,CAAa,EAA1B;AACH;AACD,QAAIJ,IAAIG,MAAJ,KAAe,EAAnB,EAAuB;AACnBH,cAAO,OAAMA,GAAI,EAAjB;AACH;AACD,WAAOA,GAAP;AACH;;AAED,SAASK,OAAT,CAAiBC,SAAjB,EAA4BC,OAA5B,EAAqC;AACjC,UAAMC,OAAO;AACTC,cAAMX,YAAYF,MAAZ,CADG;AAETc,cAAMH,OAFG;AAGTI,YAAIb,YAAYQ,SAAZ;AAHK,KAAb;AAKAX,WAAOiB,QAAP,CAAgBC,MAAhB,CAAuBL,IAAvB,EACKM,IADL,CACUC,UAAUC,QAAQC,GAAR,CAAYF,OAAOG,GAAnB,CADpB;AAEH;;AAED,eAAeC,YAAf,CAA4Bb,SAA5B,EAAuCC,OAAvC,EAAgD;AAC5C,UAAMC,OAAO;AACTC,cAAMX,YAAYF,MAAZ,CADG;AAETc,cAAMH,OAFG;AAGTI,YAAIb,YAAYQ,SAAZ;AAHK,KAAb;AAKA,UAAMS,SAAS,MAAMpB,OAAOiB,QAAP,CAAgBC,MAAhB,CAAuBL,IAAvB,CAArB;AACA,WAAOO,MAAP;AACH;;AAED;;;;AAIA,eAAeK,UAAf,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoC;AAChC,UAAMC,QAAQ,IAAIvC,OAAOwC,aAAX,EAAd;AACAD,UAAMhB,OAAN,CAAc,0BAAd;AACA,UAAMA,UAAUgB,MAAMtB,QAAN,EAAhB;AACAqB,QAAIG,IAAJ,CAASlB,OAAT;AACH;;AAED;AACA,SAASmB,eAAT,GAA2B;AACvB/B,WAAOiB,QAAP,CAAgBe,IAAhB,CAAqBf,YAAYI,QAAQC,GAAR,CAAYL,SAASM,GAArB,CAAjC;AACH;;AAED,SAASb,OAAT,EAAkBc,YAAlB,EAAgCC,UAAhC,EAA4CM,eAA5C","file":"sms.js","sourcesContent":["const twilio = require(\"twilio\");\nconst dotenv = require(\"dotenv\");\nconst { SMS } = require(\"../constants\");\n\n//  * https://www.twilio.com/docs/sms/api/message-resource#read-multiple-message-resources\n\ndotenv.config();\n\nconst accountSid = process.env.TWILIO_ACCOUNT_SID;\nconst authToken = process.env.TWILIO_AUTH_TOKEN;\n// eslint-disable-next-line new-cap\nconst client = new twilio(accountSid, authToken);\nconst sender = SMS.PEACE_SMS_SENDER;\n\nfunction formatPhone(phone) {\n    let str = phone.toString();\n    str = str.trim();\n    if (str.length === 11 && str[ 0 ] === \"0\") {\n        str = `+234${str.slice(1)}`;\n    }\n    if (str.length === 10) {\n        str = `+234${str}`;\n    }\n    return str;\n}\n\nfunction sendSms(recipient, message) {\n    const data = {\n        from: formatPhone(sender),\n        body: message,\n        to: formatPhone(recipient),\n    };\n    client.messages.create(data)\n        .then(result => console.log(result.sid));\n}\n\nasync function sendSmsAsync(recipient, message) {\n    const data = {\n        from: formatPhone(sender),\n        body: message,\n        to: formatPhone(recipient),\n    };\n    const result = await client.messages.create(data);\n    return result;\n}\n\n/**\n * Twilio Webhook for receiving sms\n * Receive message via this webhook set at the twilio user settings\n */\nasync function receiveSms(req, res) {\n    const twiml = new twilio.TwimlResponse();\n    twiml.message(\"Twilio incoming message:\");\n    const message = twiml.toString();\n    res.send(message);\n}\n\n// Read Multiple SMS Records\nfunction readMultipleSms() {\n    client.messages.each(messages => console.log(messages.sid));\n}\n\nexport { sendSms, sendSmsAsync, receiveSms, readMultipleSms };\n"]}