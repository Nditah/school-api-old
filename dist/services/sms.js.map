{"version":3,"sources":["../../src/services/sms.js"],"names":["recipient","message","headersObj","Accept","json","options","method","uri","smsCode","headers","then","response","catch","err","sendSmsAsync","dotenv","require","SMS","config","process","env","SMS_API","client","sender","PEACE_SMS_SENDER","formatPhone","phone","str","toString","trim","length","slice","sendSms","data","from","body","to","messages","create","console","log","result","sid"],"mappings":";;;;;;;;uEAsCA,iBAA4BA,SAA5B,EAAuCC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,kCADV,GACuB;AACfC,oCAAQ,kBADO;AAEf,4CAAgB,kBAFD;AAGfC,kCAAM;AAHS,yBADvB;AAMUC,+BANV,GAMoB;AACZC,oCAAQ,KADI;AAEZC,uGAAyEC,OAAzE,mBAA8FR,SAA9F,iBAAmHC,OAFvG;AAGZQ,qCAASP,UAHG;AAIZE,kCAAM;AAJM,yBANpB;AAAA,yDAYW,8BAAGC,OAAH,EAAYK,IAAZ,CAAiB;AAAA,mCAAYC,QAAZ;AAAA,yBAAjB,EAAuCC,KAAvC,CAA6C;AAAA,mCAAOC,GAAP;AAAA,yBAA7C,CAZX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,Y;;;;;AAtCf;;;;;;;;AAEA,IAAMC,SAASC,QAAQ,QAAR,CAAf;;eACgBA,QAAQ,cAAR,C;IAARC,G,YAAAA,G;;AAERF,OAAOG,MAAP;;AAEA;AACA,IAAMV,UAAUW,QAAQC,GAAR,CAAYC,OAA5B;AACA;AACA;;AAEA,IAAMC,SAAS,IAAf;AACA;AACA,IAAMC,SAASN,IAAIO,gBAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAIC,MAAMD,MAAME,QAAN,EAAV;AACAD,UAAMA,IAAIE,IAAJ,EAAN;AACA,QAAIF,IAAIG,MAAJ,KAAe,EAAf,IAAqBH,IAAK,CAAL,MAAa,GAAtC,EAA2C;AACvCA,uBAAaA,IAAII,KAAJ,CAAU,CAAV,CAAb;AACH;AACD,QAAIJ,IAAIG,MAAJ,KAAe,EAAnB,EAAuB;AACnBH,uBAAaA,GAAb;AACH;AACD,WAAOA,GAAP;AACH;;AAED,SAASK,OAAT,CAAiBhC,SAAjB,EAA4BC,OAA5B,EAAqC;AACjC,QAAMgC,OAAO;AACTC,cAAMT,YAAYF,MAAZ,CADG;AAETY,cAAMlC,OAFG;AAGTmC,YAAIX,YAAYzB,SAAZ;AAHK,KAAb;AAKAsB,WAAOe,QAAP,CAAgBC,MAAhB,CAAuBL,IAAvB,EACKvB,IADL,CACU;AAAA,eAAU6B,QAAQC,GAAR,CAAYC,OAAOC,GAAnB,CAAV;AAAA,KADV;AAEH;;QAiBQV,O,GAAAA,O;QAASlB,Y,GAAAA,Y","file":"sms.js","sourcesContent":["import rp from \"request-promise\";\n\nconst dotenv = require(\"dotenv\");\nconst { SMS } = require(\"../constants\");\n\ndotenv.config();\n\n// Todo call from settings\nconst smsCode = process.env.SMS_API;\n// const smsEmail = process.env.SMS_EMAIL;\n// const smsPassword = process.env.SMS_PASSWORD;\n\nconst client = null;\n// eslint-disable-next-line new-cap\nconst sender = SMS.PEACE_SMS_SENDER;\n\nfunction formatPhone(phone) {\n    let str = phone.toString();\n    str = str.trim();\n    if (str.length === 11 && str[ 0 ] === \"0\") {\n        str = `+234${str.slice(1)}`;\n    }\n    if (str.length === 10) {\n        str = `+234${str}`;\n    }\n    return str;\n}\n\nfunction sendSms(recipient, message) {\n    const data = {\n        from: formatPhone(sender),\n        body: message,\n        to: formatPhone(recipient),\n    };\n    client.messages.create(data)\n        .then(result => console.log(result.sid));\n}\n\nasync function sendSmsAsync(recipient, message) {\n    const headersObj = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        json: true,\n    };\n    const options = {\n        method: \"GET\",\n        uri: `https://sms-app-backend.herokuapp.com/api/v1/sms/externally?code=${smsCode}&recipient=${recipient}&message=${message}`,\n        headers: headersObj,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport { sendSms, sendSmsAsync };\n"]}