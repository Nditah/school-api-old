{"version":3,"sources":["../../src/services/sms.js"],"names":["recipient","message","headersObj","Accept","json","options","method","uri","SMS_URL","smsCode","headers","then","response","catch","err","sendSmsAsyncGet","body","error","sendSmsAsync","dotenv","require","SMS","config","process","env","SMS_API","client","sender","PEACE_SMS_SENDER","formatPhone","phone","str","toString","trim","length","slice"],"mappings":";;;;;;;;uEA8BA,iBAA+BA,SAA/B,EAA0CC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,kCADV,GACuB;AACfC,oCAAQ,kBADO;AAEf,4CAAgB,kBAFD;AAGfC,kCAAM;AAHS,yBADvB;AAMUC,+BANV,GAMoB;AACZC,oCAAQ,KADI;AAEZC,iCAAQC,OAAR,cAAwBC,OAAxB,mBAA6CT,SAA7C,iBAAkEC,OAFtD;AAGZS,qCAASR,UAHG;AAIZE,kCAAM;AAJM,yBANpB;AAAA,yDAYW,8BAAGC,OAAH,EAAYM,IAAZ,CAAiB;AAAA,mCAAYC,QAAZ;AAAA,yBAAjB,EAAuCC,KAAvC,CAA6C;AAAA,mCAAOC,GAAP;AAAA,yBAA7C,CAZX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,e;;;;;;wEAef,kBAA4Bf,SAA5B,EAAuCC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,kCADV,GACuB;AACfC,oCAAQ,kBADO;AAEf,4CAAgB,kBAFD;AAGfC,kCAAM;AAHS,yBADvB;AAMUC,+BANV,GAMoB;AACZC,oCAAQ,MADI;AAEZC,iCAAQC,OAAR,cAAwBC,OAFZ;AAGZC,qCAASR,UAHG;AAIZc,kCAAM,EAAEhB,oBAAF,EAAaC,gBAAb,EAJM;AAKZG,kCAAM;AALM,yBANpB;AAAA,0DAaW,8BAAGC,OAAH,EAAYM,IAAZ,CAAiB;AAAA,mCAAYC,QAAZ;AAAA,yBAAjB,EAAuCC,KAAvC,CAA6C;AAAA,mCAAOC,IAAIG,KAAX;AAAA,yBAA7C,CAbX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,Y;;;;;AA7Cf;;;;;;;;AAEA,IAAMC,SAASC,QAAQ,QAAR,CAAf;;eACgBA,QAAQ,cAAR,C;IAARC,G,YAAAA,G;;AAERF,OAAOG,MAAP;;AAEA;AACA,IAAMb,UAAUc,QAAQC,GAAR,CAAYC,OAAZ,IAAuB,kCAAvC;AACA;AACA;AACA,IAAMjB,UAAU,kDAAhB;AACA;;AAEA,IAAMkB,SAAS,IAAf;AACA;AACA,IAAMC,SAASN,IAAIO,gBAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAIC,MAAMD,MAAME,QAAN,EAAV;AACAD,UAAMA,IAAIE,IAAJ,EAAN;AACA,QAAIF,IAAIG,MAAJ,KAAe,EAAf,IAAqBH,IAAK,CAAL,MAAa,GAAtC,EAA2C;AACvCA,uBAAaA,IAAII,KAAJ,CAAU,CAAV,CAAb;AACH;AACD,QAAIJ,IAAIG,MAAJ,KAAe,EAAnB,EAAuB;AACnBH,uBAAaA,GAAb;AACH;AACD,WAAOA,GAAP;AACH;;QAiCQb,Y,GAAAA,Y;QAAcH,e,GAAAA,e","file":"sms.js","sourcesContent":["import rp from \"request-promise\";\n\nconst dotenv = require(\"dotenv\");\nconst { SMS } = require(\"../constants\");\n\ndotenv.config();\n\n// Todo call from settings\nconst smsCode = process.env.SMS_API || \"acd99e2c5d2c34ab65269a11ae97da2e\";\n// const smsEmail = process.env.SMS_EMAIL || \"peacegroup@gmail.com\";\n// const smsPassword = process.env.SMS_PASSWORD || \"peace@01#\";\nconst SMS_URL = \"https://sms-app-backend.herokuapp.com/api/v1/sms\";\n// const SMS_URL = \"http://localhost:8000/api/v1/sms\";\n\nconst client = null;\n// eslint-disable-next-line new-cap\nconst sender = SMS.PEACE_SMS_SENDER;\n\nfunction formatPhone(phone) {\n    let str = phone.toString();\n    str = str.trim();\n    if (str.length === 11 && str[ 0 ] === \"0\") {\n        str = `+234${str.slice(1)}`;\n    }\n    if (str.length === 10) {\n        str = `+234${str}`;\n    }\n    return str;\n}\n\nasync function sendSmsAsyncGet(recipient, message) {\n    const headersObj = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        json: true,\n    };\n    const options = {\n        method: \"GET\",\n        uri: `${SMS_URL}?code=${smsCode}&recipient=${recipient}&message=${message}`,\n        headers: headersObj,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nasync function sendSmsAsync(recipient, message) {\n    const headersObj = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        json: true,\n    };\n    const options = {\n        method: \"POST\",\n        uri: `${SMS_URL}?code=${smsCode}`,\n        headers: headersObj,\n        body: { recipient, message },\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err.error);\n}\n\nexport { sendSmsAsync, sendSmsAsyncGet };\n"]}