{"version":3,"sources":["../../src/services/authenticate.js"],"names":["loginPayload","email","phone","otp","password","user","token","filter","Staff","findOne","populate","exec","Error","otp_access","bcryptjs","compareSync","query","_id","update","findOneAndUpdate","new","payload","id","userType","time","Date","jwt","sign","JWT","jwtSecret","expiresIn","message","staffAuthenticate","Parent","parentAuthenticate","Student","studentAuthenticate","staffAuthenticate2Old","$or","then","role"],"mappings":"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","file":"authenticate.js","sourcesContent":["import bcryptjs from \"bcryptjs\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport Staff from \"../api/general/staff/model\";\r\nimport { JWT } from \"../constants\";\r\nimport Parent from \"../api/general/parent/model\";\r\nimport Student from \"../api/general/student/model\";\r\n\r\nexport function staffAuthenticate2Old(loginPayload) {\r\n    // return next();\r\n    const { email, phone, otp, password } = loginPayload;\r\n    return Staff.findOne({ $or: [{ email }, { phone }] })\r\n        // eslint-disable-next-line complexity\r\n        .then((user) => {\r\n            if (!user) { throw new Error(\"Authentication failed. User not found.\"); }\r\n            if (otp && phone) {\r\n                if (!user.otp_access) {\r\n                    throw new Error(`Authentication failed. OTP Access is ${user.otp_access}`);\r\n                }\r\n            }\r\n            if (!(bcryptjs.compareSync(password || \"\", user.password)\r\n            || bcryptjs.compareSync(otp || \"\", user.otp))) {\r\n                throw new Error(\"Authentication failed. Wrong password or otp.\");\r\n            }\r\n\r\n            const query = { _id: user._id };\r\n            const update = { otp_access: false };\r\n            Staff.findOneAndUpdate(query, update, { new: true }).exec();\r\n            // Delete private attributes\r\n            delete user.password;\r\n            delete user.otp;\r\n            const payload = {\r\n                id: user.id,\r\n                userType: \"staff\",\r\n                // terminal_id: user.terminal_id,\r\n                role: user.role,\r\n                // vehicle_id: user.vehicle_id,\r\n                email,\r\n                phone,\r\n                time: new Date(),\r\n            };\r\n\r\n            const token = jwt.sign(payload, JWT.jwtSecret, {\r\n                expiresIn: \"240h\", // JWT.tokenExpireTime,\r\n            });\r\n            return { token, user };\r\n        });\r\n}\r\n\r\n// eslint-disable-next-line complexity\r\nexport async function staffAuthenticate(loginPayload) {\r\n    // return next();\r\n    const { email, phone, otp, password } = loginPayload;\r\n    let user;\r\n    let token;\r\n    try {\r\n        const filter = {};\r\n        if (phone) {\r\n            filter.phone = phone;\r\n        } else {\r\n            filter.email = email;\r\n        }\r\n        user = await Staff\r\n            .findOne(filter)\r\n            .populate(\"office_id\")\r\n            .populate(\"role\")\r\n            .populate(\"bank_name\")\r\n            .populate(\"classe\")\r\n            .populate(\"subject\")\r\n            .populate(\"bank_name\")\r\n            .populate(\"state\")\r\n            .populate(\"county\")\r\n            .exec();\r\n\r\n        if (!user) {\r\n            throw new Error(\"User not found.\");\r\n        }\r\n        if (otp && phone) {\r\n            if (!user.otp_access) {\r\n                throw new Error(`Authentication failed. OTP Access is ${user.otp_access}`);\r\n            }\r\n        }\r\n        if (!(bcryptjs.compareSync(password || \"\", user.password)\r\n        || (bcryptjs.compareSync(otp || \"\", user.otp) && user.otp_access))) {\r\n            throw new Error(\"Wrong password or otp credentials.\");\r\n        }\r\n        const query = { _id: user._id };\r\n        const update = { otp_access: false };\r\n        await Staff.findOneAndUpdate(query, update, { new: true }).exec();\r\n\r\n        // Delete private attributes\r\n        user.password = null;\r\n        user.otp = null;\r\n        delete user.password;\r\n        delete user.otp;\r\n        const payload = {\r\n            id: user.id,\r\n            userType: \"staff\",\r\n            email,\r\n            phone,\r\n            time: new Date(),\r\n        };\r\n\r\n        token = jwt.sign(payload, JWT.jwtSecret, {\r\n            expiresIn: \"240h\", // JWT.tokenExpireTime,\r\n        });\r\n    } catch (err) {\r\n        throw new Error(`Authentication failed ${err.message}`);\r\n    }\r\n    return { token, user };\r\n}\r\n\r\nexport async function parentAuthenticate(loginPayload) {\r\n    // return next();\r\n    const { email, phone, otp, password } = loginPayload;\r\n    let user;\r\n    let token;\r\n    try {\r\n        const filter = {};\r\n        if (phone) {\r\n            filter.phone = phone;\r\n        } else {\r\n            filter.email = email;\r\n        }\r\n        user = await Parent\r\n            .findOne(filter)\r\n            .populate(\"students_name\")\r\n            .populate(\"state\")\r\n            .populate(\"county\")\r\n            .populate(\"staff\")\r\n            .exec();\r\n\r\n        if (!user) {\r\n            throw new Error(\"User not found.\");\r\n        }\r\n        if (otp && phone) {\r\n            if (!user.otp_access) {\r\n                throw new Error(`Authentication failed. OTP Access is ${user.otp_access}`);\r\n            }\r\n        }\r\n        if (!(bcryptjs.compareSync(password || \"\", user.password)\r\n        || (bcryptjs.compareSync(otp || \"\", user.otp) && user.otp_access))) {\r\n            throw new Error(\"Wrong password or otp credentials.\");\r\n        }\r\n        const query = { _id: user._id };\r\n        const update = { otp_access: false };\r\n        await Parent.findOneAndUpdate(query, update, { new: true }).exec();\r\n\r\n        // Delete private attributes\r\n        user.password = null;\r\n        user.otp = null;\r\n        delete user.password;\r\n        delete user.otp;\r\n        const payload = {\r\n            id: user.id,\r\n            userType: \"parent\",\r\n            email,\r\n            phone,\r\n            time: new Date(),\r\n        };\r\n\r\n        token = jwt.sign(payload, JWT.jwtSecret, {\r\n            expiresIn: \"240h\", // JWT.tokenExpireTime,\r\n        });\r\n    } catch (err) {\r\n        throw new Error(`Authentication failed ${err.message}`);\r\n    }\r\n    return { token, user };\r\n}\r\n\r\nexport async function studentAuthenticate(loginPayload) {\r\n    // return next();\r\n    const { email, phone, otp, password } = loginPayload;\r\n    let user;\r\n    let token;\r\n    try {\r\n        const filter = {};\r\n        if (phone) {\r\n            filter.phone = phone;\r\n        } else {\r\n            filter.email = email;\r\n        }\r\n        user = await Student\r\n            .findOne(filter)\r\n            .populate(\"classe\")\r\n            .populate(\"hostel\")\r\n            .populate(\"state\")\r\n            .populate(\"county\")\r\n            .exec();\r\n\r\n        if (!user) {\r\n            throw new Error(\"User not found.\");\r\n        }\r\n        if (otp && phone) {\r\n            if (!user.otp_access) {\r\n                throw new Error(`Authentication failed. OTP Access is ${user.otp_access}`);\r\n            }\r\n        }\r\n        if (!(bcryptjs.compareSync(password || \"\", user.password)\r\n        || (bcryptjs.compareSync(otp || \"\", user.otp) && user.otp_access))) {\r\n            throw new Error(\"Wrong password or otp credentials.\");\r\n        }\r\n        const query = { _id: user._id };\r\n        const update = { otp_access: false };\r\n        await Student.findOneAndUpdate(query, update, { new: true }).exec();\r\n\r\n        // Delete private attributes\r\n        user.password = null;\r\n        user.otp = null;\r\n        delete user.password;\r\n        delete user.otp;\r\n        const payload = {\r\n            id: user.id,\r\n            userType: \"student\",\r\n            email,\r\n            phone,\r\n            time: new Date(),\r\n        };\r\n\r\n        token = jwt.sign(payload, JWT.jwtSecret, {\r\n            expiresIn: \"240h\", // JWT.tokenExpireTime,\r\n        });\r\n    } catch (err) {\r\n        throw new Error(`Authentication failed ${err.message}`);\r\n    }\r\n    return { token, user };\r\n}\r\n"]}