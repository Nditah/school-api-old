{"version":3,"sources":["../../src/services/authenticate.js"],"names":["loginPayload","email","phone","otp","password","user","token","filter","Staff","findOne","populate","exec","Error","otp_access","console","log","bcryptjs","compareSync","query","_id","update","findOneAndUpdate","new","payload","id","userType","time","Date","jwt","sign","JWT","jwtSecret","expiresIn","message","staffAuthenticate","Parent","parentAuthenticate","Student","studentAuthenticate","staffAuthenticate2Old","$or","then","role"],"mappings":"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","file":"authenticate.js","sourcesContent":["import bcryptjs from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\nimport Staff from \"../api/general/staff/model\";\nimport { JWT } from \"../constants\";\nimport Parent from \"../api/general/parent/model\";\nimport Student from \"../api/general/student/model\";\n\nexport function staffAuthenticate2Old(loginPayload) {\n    // return next();\n    const { email, phone, otp, password } = loginPayload;\n    return Staff.findOne({ $or: [{ email }, { phone }] })\n        // eslint-disable-next-line complexity\n        .then((user) => {\n            if (!user) { throw new Error(\"Authentication failed. User not found.\"); }\n            if (otp && phone) {\n                if (!user.otp_access) {\n                    throw new Error(`Authentication failed. OTP Access is ${user.otp_access}`);\n                }\n            }\n            if (!(bcryptjs.compareSync(password || \"\", user.password)\n            || bcryptjs.compareSync(otp || \"\", user.otp))) {\n                throw new Error(\"Authentication failed. Wrong password or otp.\");\n            }\n\n            const query = { _id: user._id };\n            const update = { otp_access: false };\n            Staff.findOneAndUpdate(query, update, { new: true }).exec();\n            // Delete private attributes\n            delete user.password;\n            delete user.otp;\n            const payload = {\n                id: user.id,\n                userType: \"staff\",\n                // terminal_id: user.terminal_id,\n                role: user.role,\n                // vehicle_id: user.vehicle_id,\n                email,\n                phone,\n                time: new Date(),\n            };\n\n            const token = jwt.sign(payload, JWT.jwtSecret, {\n                expiresIn: \"240h\", // JWT.tokenExpireTime,\n            });\n            return { token, user };\n        });\n}\n\n// eslint-disable-next-line complexity\nexport async function staffAuthenticate(loginPayload) {\n    // return next();\n    const { email, phone, otp, password } = loginPayload;\n    let user;\n    let token;\n    try {\n        const filter = {};\n        if (phone) {\n            filter.phone = phone;\n        } else {\n            filter.email = email;\n        }\n        user = await Staff\n            .findOne(filter)\n            .populate(\"office\")\n            .populate(\"role\")\n            .populate(\"classe\")\n            .populate(\"subject\")\n            .populate(\"state\")\n            .populate(\"county\")\n            .exec();\n\n        if (!user) {\n            throw new Error(\"User not found.\");\n        }\n        if (otp && phone) {\n            if (!user.otp_access) {\n                throw new Error(`Authentication failed. OTP Access is ${user.otp_access}`);\n            }\n        }\n        console.log(\"User is coming *****\", user);\n        if (!(bcryptjs.compareSync(password || \"\", user.password)\n        || (bcryptjs.compareSync(otp || \"\", user.otp) && user.otp_access))) {\n            throw new Error(\"Wrong password or otp credentials.\");\n        }\n        const query = { _id: user._id };\n        const update = { otp_access: false };\n        await Staff.findOneAndUpdate(query, update, { new: true }).exec();\n\n        // Delete private attributes\n        user.password = null;\n        user.otp = null;\n        delete user.password;\n        delete user.otp;\n        const payload = {\n            id: user.id,\n            userType: \"staff\",\n            email,\n            phone,\n            time: new Date(),\n        };\n\n        token = jwt.sign(payload, JWT.jwtSecret, {\n            expiresIn: \"240h\", // JWT.tokenExpireTime,\n        });\n    } catch (err) {\n        throw new Error(`Authentication failed ${err.message}`);\n    }\n    return { token, user };\n}\n\nexport async function parentAuthenticate(loginPayload) {\n    // return next();\n    const { email, phone, otp, password } = loginPayload;\n    let user;\n    let token;\n    try {\n        const filter = {};\n        if (phone) {\n            filter.phone = phone;\n        } else {\n            filter.email = email;\n        }\n        user = await Parent\n            .findOne(filter)\n            .populate(\"students_name\")\n            .populate(\"state\")\n            .populate(\"county\")\n            .populate(\"staff\")\n            .exec();\n\n        if (!user) {\n            throw new Error(\"User not found.\");\n        }\n        if (otp && phone) {\n            if (!user.otp_access) {\n                throw new Error(`Authentication failed. OTP Access is ${user.otp_access}`);\n            }\n        }\n        if (!(bcryptjs.compareSync(password || \"\", user.password)\n        || (bcryptjs.compareSync(otp || \"\", user.otp) && user.otp_access))) {\n            throw new Error(\"Wrong password or otp credentials.\");\n        }\n        const query = { _id: user._id };\n        const update = { otp_access: false };\n        await Parent.findOneAndUpdate(query, update, { new: true }).exec();\n\n        // Delete private attributes\n        user.password = null;\n        user.otp = null;\n        delete user.password;\n        delete user.otp;\n        const payload = {\n            id: user.id,\n            userType: \"parent\",\n            email,\n            phone,\n            time: new Date(),\n        };\n\n        token = jwt.sign(payload, JWT.jwtSecret, {\n            expiresIn: \"240h\", // JWT.tokenExpireTime,\n        });\n    } catch (err) {\n        throw new Error(`Authentication failed ${err.message}`);\n    }\n    return { token, user };\n}\n\nexport async function studentAuthenticate(loginPayload) {\n    // return next();\n    const { email, phone, otp, password } = loginPayload;\n    let user;\n    let token;\n    try {\n        const filter = {};\n        if (phone) {\n            filter.phone = phone;\n        } else {\n            filter.email = email;\n        }\n        user = await Student\n            .findOne(filter)\n            .populate(\"classe\")\n            .populate(\"hostel\")\n            .populate(\"state\")\n            .populate(\"county\")\n            .exec();\n\n        if (!user) {\n            throw new Error(\"User not found.\");\n        }\n        if (otp && phone) {\n            if (!user.otp_access) {\n                throw new Error(`Authentication failed. OTP Access is ${user.otp_access}`);\n            }\n        }\n        if (!(bcryptjs.compareSync(password || \"\", user.password)\n        || (bcryptjs.compareSync(otp || \"\", user.otp) && user.otp_access))) {\n            throw new Error(\"Wrong password or otp credentials.\");\n        }\n        const query = { _id: user._id };\n        const update = { otp_access: false };\n        await Student.findOneAndUpdate(query, update, { new: true }).exec();\n\n        // Delete private attributes\n        user.password = null;\n        user.otp = null;\n        delete user.password;\n        delete user.otp;\n        const payload = {\n            id: user.id,\n            userType: \"student\",\n            email,\n            phone,\n            time: new Date(),\n        };\n\n        token = jwt.sign(payload, JWT.jwtSecret, {\n            expiresIn: \"240h\", // JWT.tokenExpireTime,\n        });\n    } catch (err) {\n        throw new Error(`Authentication failed ${err.message}`);\n    }\n    return { token, user };\n}\n"]}