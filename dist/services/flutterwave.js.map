{"version":3,"sources":["../../src/services/flutterwave.js"],"names":["rp","FLUTTERWAVE","secretKey","FLW_URL","TEST_URL","process","env","NODE_ENV","headersObj","Accept","json","verifyTransaction","txRef","payload","SECKEY","txref","options","method","uri","VERIFY","body","headers","then","response","catch","e","Error","error","getTransaction","timeline","seckey","url","TRANSACTION","TRANSACTION_EVENTS","err","getSettlement","SETTLEMENT","getSubaccount","id","page","SUBACCOUNT","createSubaccount","console","log","updateSubaccount","deleteSubaccount","getBVn","bvn","BVN"],"mappings":"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","file":"flutterwave.js","sourcesContent":["import rp from \"request-promise\";\nimport { FLUTTERWAVE } from \"../constants\";\n\nconst secretKey = \"FLWSECK-e6db11d1f8a6208de8cb2f94e293450e-X\";\n\nlet FLW_URL = FLUTTERWAVE.TEST_URL;\nif (process.env.NODE_ENV === \"production\") {\n//  FLW_URL = FLUTTERWAVE.LIVE_URL;\n// publicKey = process.env.FLUTTERWAVE_PUBLIC_KEY;\n// secretKey = process.env.FLUTTERWAVE_SECRET_KEY;\n// tnxHash = process.env.FLUTTERWAVE_HASH;\n}\n\nconst headersObj = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    json: true,\n};\n\nexport function verifyTransaction(txRef) {\n    const payload = { SECKEY: secretKey, txref: txRef };\n    const options = {\n        method: \"POST\",\n        uri: `${FLW_URL}${FLUTTERWAVE.VERIFY}`,\n        body: payload,\n        headers: headersObj,\n        json: true, // Automatically stringifies the body to JSON\n    };\n    return rp(options).then(response => response) // const { status, message, data } = response;\n        .catch((e) => {\n            throw new Error(e.error);\n        // const { name, statusCode, message, error, options, response } = e;\n        });\n}\n\nexport function getTransaction(payload = {}, timeline = false) {\n    payload.seckey = secretKey;\n    let url = `${FLW_URL}${FLUTTERWAVE.TRANSACTION}/query`;\n    if (timeline) {\n        url = `${FLW_URL}${FLUTTERWAVE.TRANSACTION_EVENTS}`;\n    }\n    const options = {\n        method: \"POST\",\n        uri: url,\n        headers: headersObj,\n        body: payload,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function getSettlement(payload = {}) {\n    payload.seckey = secretKey;\n    const options = {\n        method: \"POST\",\n        uri: `${FLW_URL}${FLUTTERWAVE.SETTLEMENT}`,\n        headers: headersObj,\n        body: payload,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function getSubaccount(id = \"\", page = 1) {\n    let url = `${FLW_URL}${FLUTTERWAVE.SUBACCOUNT}?seckey=${secretKey}&page=${page}`;\n    if (id) url = `${FLW_URL}${FLUTTERWAVE.SUBACCOUNT}/get/${id}?seckey=${secretKey}`;\n    const options = {\n        method: \"GET\",\n        uri: url,\n        headers: headersObj,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function createSubaccount(payload) {\n    payload.seckey = secretKey;\n    const options = {\n        method: \"POST\",\n        uri: `${FLW_URL}${FLUTTERWAVE.SUBACCOUNT}/create`,\n        body: payload,\n        headers: headersObj,\n        json: true,\n    };\n    console.log(options);\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function updateSubaccount(payload) {\n    payload.seckey = secretKey;\n    const options = {\n        method: \"POST\",\n        uri: `${FLW_URL}${FLUTTERWAVE.SUBACCOUNT}/edit`,\n        body: payload,\n        headers: headersObj,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function deleteSubaccount(id) {\n    const payload = { id, seckey: secretKey };\n    const options = {\n        method: \"POST\",\n        uri: `${FLW_URL}${FLUTTERWAVE.SUBACCOUNT}/delete`,\n        body: payload,\n        headers: headersObj,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function getBVn(bvn) {\n    const url = `${FLW_URL}${FLUTTERWAVE.BVN}/${bvn}?seckey=${secretKey}`;\n    const options = {\n        method: \"GET\",\n        uri: url,\n        headers: headersObj,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n"]}