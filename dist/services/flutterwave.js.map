{"version":3,"sources":["../../src/services/flutterwave.js"],"names":["verifyTransaction","getTransaction","getSettlement","getSubaccount","createSubaccount","updateSubaccount","deleteSubaccount","getBVn","secretKey","FLW_URL","FLUTTERWAVE","TEST_URL","process","env","NODE_ENV","headersObj","Accept","json","txRef","payload","SECKEY","txref","options","method","uri","VERIFY","body","headers","then","response","catch","e","Error","error","timeline","seckey","url","TRANSACTION","TRANSACTION_EVENTS","err","SETTLEMENT","id","page","SUBACCOUNT","console","log","bvn","BVN"],"mappings":"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","file":"flutterwave.js","sourcesContent":["import rp from \"request-promise\";\nimport { FLUTTERWAVE } from \"../constants\";\n\nconst secretKey = \"FLWSECK-e6db11d1f8a6208de8cb2f94e293450e-X\";\n\nlet FLW_URL = FLUTTERWAVE.TEST_URL;\nif (process.env.NODE_ENV === \"production\") {\n//  FLW_URL = FLUTTERWAVE.LIVE_URL;\n// publicKey = process.env.FLUTTERWAVE_PUBLIC_KEY;\n// secretKey = process.env.FLUTTERWAVE_SECRET_KEY;\n// tnxHash = process.env.FLUTTERWAVE_HASH;\n}\n\nconst headersObj = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    json: true,\n};\n\nexport function verifyTransaction(txRef) {\n    const payload = { SECKEY: secretKey, txref: txRef };\n    const options = {\n        method: \"POST\",\n        uri: `${FLW_URL}${FLUTTERWAVE.VERIFY}`,\n        body: payload,\n        headers: headersObj,\n        json: true, // Automatically stringifies the body to JSON\n    };\n    return rp(options).then(response => response) // const { status, message, data } = response;\n        .catch((e) => {\n            throw new Error(e.error);\n        // const { name, statusCode, message, error, options, response } = e;\n        });\n}\n\nexport function getTransaction(payload = {}, timeline = false) {\n    payload.seckey = secretKey;\n    let url = `${FLW_URL}${FLUTTERWAVE.TRANSACTION}/query`;\n    if (timeline) {\n        url = `${FLW_URL}${FLUTTERWAVE.TRANSACTION_EVENTS}`;\n    }\n    const options = {\n        method: \"POST\",\n        uri: url,\n        headers: headersObj,\n        body: payload,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function getSettlement(payload = {}) {\n    payload.seckey = secretKey;\n    const options = {\n        method: \"POST\",\n        uri: `${FLW_URL}${FLUTTERWAVE.SETTLEMENT}`,\n        headers: headersObj,\n        body: payload,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function getSubaccount(id = \"\", page = 1) {\n    let url = `${FLW_URL}${FLUTTERWAVE.SUBACCOUNT}?seckey=${secretKey}&page=${page}`;\n    if (id) url = `${FLW_URL}${FLUTTERWAVE.SUBACCOUNT}/get/${id}?seckey=${secretKey}`;\n    const options = {\n        method: \"GET\",\n        uri: url,\n        headers: headersObj,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function createSubaccount(payload) {\n    payload.seckey = secretKey;\n    const options = {\n        method: \"POST\",\n        uri: `${FLW_URL}${FLUTTERWAVE.SUBACCOUNT}/create`,\n        body: payload,\n        headers: headersObj,\n        json: true,\n    };\n    console.log(options);\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function updateSubaccount(payload) {\n    payload.seckey = secretKey;\n    const options = {\n        method: \"POST\",\n        uri: `${FLW_URL}${FLUTTERWAVE.SUBACCOUNT}/edit`,\n        body: payload,\n        headers: headersObj,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function deleteSubaccount(id) {\n    const payload = { id, seckey: secretKey };\n    const options = {\n        method: \"POST\",\n        uri: `${FLW_URL}${FLUTTERWAVE.SUBACCOUNT}/delete`,\n        body: payload,\n        headers: headersObj,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n\nexport function getBVn(bvn) {\n    const url = `${FLW_URL}${FLUTTERWAVE.BVN}/${bvn}?seckey=${secretKey}`;\n    const options = {\n        method: \"GET\",\n        uri: url,\n        headers: headersObj,\n        json: true,\n    };\n    return rp(options).then(response => response).catch(err => err);\n}\n"]}