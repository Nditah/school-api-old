{"version":3,"sources":["../../src/middleware/authorization.js"],"names":["verify","JWT","fail","hasProp","getToken","req","headers","authorization","split","query","token","checkAuth","res","next","jwtSecret","err","decoded","user","userType","id","email","terminal","vehicle","role","phone","method","body","created_by","updated_by","isValidStaff","console","log","isValidPartner","isValidDriver","isValidCustomer","isValidRole","officeArray","roleCode","result","find","office","code","isValidPmlTerminalClerk","isValidPmtTerminalClerk","isValidPmlTerminalSupervisor","isValidPmtTerminalSupervisor","isValidPmtTerminalAccountant","isValidPmlTerminalAccountant","isValidPmlDispatchRider","isValidPmtTerminalLoader","isValidTerminalSecurity"],"mappings":"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","file":"authorization.js","sourcesContent":["import { verify } from \"jsonwebtoken\";\nimport { JWT } from \"../constants\";\nimport { fail } from \"../lib/response\";\nimport { hasProp } from \"../lib/helpers\";\n\n// Retrieve token from request header\nexport function getToken(req) {\n    if (req.headers.authorization && req.headers.authorization.split(\" \")[ 0 ] === \"Bearer\") {\n        return req.headers.authorization.split(\" \")[ 1 ];\n    } if (req.query && hasProp(req.query, \"token\")) {\n        return req.query.token;\n    }\n    return null;\n}\n\nexport function checkAuth(req, res, next) {\n    const token = getToken(req);\n    if (!token) return fail(res, 403, \"No token found in request header!\");\n    return verify(token, JWT.jwtSecret, (err, decoded) => {\n        if (err) return fail(res, 403, \"Failed to authenticate token.!\");\n        req.user = {\n            userType: decoded.userType,\n            id: decoded.id,\n            email: decoded.email,\n            terminal: decoded.terminal,\n            vehicle: decoded.vehicle,\n            role: decoded.role,\n            phone: decoded.phone,\n        };\n        if (req.method === \"POST\") {\n            req.body.created_by = req.user.id;\n        } else if (req.method === \"PUT\") {\n            req.body.updated_by = req.user.id;\n        }\n        return next();\n    });\n}\n\nexport function isValidStaff(req, res, next) {\n    const { userType, id, email, terminal, phone, role } = req.user;\n    if (userType !== \"staff\") return fail(res, 403, \"Invalid Staff credentials!\");\n    console.log(`\\nValidating userType ${userType}, id ${id}, email ${email}, \n    Terminal ${terminal}, phone ${phone}, role ${role}`);\n    return next();\n}\n\nexport function isValidPartner(req, res, next) {\n    const { userType, id, email } = req.user;\n    if (userType !== \"partner\") return fail(res, 403, \"Invalid Partner credentials!\");\n    console.log(`\\nValidating userType ${userType}, id ${id}, email ${email}`);\n    return next();\n}\n\nexport function isValidDriver(req, res, next) {\n    const { userType, id, email, vehicle } = req.user;\n    if (userType !== \"driver\") return fail(res, 403, \"Invalid Partner credentials!\");\n    console.log(`\\nValidating userType ${userType}, id ${id}, email ${email} vehicle ${vehicle}`);\n    return next();\n}\n\nexport function isValidCustomer(req, res, next) {\n    const { userType, id, email, phone } = req.user;\n    if (userType !== \"customer\") return fail(res, 403, \"Invalid Customer credentials!\");\n    console.log(`\\nValidating userType ${userType}, id ${id}, email ${email} phone ${phone}`);\n    return next();\n}\n\nfunction isValidRole(officeArray = [], roleCode) {\n    const result = officeArray.find(office => office.code === roleCode);\n    return (result != null);\n}\n\n//* =============== TERMINAL ROLES ===================== //\n\nexport function isValidPmlTerminalClerk(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PML_TERMINAL_CLERK\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PML_TERMINAL_CLERK\");\n    }\n    return next();\n}\n\nexport function isValidPmtTerminalClerk(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PMT_TERMINAL_CLERK\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PMT_TERMINAL_CLERK\");\n    }\n    return next();\n}\n\nexport function isValidPmlTerminalSupervisor(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PML_TERMINAL_SUPERVISOR\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PML_TERMINAL_SUPERVISOR\");\n    }\n    return next();\n}\n\nexport function isValidPmtTerminalSupervisor(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PMT_TERMINAL_SUPERVISOR\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PMT_TERMINAL_SUPERVISOR\");\n    }\n    return next();\n}\n\nexport function isValidPmtTerminalAccountant(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PMT_TERMINAL_ACCOUNTANT\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PMT_TERMINAL_ACCOUNTANT\");\n    }\n    return next();\n}\n\nexport function isValidPmlTerminalAccountant(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PML_TERMINAL_ACCOUNTANT\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PML_TERMINAL_ACCOUNTANT\");\n    }\n    return next();\n}\n\nexport function isValidPmlDispatchRider(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PML_DISPATCH_RIDER\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PML_DISPATCH_RIDER\");\n    }\n    return next();\n}\n\nexport function isValidPmtTerminalLoader(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PMT_TERMINAL_LOADER\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PMT_TERMINAL_LOADER\");\n    }\n    return next();\n}\n\nexport function isValidTerminalSecurity(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"TERMINAL_SECURITY\")) {\n        return fail(res, 403, \"Invalid user-role. Required: TERMINAL_SECURITY\");\n    }\n    return next();\n}\n"]}