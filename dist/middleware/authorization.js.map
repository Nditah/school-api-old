{"version":3,"sources":["../../src/middleware/authorization.js"],"names":["getToken","checkAuth","isValidStaff","isValidPartner","isValidDriver","isValidCustomer","isValidPmlTerminalClerk","isValidPmtTerminalClerk","isValidPmlTerminalSupervisor","isValidPmtTerminalSupervisor","isValidPmtTerminalAccountant","isValidPmlTerminalAccountant","isValidPmlDispatchRider","isValidPmtTerminalLoader","isValidTerminalSecurity","req","headers","authorization","split","query","token","res","next","JWT","jwtSecret","err","decoded","user","userType","id","email","terminal","vehicle","role","phone","method","body","created_by","updated_by","console","log","isValidRole","officeArray","roleCode","result","find","office","code"],"mappings":"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","file":"authorization.js","sourcesContent":["import { verify } from \"jsonwebtoken\";\nimport { JWT } from \"../constants\";\nimport { fail } from \"../lib/response\";\nimport { hasProp } from \"../lib/helpers\";\n\n// Retrieve token from request header\nexport function getToken(req) {\n    if (req.headers.authorization && req.headers.authorization.split(\" \")[ 0 ] === \"Bearer\") {\n        return req.headers.authorization.split(\" \")[ 1 ];\n    } if (req.query && hasProp(req.query, \"token\")) {\n        return req.query.token;\n    }\n    return null;\n}\n\nexport function checkAuth(req, res, next) {\n    const token = getToken(req);\n    if (!token) return fail(res, 403, \"No token found in request header!\");\n    return verify(token, JWT.jwtSecret, (err, decoded) => {\n        if (err) return fail(res, 403, \"Failed to authenticate token.!\");\n        req.user = {\n            userType: decoded.userType,\n            id: decoded.id,\n            email: decoded.email,\n            terminal: decoded.terminal,\n            vehicle: decoded.vehicle,\n            role: decoded.role,\n            phone: decoded.phone,\n        };\n        if (req.method === \"POST\") {\n            req.body.created_by = req.user.id;\n        } else if (req.method === \"PUT\") {\n            req.body.updated_by = req.user.id;\n        }\n        return next();\n    });\n}\n\nexport function isValidStaff(req, res, next) {\n    const { userType, id, email, terminal, phone, role } = req.user;\n    if (userType !== \"staff\") return fail(res, 403, \"Invalid Staff credentials!\");\n    console.log(`\\nValidating userType ${userType}, id ${id}, email ${email}, \n    Terminal ${terminal}, phone ${phone}, role ${role}`);\n    return next();\n}\n\nexport function isValidPartner(req, res, next) {\n    const { userType, id, email } = req.user;\n    if (userType !== \"partner\") return fail(res, 403, \"Invalid Partner credentials!\");\n    console.log(`\\nValidating userType ${userType}, id ${id}, email ${email}`);\n    return next();\n}\n\nexport function isValidDriver(req, res, next) {\n    const { userType, id, email, vehicle } = req.user;\n    if (userType !== \"driver\") return fail(res, 403, \"Invalid Partner credentials!\");\n    console.log(`\\nValidating userType ${userType}, id ${id}, email ${email} vehicle ${vehicle}`);\n    return next();\n}\n\nexport function isValidCustomer(req, res, next) {\n    const { userType, id, email, phone } = req.user;\n    if (userType !== \"customer\") return fail(res, 403, \"Invalid Customer credentials!\");\n    console.log(`\\nValidating userType ${userType}, id ${id}, email ${email} phone ${phone}`);\n    return next();\n}\n\nfunction isValidRole(officeArray = [], roleCode) {\n    const result = officeArray.find(office => office.code === roleCode);\n    return (result != null);\n}\n\n//* =============== TERMINAL ROLES ===================== //\n\nexport function isValidPmlTerminalClerk(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PML_TERMINAL_CLERK\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PML_TERMINAL_CLERK\");\n    }\n    return next();\n}\n\nexport function isValidPmtTerminalClerk(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PMT_TERMINAL_CLERK\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PMT_TERMINAL_CLERK\");\n    }\n    return next();\n}\n\nexport function isValidPmlTerminalSupervisor(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PML_TERMINAL_SUPERVISOR\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PML_TERMINAL_SUPERVISOR\");\n    }\n    return next();\n}\n\nexport function isValidPmtTerminalSupervisor(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PMT_TERMINAL_SUPERVISOR\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PMT_TERMINAL_SUPERVISOR\");\n    }\n    return next();\n}\n\nexport function isValidPmtTerminalAccountant(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PMT_TERMINAL_ACCOUNTANT\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PMT_TERMINAL_ACCOUNTANT\");\n    }\n    return next();\n}\n\nexport function isValidPmlTerminalAccountant(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PML_TERMINAL_ACCOUNTANT\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PML_TERMINAL_ACCOUNTANT\");\n    }\n    return next();\n}\n\nexport function isValidPmlDispatchRider(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PML_DISPATCH_RIDER\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PML_DISPATCH_RIDER\");\n    }\n    return next();\n}\n\nexport function isValidPmtTerminalLoader(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"PMT_TERMINAL_LOADER\")) {\n        return fail(res, 403, \"Invalid user-role. Required: PMT_TERMINAL_LOADER\");\n    }\n    return next();\n}\n\nexport function isValidTerminalSecurity(req, res, next) {\n    const { role } = req.user;\n    if (!isValidRole(role, \"TERMINAL_SECURITY\")) {\n        return fail(res, 403, \"Invalid user-role. Required: TERMINAL_SECURITY\");\n    }\n    return next();\n}\n"]}