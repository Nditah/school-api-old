{"version":3,"sources":["../src/chat.js"],"names":["express","bodyParser","morgan","dotenv","cors","compression","path","helmet","http","Chat","peacegroupApi","pmtApi","pmlApi","database","config","app","server","createServer","io","require","hostname","port","process","env","PORT","chatPort","PORT_CHAT","defaultPath","join","__dirname","use","urlencoded","extended","limit","json","static","on","console","error","bind","once","log","get","req","res","render","next","locals","userId","userType","role","Error","status","success","payload","message","listen","socket","data","broadcast","emit","user","msg","chatMessage","sender","save","id","err"],"mappings":"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","file":"chat.js","sourcesContent":["import \"babel-polyfill\";\nimport express from \"express\";\nimport bodyParser from \"body-parser\";\nimport morgan from \"morgan\";\nimport dotenv from \"dotenv\";\nimport cors from \"cors\";\n\nimport compression from \"compression\";\nimport path from \"path\";\nimport helmet from \"helmet\";\n\nimport http from \"http\";\n\n// import routes\nimport Chat from \"./api/general/chat/model\";\nimport { peacegroupApi, pmtApi, pmlApi } from \"./api\";\nimport database from \"./config\";\n\ndotenv.config();\nconst app = express();\nconst server = http.createServer(app);\nconst io = require(\"socket.io\")(server);\n\nconst hostname = \"0.0.0.0\"; // \"localhost\";\nconst port = process.env.PORT || 5000;\nconst chatPort = process.env.PORT_CHAT || 7000;\nconst defaultPath = path.join(__dirname, \"/public\");\n\napp.use(helmet());\napp.use(bodyParser.urlencoded({ extended: true, limit: \"50mb\" }));\napp.use(bodyParser.json({ limit: \"50mb\" }));\napp.use(morgan(\"dev\"));\napp.use(cors());\napp.use(compression());\napp.use(express.static(defaultPath));\n\ndatabase.on(\"error\", console.error.bind(console, \"Connection error:\"));\ndatabase.once(\"open\", () => {\n    console.log(\"Successfully connected to the database!\");\n});\n\napp.get(\"/\", (req, res) => {\n    console.log(\"defaultPath \", defaultPath);\n    res.render(`${defaultPath}/index.html`);\n});\n\napp.get(\"/chat\", (req, res) => {\n    console.log(`${defaultPath}/index.html`);\n    res.render(`${defaultPath}/index.html`);\n});\n\n// modify request object\napp.use((req, res, next) => {\n    res.locals.userId = 0.0;\n    res.locals.userType = \"anonymous\";\n    res.locals.role = \"\";\n    next();\n});\n\n// Use Routes\napp.use(\"/api\", peacegroupApi);\napp.use(\"/api\", pmtApi);\napp.use(\"/api\", pmlApi);\n\napp.use((req, res, next) => {\n    const error = new Error(\"Not found!\");\n    error.status = 404;\n    next(error);\n});\n\napp.use((error, req, res, next) => {\n    res.status(error.status || 500);\n    res.json({\n        success: false,\n        payload: null,\n        message: `SCHOOL API says ${error.message}`,\n    });\n    next();\n});\n\n// listen for requests\napp.listen(port, hostname, () => {\n    console.log(`Server running at http://${hostname}:${port}/`);\n});\n\n// setup event listener\nio.on(\"connection\", (socket) => {\n    console.log(\"user connected\");\n\n    socket.on(\"disconnect\", () => {\n        console.log(\"user disconnected\");\n    });\n\n    // Someone is typing\n    socket.on(\"typing\", (data) => {\n        socket.broadcast.emit(\"notifyTyping\", {\n            user: data.user,\n            message: data.message,\n        });\n    });\n\n    // when soemone stops typing\n    socket.on(\"stopTyping\", () => {\n        socket.broadcast.emit(\"notifyStopTyping\");\n    });\n\n    socket.on(\"chat message\", (msg) => {\n        console.log(`message: ${msg}`);\n\n        // broadcast message to everyone in port:5000 except yourself.\n        socket.broadcast.emit(\"received\", { message: msg });\n\n        // save chat to the database\n        const chatMessage = new Chat({ message: msg, sender: \"Anonymous\" });\n        chatMessage.save();\n\n        socket.on(\"disconnect\", () => {\n            console.log(\"client disconnect...\", socket.id);\n            // handleDisconnect();\n        });\n\n        socket.on(\"error\", (err) => {\n            console.log(\"received error from client:\", socket.id);\n            console.log(err);\n        });\n    });\n});\n\nserver.listen(chatPort, () => {\n    console.log(`ChatApp listens on port ${chatPort}`);\n});\n\nexport default app;\n"]}